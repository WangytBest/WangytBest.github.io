{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":0,"renderable":0},{"_id":"themes/material/source/css/disqus-proxy.min.css","path":"css/disqus-proxy.min.css","modified":0,"renderable":1},{"_id":"themes/material/source/css/disqus-proxy.css","path":"css/disqus-proxy.css","modified":0,"renderable":1},{"_id":"themes/material/source/css/duoshuo.css","path":"css/duoshuo.css","modified":0,"renderable":1},{"_id":"themes/material/source/css/duoshuo.min.css","path":"css/duoshuo.min.css","modified":0,"renderable":1},{"_id":"themes/material/source/css/fontawesome.min.css","path":"css/fontawesome.min.css","modified":0,"renderable":1},{"_id":"themes/material/source/css/gallery.min.css","path":"css/gallery.min.css","modified":0,"renderable":1},{"_id":"themes/material/source/css/ie-blocker.css","path":"css/ie-blocker.css","modified":0,"renderable":1},{"_id":"themes/material/source/css/prettify.css","path":"css/prettify.css","modified":0,"renderable":1},{"_id":"themes/material/source/css/timeline.css","path":"css/timeline.css","modified":0,"renderable":1},{"_id":"themes/material/source/css/uc.css","path":"css/uc.css","modified":0,"renderable":1},{"_id":"themes/material/source/css/prettify.min.css","path":"css/prettify.min.css","modified":0,"renderable":1},{"_id":"themes/material/source/fonts/MaterialIcons-Regular.woff","path":"fonts/MaterialIcons-Regular.woff","modified":0,"renderable":1},{"_id":"themes/material/source/fonts/MaterialIcons-Regular.woff2","path":"fonts/MaterialIcons-Regular.woff2","modified":0,"renderable":1},{"_id":"themes/material/source/img/avatar.png","path":"img/avatar.png","modified":0,"renderable":1},{"_id":"themes/material/source/img/bg.png","path":"img/bg.png","modified":0,"renderable":1},{"_id":"themes/material/source/img/browserstack_logo.png","path":"img/browserstack_logo.png","modified":0,"renderable":1},{"_id":"themes/material/source/img/favicon.png","path":"img/favicon.png","modified":0,"renderable":1},{"_id":"themes/material/source/img/logo.png","path":"img/logo.png","modified":0,"renderable":1},{"_id":"themes/material/source/img/sidebar_header.png","path":"img/sidebar_header.png","modified":0,"renderable":1},{"_id":"themes/material/source/img/upyun_logo.svg","path":"img/upyun_logo.svg","modified":0,"renderable":1},{"_id":"themes/material/source/js/Valine.min.js","path":"js/Valine.min.js","modified":0,"renderable":1},{"_id":"themes/material/source/js/MathJax.js","path":"js/MathJax.js","modified":0,"renderable":1},{"_id":"themes/material/source/js/hanabi-browser-bundle.js","path":"js/hanabi-browser-bundle.js","modified":0,"renderable":1},{"_id":"themes/material/source/js/ie-blocker.en.js","path":"js/ie-blocker.en.js","modified":0,"renderable":1},{"_id":"themes/material/source/js/ie-blocker.zhCN.js","path":"js/ie-blocker.zhCN.js","modified":0,"renderable":1},{"_id":"themes/material/source/js/lazyload.min.js","path":"js/lazyload.min.js","modified":0,"renderable":1},{"_id":"themes/material/source/js/lsloader.js","path":"js/lsloader.js","modified":0,"renderable":1},{"_id":"themes/material/source/js/nprogress.js","path":"js/nprogress.js","modified":0,"renderable":1},{"_id":"themes/material/source/js/lsloader.min.js","path":"js/lsloader.min.js","modified":0,"renderable":1},{"_id":"themes/material/source/js/prettify.min.js","path":"js/prettify.min.js","modified":0,"renderable":1},{"_id":"themes/material/source/js/queue.min.js","path":"js/queue.min.js","modified":0,"renderable":1},{"_id":"themes/material/source/js/queue.js","path":"js/queue.js","modified":0,"renderable":1},{"_id":"themes/material/source/js/smoothscroll.js","path":"js/smoothscroll.js","modified":0,"renderable":1},{"_id":"themes/material/source/css/material.css","path":"css/material.css","modified":0,"renderable":1},{"_id":"themes/material/source/css/material.min.css","path":"css/material.min.css","modified":0,"renderable":1},{"_id":"themes/material/source/css/style.min.css","path":"css/style.min.css","modified":0,"renderable":1},{"_id":"themes/material/source/css/style.css","path":"css/style.css","modified":0,"renderable":1},{"_id":"themes/material/source/fonts/MaterialIcons-Regular.ttf","path":"fonts/MaterialIcons-Regular.ttf","modified":0,"renderable":1},{"_id":"themes/material/source/fonts/fontawesome-webfont.woff","path":"fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/material/source/fonts/fontawesome-webfont.woff2","path":"fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/material/source/img/daily_pic.png","path":"img/daily_pic.png","modified":0,"renderable":1},{"_id":"themes/material/source/js/jquery.min.js","path":"js/jquery.min.js","modified":0,"renderable":1},{"_id":"themes/material/source/js/js.js","path":"js/js.js","modified":0,"renderable":1},{"_id":"themes/material/source/js/js.min.js","path":"js/js.min.js","modified":0,"renderable":1},{"_id":"themes/material/source/css/prettify/atelier-cave-dark.min.css","path":"css/prettify/atelier-cave-dark.min.css","modified":0,"renderable":1},{"_id":"themes/material/source/css/prettify/atelier-cave-light.min.css","path":"css/prettify/atelier-cave-light.min.css","modified":0,"renderable":1},{"_id":"themes/material/source/css/prettify/atelier-dune-dark.min.css","path":"css/prettify/atelier-dune-dark.min.css","modified":0,"renderable":1},{"_id":"themes/material/source/css/prettify/atelier-dune-light.min.css","path":"css/prettify/atelier-dune-light.min.css","modified":0,"renderable":1},{"_id":"themes/material/source/css/prettify/atelier-estuary-dark.min.css","path":"css/prettify/atelier-estuary-dark.min.css","modified":0,"renderable":1},{"_id":"themes/material/source/css/prettify/atelier-estuary-light.min.css","path":"css/prettify/atelier-estuary-light.min.css","modified":0,"renderable":1},{"_id":"themes/material/source/css/prettify/atelier-forest-dark.min.css","path":"css/prettify/atelier-forest-dark.min.css","modified":0,"renderable":1},{"_id":"themes/material/source/css/prettify/atelier-forest-light.min.css","path":"css/prettify/atelier-forest-light.min.css","modified":0,"renderable":1},{"_id":"themes/material/source/css/prettify/atelier-heath-dark.min.css","path":"css/prettify/atelier-heath-dark.min.css","modified":0,"renderable":1},{"_id":"themes/material/source/css/prettify/atelier-heath-light.min.css","path":"css/prettify/atelier-heath-light.min.css","modified":0,"renderable":1},{"_id":"themes/material/source/css/prettify/atelier-lakeside-dark.min.css","path":"css/prettify/atelier-lakeside-dark.min.css","modified":0,"renderable":1},{"_id":"themes/material/source/css/prettify/atelier-lakeside-light.min.css","path":"css/prettify/atelier-lakeside-light.min.css","modified":0,"renderable":1},{"_id":"themes/material/source/css/prettify/atelier-plateau-dark.min.css","path":"css/prettify/atelier-plateau-dark.min.css","modified":0,"renderable":1},{"_id":"themes/material/source/css/prettify/atelier-plateau-light.min.css","path":"css/prettify/atelier-plateau-light.min.css","modified":0,"renderable":1},{"_id":"themes/material/source/css/prettify/atelier-savanna-dark.min.css","path":"css/prettify/atelier-savanna-dark.min.css","modified":0,"renderable":1},{"_id":"themes/material/source/css/prettify/atelier-savanna-light.min.css","path":"css/prettify/atelier-savanna-light.min.css","modified":0,"renderable":1},{"_id":"themes/material/source/css/prettify/atelier-seaside-light.min.css","path":"css/prettify/atelier-seaside-light.min.css","modified":0,"renderable":1},{"_id":"themes/material/source/css/prettify/atelier-seaside-dark.min.css","path":"css/prettify/atelier-seaside-dark.min.css","modified":0,"renderable":1},{"_id":"themes/material/source/css/prettify/atelier-sulphurpool-light.min.css","path":"css/prettify/atelier-sulphurpool-light.min.css","modified":0,"renderable":1},{"_id":"themes/material/source/css/prettify/atelier-sulphurpool-dark.min.css","path":"css/prettify/atelier-sulphurpool-dark.min.css","modified":0,"renderable":1},{"_id":"themes/material/source/css/prettify/github.min.css","path":"css/prettify/github.min.css","modified":0,"renderable":1},{"_id":"themes/material/source/css/prettify/github-v2.min.css","path":"css/prettify/github-v2.min.css","modified":0,"renderable":1},{"_id":"themes/material/source/css/prettify/hemisu-dark.min.css","path":"css/prettify/hemisu-dark.min.css","modified":0,"renderable":1},{"_id":"themes/material/source/css/prettify/hemisu-light.min.css","path":"css/prettify/hemisu-light.min.css","modified":0,"renderable":1},{"_id":"themes/material/source/css/prettify/tomorrow-night-bright.min.css","path":"css/prettify/tomorrow-night-bright.min.css","modified":0,"renderable":1},{"_id":"themes/material/source/css/prettify/tomorrow-night-blue.min.css","path":"css/prettify/tomorrow-night-blue.min.css","modified":0,"renderable":1},{"_id":"themes/material/source/css/prettify/tomorrow-night-eighties.min.css","path":"css/prettify/tomorrow-night-eighties.min.css","modified":0,"renderable":1},{"_id":"themes/material/source/css/prettify/tomorrow-night.min.css","path":"css/prettify/tomorrow-night.min.css","modified":0,"renderable":1},{"_id":"themes/material/source/css/prettify/tomorrow.min.css","path":"css/prettify/tomorrow.min.css","modified":0,"renderable":1},{"_id":"themes/material/source/css/prettify/tranquil-heart.min.css","path":"css/prettify/tranquil-heart.min.css","modified":0,"renderable":1},{"_id":"themes/material/source/css/prettify/vibrant-ink.min.css","path":"css/prettify/vibrant-ink.min.css","modified":0,"renderable":1},{"_id":"themes/material/source/fonts/MaterialIcons-Regular.eot","path":"fonts/MaterialIcons-Regular.eot","modified":0,"renderable":1},{"_id":"themes/material/source/fonts/FontAwesome.otf","path":"fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/material/source/fonts/fontawesome-webfont.eot","path":"fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/material/source/fonts/fontawesome-webfont.ttf","path":"fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/material/source/img/footer/footer_ico-bilibili.svg","path":"img/footer/footer_ico-bilibili.svg","modified":0,"renderable":1},{"_id":"themes/material/source/img/footer/footer_ico-facebook.svg","path":"img/footer/footer_ico-facebook.svg","modified":0,"renderable":1},{"_id":"themes/material/source/img/footer/footer_ico-gplus.svg","path":"img/footer/footer_ico-gplus.svg","modified":0,"renderable":1},{"_id":"themes/material/source/img/footer/footer_ico-instagram.svg","path":"img/footer/footer_ico-instagram.svg","modified":0,"renderable":1},{"_id":"themes/material/source/img/footer/footer_ico-github.svg","path":"img/footer/footer_ico-github.svg","modified":0,"renderable":1},{"_id":"themes/material/source/img/footer/footer_ico-linkedin.svg","path":"img/footer/footer_ico-linkedin.svg","modified":0,"renderable":1},{"_id":"themes/material/source/img/footer/footer_ico-telegram.svg","path":"img/footer/footer_ico-telegram.svg","modified":0,"renderable":1},{"_id":"themes/material/source/img/footer/footer_ico-tumblr.svg","path":"img/footer/footer_ico-tumblr.svg","modified":0,"renderable":1},{"_id":"themes/material/source/img/footer/footer_ico-twitter.svg","path":"img/footer/footer_ico-twitter.svg","modified":0,"renderable":1},{"_id":"themes/material/source/img/footer/footer_ico-weibo.svg","path":"img/footer/footer_ico-weibo.svg","modified":0,"renderable":1},{"_id":"themes/material/source/img/footer/footer_ico-zhihu.svg","path":"img/footer/footer_ico-zhihu.svg","modified":0,"renderable":1},{"_id":"themes/material/source/img/gallery/arrow.svg","path":"img/gallery/arrow.svg","modified":0,"renderable":1},{"_id":"themes/material/source/img/gallery/close.svg","path":"img/gallery/close.svg","modified":0,"renderable":1},{"_id":"themes/material/source/img/gallery/spinner.svg","path":"img/gallery/spinner.svg","modified":0,"renderable":1},{"_id":"themes/material/source/img/random/material-10.png","path":"img/random/material-10.png","modified":0,"renderable":1},{"_id":"themes/material/source/img/random/material-12.png","path":"img/random/material-12.png","modified":0,"renderable":1},{"_id":"themes/material/source/img/random/material-17.png","path":"img/random/material-17.png","modified":0,"renderable":1},{"_id":"themes/material/source/img/random/material-19.png","path":"img/random/material-19.png","modified":0,"renderable":1},{"_id":"themes/material/source/img/random/material-3.png","path":"img/random/material-3.png","modified":0,"renderable":1},{"_id":"themes/material/source/img/random/material-4.png","path":"img/random/material-4.png","modified":0,"renderable":1},{"_id":"themes/material/source/img/random/material-6.png","path":"img/random/material-6.png","modified":0,"renderable":1},{"_id":"themes/material/source/img/random/material-8.png","path":"img/random/material-8.png","modified":0,"renderable":1},{"_id":"themes/material/source/img/random/material-9.png","path":"img/random/material-9.png","modified":0,"renderable":1},{"_id":"themes/material/source/js/gallery/gallery.js","path":"js/gallery/gallery.js","modified":0,"renderable":1},{"_id":"themes/material/source/img/footer/footer_ico-v2ex.svg","path":"img/footer/footer_ico-v2ex.svg","modified":0,"renderable":1},{"_id":"themes/material/source/img/random/material-1.png","path":"img/random/material-1.png","modified":0,"renderable":1},{"_id":"themes/material/source/img/random/material-11.png","path":"img/random/material-11.png","modified":0,"renderable":1},{"_id":"themes/material/source/img/random/material-13.png","path":"img/random/material-13.png","modified":0,"renderable":1},{"_id":"themes/material/source/img/random/material-14.png","path":"img/random/material-14.png","modified":0,"renderable":1},{"_id":"themes/material/source/img/random/material-15.png","path":"img/random/material-15.png","modified":0,"renderable":1},{"_id":"themes/material/source/img/random/material-16.png","path":"img/random/material-16.png","modified":0,"renderable":1},{"_id":"themes/material/source/img/random/material-18.png","path":"img/random/material-18.png","modified":0,"renderable":1},{"_id":"themes/material/source/img/random/material-2.png","path":"img/random/material-2.png","modified":0,"renderable":1},{"_id":"themes/material/source/img/random/material-5.png","path":"img/random/material-5.png","modified":0,"renderable":1},{"_id":"themes/material/source/img/random/material-7.png","path":"img/random/material-7.png","modified":0,"renderable":1},{"_id":"themes/material/source/fonts/fontawesome-webfont.svg","path":"fonts/fontawesome-webfont.svg","modified":0,"renderable":1},{"_id":"themes/material/source/fonts/Roboto-Light.ttf","path":"fonts/Roboto-Light.ttf","modified":0,"renderable":1},{"_id":"themes/material/source/fonts/Roboto-Black.ttf","path":"fonts/Roboto-Black.ttf","modified":0,"renderable":1},{"_id":"themes/material/source/fonts/Roboto-Medium.ttf","path":"fonts/Roboto-Medium.ttf","modified":0,"renderable":1},{"_id":"themes/material/source/fonts/Roboto-Bold.ttf","path":"fonts/Roboto-Bold.ttf","modified":0,"renderable":1},{"_id":"themes/material/source/fonts/Roboto-Thin.ttf","path":"fonts/Roboto-Thin.ttf","modified":0,"renderable":1},{"_id":"themes/material/source/fonts/Roboto-Regular.ttf","path":"fonts/Roboto-Regular.ttf","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/style.styl","path":"css/style.styl","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/blank.gif","path":"fancybox/blank.gif","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_loading.gif","path":"fancybox/fancybox_loading.gif","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_loading@2x.gif","path":"fancybox/fancybox_loading@2x.gif","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_overlay.png","path":"fancybox/fancybox_overlay.png","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_sprite.png","path":"fancybox/fancybox_sprite.png","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_sprite@2x.png","path":"fancybox/fancybox_sprite@2x.png","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.css","path":"fancybox/jquery.fancybox.css","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.js","path":"fancybox/jquery.fancybox.js","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.pack.js","path":"fancybox/jquery.fancybox.pack.js","modified":1,"renderable":1},{"_id":"themes/landscape/source/js/script.js","path":"js/script.js","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/fonts/FontAwesome.otf","path":"css/fonts/FontAwesome.otf","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.eot","path":"css/fonts/fontawesome-webfont.eot","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.woff","path":"css/fonts/fontawesome-webfont.woff","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/fancybox_buttons.png","path":"fancybox/helpers/fancybox_buttons.png","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.css","path":"fancybox/helpers/jquery.fancybox-buttons.css","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.js","path":"fancybox/helpers/jquery.fancybox-buttons.js","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-media.js","path":"fancybox/helpers/jquery.fancybox-media.js","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.js","path":"fancybox/helpers/jquery.fancybox-thumbs.js","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.css","path":"fancybox/helpers/jquery.fancybox-thumbs.css","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.ttf","path":"css/fonts/fontawesome-webfont.ttf","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.svg","path":"css/fonts/fontawesome-webfont.svg","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/images/banner.jpg","path":"css/images/banner.jpg","modified":1,"renderable":1}],"Cache":[{"_id":"source/CNAME","hash":"953fa75880ee0dd90018aff9ce26fe7944ac3005","modified":1505355463032},{"_id":"themes/material/.gitignore","hash":"a85feabaf63f493349ce7b5dbc4c633a188c5627","modified":1505723284375},{"_id":"themes/material/.eslintrc.json","hash":"f4cdab9b046c8ff4860c1962d3e58c41801ee0fc","modified":1505274222511},{"_id":"themes/material/CONTRIBUTING.md","hash":"502dc2e3887b9667b898709c3aab649884f3fdfa","modified":1505274222542},{"_id":"themes/material/CONTRIBUTING.zh-cn.md","hash":"84b5b1d1b77b0ec4e49ebb1a773965ac7c19ba7e","modified":1505274222547},{"_id":"themes/material/.travis.yml","hash":"a62e497c5914b403d5ccd86624238358c45c0760","modified":1505274222537},{"_id":"themes/material/LICENSE","hash":"2ea9f02239dc6b5fdbfff01fcdf85bcc8c13667c","modified":1505274222554},{"_id":"themes/material/README.md","hash":"6908910e2b5d5a44fa9670ee98d48e8eb6993a8b","modified":1505274222558},{"_id":"themes/material/_config.yml","hash":"0e328b9b9d92456593e6c5c9e2ea7bb5ea53570c","modified":1505789363137},{"_id":"themes/material/lint.sh","hash":"7d8c693175cf06c5de1dc0b964e13b2f052e6743","modified":1505274223821},{"_id":"themes/material/contributing.json","hash":"f6f039672fef8e0267d9586c73d1a425c6c882d8","modified":1505274222569},{"_id":"themes/material/package.json","hash":"0505f33089b38e7c1588363851bc198e8d405740","modified":1505274223825},{"_id":"themes/material/_config.template.yml","hash":"4b0b8292ddd6d527556b4ae70272de3321758341","modified":1505274222563},{"_id":"source/_data/ours.yml","hash":"978a59e7d1b175957f5e1d798305fc51632371bb","modified":1505787761640},{"_id":"source/_data/head.yml","hash":"cc5f54c59b08825c34d80502ea9edfda46824a60","modified":1505704392799},{"_id":"source/_posts/JS原生图片懒加载.md","hash":"65f98c19610a75e8f685bc89043edee2ff947ce1","modified":1506067773208},{"_id":"source/_data/gallery.yml","hash":"6f718c66054aff89dc0a588bc936a83640f59787","modified":1505372466812},{"_id":"source/_posts/React-渲染元素.md","hash":"a871fef327495df23e59d2cd5287bb0efc045520","modified":1506062957272},{"_id":"source/_posts/React-JSX.md","hash":"999637edf494a4962a7c48b854539df01caae518","modified":1506062957261},{"_id":"source/_posts/Uncaught-TypeError-angular-module-provider-info-is-not-a-function.md","hash":"3c8fccab6c57a290e7507ae6412150654b59e2e7","modified":1506062957276},{"_id":"source/_posts/hello-world.md","hash":"00d4995961190b9835d5e0a1756f339a15759d80","modified":1505463956138},{"_id":"source/gallery/index.md","hash":"4f312dbd2362b30dee1c2d0f0e096eebfc1f6314","modified":1505293183613},{"_id":"source/_posts/timelime.md","hash":"3f5edbb527c500c87b1285be424d9278b3885789","modified":1505365560142},{"_id":"source/music/index.md","hash":"917791fc5d40bd98771ddee7c5cf488823559c02","modified":1505705155491},{"_id":"source/links/index.md","hash":"5dec4ef321b9a8a4ecd911c77bfb49acbe6cf085","modified":1505293197903},{"_id":"source/matrix/index.md","hash":"a784d0db887d2789faed7379d2c8951d71d9a36c","modified":1505789476369},{"_id":"source/_posts/实现元素水平垂直居中.md","hash":"414951517b27aea80ad54ba47061b2302d875c38","modified":1506062957287},{"_id":"source/_posts/前端面试集（HTML-CSS）.md","hash":"06e8b6b3241448bce3b3694a0c0152f4597b782d","modified":1506062957283},{"_id":"source/_data/links.yml","hash":"48b9856e2f59e0b0e14f8977bc475606b5916630","modified":1505377194340},{"_id":"source/_posts/CSS中的content和attr.md","hash":"db1329b5ffd80c7c81f28669b3164e833c207785","modified":1506062957250},{"_id":"source/ours/index.md","hash":"f06a2935573c22b2816843dc01c524d2fb6e237f","modified":1506062957301},{"_id":"source/timeline/index.md","hash":"1cb9a4735edec0a0c49ffc2846d1414736270889","modified":1505294957609},{"_id":"source/tags/index.md","hash":"7400463ffbf9b346f02d7408bab776c32fdf9241","modified":1505294721968},{"_id":"themes/material/.github/PULL_REQUEST_TEMPLATE.md","hash":"3f7bdaf68dca7d537f8c0dd05185238148ef4b0e","modified":1505274222529},{"_id":"themes/material/.github/ISSUE_TEMPLATE.md","hash":"2117c7a87948799c8e21130f6f5e0bdfce5d9ad2","modified":1505274222523},{"_id":"themes/material/languages/ar.yml","hash":"5f112bda9600da133567303cf911ee148eaba807","modified":1505274222573},{"_id":"themes/material/languages/de.yml","hash":"61afd14ef56e862346ac4b55d0e36223f4a19137","modified":1505274222577},{"_id":"themes/material/languages/en.yml","hash":"8953930a994f3e9bcdfc24360ccb7904c1fcaaa1","modified":1505274222581},{"_id":"themes/material/languages/es.yml","hash":"485820c64bccba9dc9e0ebbb8f62d0cd580809dc","modified":1505274222585},{"_id":"themes/material/languages/fr.yml","hash":"3977c7809b3de4b5dd9e3f84e47b093f73282fe9","modified":1505274222589},{"_id":"themes/material/languages/ja.yml","hash":"a2ca0f671190960ae6b8691babf2ea7496cf7587","modified":1505274222600},{"_id":"themes/material/languages/ms.yml","hash":"16429e0bb9b7cdd8fa3e96c7596eade9314d50c3","modified":1505274222604},{"_id":"themes/material/languages/pt-BR.yml","hash":"96514cb251b5464f03da8214607d13d140fa2394","modified":1505274222609},{"_id":"themes/material/languages/zh-CN.yml","hash":"29c52d9e84afa48f9e59c107d8dda1c99eb31c08","modified":1505374273803},{"_id":"themes/material/languages/zh-TW.yml","hash":"01e35f701c973a77d89c2904a14eab987f8dafbb","modified":1505274222617},{"_id":"themes/material/scripts/helper.js","hash":"3c2df00f94625e8061b71fff33fdd33aad58b48f","modified":1505274223832},{"_id":"themes/material/layout/index.ejs","hash":"b68f162e312d6db8fc40b271d932e85fa1bf6961","modified":1505274223767},{"_id":"themes/material/layout/post.ejs","hash":"32d7e47b28c5e10c822a832b8afb4181e8f9bd5b","modified":1505789319653},{"_id":"themes/material/layout/layout.ejs","hash":"098d8702f88fe12d717e9af014b4d1248bc0646d","modified":1505274223789},{"_id":"themes/material/layout/_partial/Isolation-post-info.ejs","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1505274222618},{"_id":"themes/material/scripts/lib/font_lsload.js","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1505274223845},{"_id":"themes/material/layout/_partial/Paradox-post-info.ejs","hash":"3e8b27be91c2a5b81a850f1e5a06b8791d28f43b","modified":1505274222653},{"_id":"themes/material/layout/_partial/Paradox-post-thumbnail.ejs","hash":"2fc593894a8d22127e5bf04cdd4fc509b94e6e96","modified":1505274222661},{"_id":"themes/material/layout/_partial/Paradox-post_entry-thumbnail.ejs","hash":"18dbcf7ad03164c72beeff7d4e6238b2762cb30d","modified":1505381790100},{"_id":"themes/material/layout/_partial/Paradox-post_entry.ejs","hash":"7a11c6676bf70b1ddc8e2a2e6b6932ed936c38d9","modified":1505385568600},{"_id":"themes/material/layout/_partial/comment.ejs","hash":"22c8ddb0d9033257664954bd2e2ee996a95e5dc3","modified":1505274222744},{"_id":"themes/material/layout/_partial/Paradox-search.ejs","hash":"a53365c8a50db079eb6602350aa3f53d3712797d","modified":1505274222704},{"_id":"themes/material/layout/_partial/blog_info.ejs","hash":"57a81e061210c5a044e0ebcd77557e46a99487b9","modified":1505383960868},{"_id":"themes/material/layout/_partial/config_css.ejs","hash":"e92d348a2e251af279bfc2e7fb148bc1b39d568f","modified":1505274222755},{"_id":"themes/material/layout/_partial/config_font.ejs","hash":"330722d9503fcaef63413752365d8c260bc2d685","modified":1505274222793},{"_id":"themes/material/layout/_partial/daily_pic.ejs","hash":"e81473ab95abc332a76e7cfbf06efabed5a99f3b","modified":1505382354129},{"_id":"themes/material/layout/_partial/footer-left.ejs","hash":"608aa4af468654d38d41c03ebd396f657d8657e9","modified":1505274222807},{"_id":"themes/material/layout/_partial/footer-option.ejs","hash":"72e3b126cd90b977570a394f4fe3b1dc3facd37b","modified":1505274222822},{"_id":"themes/material/layout/_partial/footer.ejs","hash":"304c0380d1aacc44f1f8dfcf4e10051bca5bdbb3","modified":1505274222838},{"_id":"themes/material/layout/_partial/footer_top.ejs","hash":"783ce418478682ee78a4f45dc6b17e4ddba2d6b4","modified":1505274222842},{"_id":"themes/material/layout/_partial/isolate-sns_list.ejs","hash":"74de1f8ef14b58c21eb7895e9c9b3f3080d40aa4","modified":1505274223072},{"_id":"themes/material/layout/_partial/import_js.ejs","hash":"ef00089e825f937aca71657bf98f880dc217e768","modified":1505274223068},{"_id":"themes/material/layout/_partial/isolate_info.ejs","hash":"92ba92a2f226b91427d6ae2b9709bd7f6b8a8427","modified":1505274223091},{"_id":"themes/material/layout/_partial/post-content.ejs","hash":"1cb7b7e1caedd0b2c454daa7c53c637040284e46","modified":1505274223104},{"_id":"themes/material/layout/_partial/post-header.ejs","hash":"7783e66fef18e81cada1737174eadd758a4a2890","modified":1505274223117},{"_id":"themes/material/layout/_partial/head.ejs","hash":"e398be1633018d30b45e702886d0dd2fc969cb9a","modified":1505274222976},{"_id":"themes/material/layout/_partial/post-info-share.ejs","hash":"df3ce5675f7271bcdf85ff26edc4b18ff1ecb078","modified":1505274223147},{"_id":"themes/material/layout/_partial/sidebar-footer_image.ejs","hash":"6837794ff4efd5689fbf6d2e091cf87f38192e3a","modified":1505274223176},{"_id":"themes/material/layout/_partial/post-nav.ejs","hash":"eb9b9f252b525867da6358758aef546648439da0","modified":1505274223151},{"_id":"themes/material/layout/_partial/sidebar-footer.ejs","hash":"c7496ac2e19b4a5d396b589fe6b0e8d1147623ec","modified":1505365924580},{"_id":"themes/material/layout/_partial/sidebar-header.ejs","hash":"5d96bf9638b97872694c3a7dc2c1650a7cfc0adf","modified":1505366665965},{"_id":"themes/material/layout/_partial/sidebar-navigation.ejs","hash":"7bdebbceacaef1864a7fb85c022c60892caf0bd0","modified":1505274223234},{"_id":"themes/material/layout/_partial/sidebar.ejs","hash":"e3c5c28ffadbca227345e65bc93a16bd313d86cc","modified":1505274223246},{"_id":"themes/material/layout/_partial/toc_button.ejs","hash":"6ed811c4bbd58e6d9b6c134d27dcc2e26b772007","modified":1505274223283},{"_id":"themes/material/layout/_partial/structured-data.ejs","hash":"e845df290185dc300cc4edcc08b50fddc5b6909b","modified":1505274223262},{"_id":"themes/material/layout/_widget/dnsprefetch.ejs","hash":"6c711e444175bd4fa8dea02ca5e0aed93bc5c96e","modified":1505274223527},{"_id":"themes/material/layout/_widget/leancloud-views_num.ejs","hash":"a5ce35f2a456dc424e09b7e105b8d789dfe008df","modified":1505274223576},{"_id":"themes/material/layout/_widget/leancloud-like.ejs","hash":"25b97a70c0e80be62d8f483a12976faefcd632ea","modified":1505274223556},{"_id":"themes/material/layout/_widget/leancloud-views.ejs","hash":"75e8d213179fff42fad7e1e9fe14ce38cb6ab461","modified":1505274223572},{"_id":"themes/material/layout/_widget/mathjax.ejs","hash":"3838d3ce578cc432830035b1acb13df06d7f443a","modified":1505274223594},{"_id":"themes/material/layout/_widget/page-gallery.ejs","hash":"b9be252e9a710fe8c4d8c16ef804d92573c15ebd","modified":1505975081336},{"_id":"themes/material/layout/_widget/page-links.ejs","hash":"de04993b8cbc0dbe511154172bba38b8d5a89727","modified":1505274223659},{"_id":"themes/material/layout/_widget/page-matrix.ejs","hash":"d387f18555ba4ec7b305128eb401756f1468df37","modified":1505789621605},{"_id":"themes/material/layout/_widget/nprogress.ejs","hash":"a85d9b66785ade000094042223ad52854da8aab4","modified":1505274223611},{"_id":"themes/material/layout/_widget/page-tagcloud.ejs","hash":"fc45e544bb4b3ab94717083b4e555551dd476840","modified":1505386269866},{"_id":"themes/material/layout/_widget/page-music.ejs","hash":"15e353c9ceea4e6345e1e453f881fa32f4a8b647","modified":1505715158499},{"_id":"themes/material/layout/_widget/page-ours.ejs","hash":"afc06cf9740aa492e342ad20f3208217273c774d","modified":1505786985606},{"_id":"themes/material/layout/_widget/search-swiftype-js.ejs","hash":"3b3030c03a0bd08bf21f215a243af81302cdd34e","modified":1505274223733},{"_id":"themes/material/layout/_widget/search-local-js.ejs","hash":"ca0c44b0bc9fb95fca716421091392a45a640bf3","modified":1505274223723},{"_id":"themes/material/scripts/lib/css_lsload.js","hash":"43075dec9add42ba3fff4b914e4a9b31e94ee264","modified":1505274223845},{"_id":"themes/material/scripts/lib/get_file_hex.js","hash":"079a20b2919d5aa77169e1fb243ef3d26a46401c","modified":1505274223852},{"_id":"themes/material/scripts/lib/js_hex.js","hash":"c6d6b268553574f5ea07559ffba9579b47a7c3d6","modified":1505274223868},{"_id":"themes/material/scripts/lib/js_lsload.js","hash":"1fa0da2287a00287c853bd2a013155e24a6ca0ee","modified":1505274223882},{"_id":"themes/material/scripts/lib/path_for.js","hash":"490d6ef68a7dc2d7b6f863e22741ecd718ff4271","modified":1505274223888},{"_id":"themes/material/source/css/disqus-proxy.min.css","hash":"3f8f99f71d361302288b0ba11fd36072564b08c2","modified":1505274223899},{"_id":"themes/material/source/css/disqus-proxy.css","hash":"770776d8cec27cd5661bdfd59eff9af263439989","modified":1505274223894},{"_id":"themes/material/layout/_widget/qrcode.ejs","hash":"3212e5d29fe8490c5d9a844ec9c2ce9925532de8","modified":1505274223705},{"_id":"themes/material/layout/_widget/page-timeline.ejs","hash":"3210134da89219c3a213cba272fc2b75f7a345a6","modified":1505274223692},{"_id":"themes/material/source/css/duoshuo.css","hash":"7372200a8d019d4c368283de089d2e0481cb1de7","modified":1505274223904},{"_id":"themes/material/source/css/duoshuo.min.css","hash":"89a30544b8b01d061da51c40f2af702a7969de5e","modified":1505274223909},{"_id":"themes/material/source/css/fontawesome.min.css","hash":"88af80502c44cd52ca81ffe7dc7276b7eccb06cf","modified":1505274223915},{"_id":"themes/material/source/css/gallery.min.css","hash":"aabe2b04b9cd64375018f2b7ef7471514b118a13","modified":1505369108551},{"_id":"themes/material/source/css/ie-blocker.css","hash":"121016e89d5f8b1f84f2e0a22da30f3c096de36e","modified":1505274223927},{"_id":"themes/material/source/css/prettify.css","hash":"d4685a9d7c7d09f799f5ed618bf23d71857744ab","modified":1505274223948},{"_id":"themes/material/source/css/timeline.css","hash":"5cbb3f8772e91a5914f83c4327945095d631c6da","modified":1505720308858},{"_id":"themes/material/source/css/uc.css","hash":"9dc78a2ac468ca39664983789c4a9f9d145d1aad","modified":1505274224159},{"_id":"themes/material/source/css/prettify.min.css","hash":"62edd8f08656463b0e077dcf893faa3cc8eb5fe4","modified":1505274223952},{"_id":"themes/material/source/fonts/MaterialIcons-Regular.woff","hash":"c6c953c2ccb2ca9abb21db8dbf473b5a435f0082","modified":1505274224185},{"_id":"themes/material/source/fonts/MaterialIcons-Regular.woff2","hash":"09963592e8c953cc7e14e3fb0a5b05d5042e8435","modified":1505274224190},{"_id":"themes/material/source/img/avatar.png","hash":"bf483b0d495dbbcfb308348a945818e1c1cc9696","modified":1505274224295},{"_id":"themes/material/source/img/bg.png","hash":"a32f9717e19e821a4030ade551dc2917c889fcd8","modified":1505274224299},{"_id":"themes/material/source/img/browserstack_logo.png","hash":"a6c43887f64a7f48a2814e3714eaa1215e542037","modified":1505274224301},{"_id":"themes/material/source/img/favicon.png","hash":"b1bcc84cedb2a618e8db93559ce7d58f9274085d","modified":1505274224308},{"_id":"themes/material/source/img/logo.png","hash":"b1bcc84cedb2a618e8db93559ce7d58f9274085d","modified":1505274224379},{"_id":"themes/material/source/img/sidebar_header.png","hash":"c47f4d39f421c0a950279d050ae82f9ae6dd19ff","modified":1505274224422},{"_id":"themes/material/source/img/upyun_logo.svg","hash":"1f118b2b9c54f431d5e731ccf316ceefe605ba67","modified":1505274224427},{"_id":"themes/material/source/js/Valine.min.js","hash":"6a287a99a772a0ea8f98b133523429c9250cc67f","modified":1505274224486},{"_id":"themes/material/source/js/MathJax.js","hash":"1bb65ddb64e17d7424af7c29ab9626fc4f4388e6","modified":1505274224458},{"_id":"themes/material/source/js/hanabi-browser-bundle.js","hash":"a6dae5f17bb2237b1248da3d6c331bf8cbacc22d","modified":1505274224523},{"_id":"themes/material/source/js/ie-blocker.en.js","hash":"0bbd768e3be0081cf8d3fc3a9568c6a0f951ada7","modified":1505274224543},{"_id":"themes/material/source/js/ie-blocker.zhCN.js","hash":"198ffa1583343a5b5bf5e52afcfbff96fd0ef569","modified":1505274224556},{"_id":"themes/material/source/js/lazyload.min.js","hash":"bccbdcb5e5c13543dc5cc764073e3a454739d458","modified":1505274224679},{"_id":"themes/material/source/js/lsloader.js","hash":"05b84a6e8ba71e158c42e3527483787f35fdc48e","modified":1505274224693},{"_id":"themes/material/source/js/nprogress.js","hash":"a3058d4b6afb5d7a14e5afcbb88f778de35864f0","modified":1505274224732},{"_id":"themes/material/source/js/lsloader.min.js","hash":"1a68a8d267948ea8475245b7d365a1a1bd8f732e","modified":1505274224714},{"_id":"themes/material/source/js/prettify.min.js","hash":"69908fe0a09cee107c25cb5d769b861723e7b7bb","modified":1505274224749},{"_id":"themes/material/source/js/queue.min.js","hash":"21aab782ca33efbb1386cc960b6be0a02106760d","modified":1505274224770},{"_id":"themes/material/source/js/queue.js","hash":"1d6f5257cc2392ee2c5c92631833faa39fac3f9f","modified":1505274224760},{"_id":"themes/material/layout/_partial/Isolation-post_entry.ejs","hash":"b4370fb70d4c1635a37448a726f55a3dd3c698f3","modified":1505274222639},{"_id":"themes/material/source/js/smoothscroll.js","hash":"53204da28f2ccfd4af92511969319c574da1f7b5","modified":1505274224785},{"_id":"themes/material/source/css/material.css","hash":"f5cad266eaa2207ad8871e5b290a2a9ec4f097e7","modified":1505274223935},{"_id":"themes/material/source/css/material.min.css","hash":"1a19febb9214ab689b02f5bb8ccb23579e6c1181","modified":1505274223944},{"_id":"themes/material/source/css/style.min.css","hash":"65ace661916b06fb256cbd1fcfdfb39179bc24db","modified":1505384030802},{"_id":"themes/material/source/css/style.css","hash":"f67dedecbb08ec3d46c745dee394405355563d5d","modified":1505367500501},{"_id":"themes/material/source/fonts/MaterialIcons-Regular.ttf","hash":"fc05de31234e0090f7ddc28ce1b23af4026cb1da","modified":1505274224181},{"_id":"themes/material/source/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1505274224288},{"_id":"themes/material/source/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1505274224293},{"_id":"themes/material/source/img/daily_pic.png","hash":"5e9a5f6a134889d0242e69061837f2032416d7ce","modified":1505274224306},{"_id":"themes/material/source/js/jquery.min.js","hash":"d0c03f4b0c3b72172804cbc5d19e44b3a0a9a171","modified":1505274224597},{"_id":"themes/material/source/js/js.js","hash":"7a0a8a59f37914986016ffdc36f3415bb6a3f505","modified":1505274224624},{"_id":"themes/material/source/js/js.min.js","hash":"709d347d3be033b841de0493b7cf532b594bb1f6","modified":1505274224659},{"_id":"themes/material/layout/_widget/analytics/baidu-analytics.ejs","hash":"3880bcbbdeb4aa53056df95eb34362c87255852e","modified":1505274223297},{"_id":"themes/material/layout/_widget/analytics/cnzz-analytics.ejs","hash":"19c3e5b472a7c68182138be4d4485a59847604ad","modified":1505274223301},{"_id":"themes/material/layout/_widget/analytics/google-analytics.ejs","hash":"740093a4a47c691bcea9aaea69f4d507b1f9e294","modified":1505274223312},{"_id":"themes/material/source/css/prettify/atelier-cave-dark.min.css","hash":"cb0156cdc36500a26b232ae1c81fdc880eba85e7","modified":1505274223956},{"_id":"themes/material/source/css/prettify/atelier-cave-light.min.css","hash":"4b62dc45aa351b071d6a434dc54fe8c2e15c85cc","modified":1505274223960},{"_id":"themes/material/source/css/prettify/atelier-dune-dark.min.css","hash":"c5094d99ca0e619d97860c88211bf908fdf830b1","modified":1505274223966},{"_id":"themes/material/source/css/prettify/atelier-dune-light.min.css","hash":"b3ad98483e4d5bde72d52a15423d98e0d086db09","modified":1505274223970},{"_id":"themes/material/source/css/prettify/atelier-estuary-dark.min.css","hash":"7e3a065cafeb3acc1d7178f64ef4265f5d5ad2b9","modified":1505274223974},{"_id":"themes/material/source/css/prettify/atelier-estuary-light.min.css","hash":"1d12d8f7fa9c122a186ee76fdf681c191a68f104","modified":1505274223978},{"_id":"themes/material/source/css/prettify/atelier-forest-dark.min.css","hash":"9296b851a5b66785a60afa5da5fe9080bda96bf5","modified":1505274223982},{"_id":"themes/material/source/css/prettify/atelier-forest-light.min.css","hash":"3532f6e86bf4afbba05f7a074b791b73174f9622","modified":1505274223986},{"_id":"themes/material/source/css/prettify/atelier-heath-dark.min.css","hash":"954309acd7918422382a3ff2f9c2988aec0ff956","modified":1505274223989},{"_id":"themes/material/source/css/prettify/atelier-heath-light.min.css","hash":"a67199fa580b3aa2df031e5d2028929d29ca3b45","modified":1505274223993},{"_id":"themes/material/source/css/prettify/atelier-lakeside-dark.min.css","hash":"18575fc6dff855e395a39d0383d2f18807091f0d","modified":1505274223997},{"_id":"themes/material/source/css/prettify/atelier-lakeside-light.min.css","hash":"e20e8ac64432fa1aa6f74792b58196af7cf79c12","modified":1505274224001},{"_id":"themes/material/source/css/prettify/atelier-plateau-dark.min.css","hash":"137e3c499a720da3c1d57b4dc53264b1d623e1c5","modified":1505274224005},{"_id":"themes/material/source/css/prettify/atelier-plateau-light.min.css","hash":"153801640fdcbb74c0de3f15345110f2210eb991","modified":1505274224009},{"_id":"themes/material/source/css/prettify/atelier-savanna-dark.min.css","hash":"fba92c652fd6704422b8f2bbc11706805a6faed0","modified":1505274224013},{"_id":"themes/material/source/css/prettify/atelier-savanna-light.min.css","hash":"d9425ffb7c60d646190c22b9a5f72091ee5f9ace","modified":1505274224017},{"_id":"themes/material/source/css/prettify/atelier-seaside-light.min.css","hash":"732750b75389c1c49204f37705e6abeee40ce64f","modified":1505274224025},{"_id":"themes/material/source/css/prettify/atelier-seaside-dark.min.css","hash":"e0e6bbacc75a349b1e49c236d374b0e42f1fd485","modified":1505274224021},{"_id":"themes/material/source/css/prettify/atelier-sulphurpool-light.min.css","hash":"ab1a6200eab648cab443c3df77fde9b237ef27b6","modified":1505274224033},{"_id":"themes/material/source/css/prettify/atelier-sulphurpool-dark.min.css","hash":"015a35dddaee153fa8bb71d7f3818a6ba4d120d8","modified":1505274224029},{"_id":"themes/material/source/css/prettify/github.min.css","hash":"19cf828225288fa5c006f1d8f66c39d11f4ef7f2","modified":1505274224040},{"_id":"themes/material/source/css/prettify/github-v2.min.css","hash":"57630621d20842a529bdea7b17fc90f520e562ef","modified":1505274224037},{"_id":"themes/material/source/css/prettify/hemisu-dark.min.css","hash":"a671248cfd573292026d2174817e82e593691052","modified":1505274224044},{"_id":"themes/material/source/css/prettify/hemisu-light.min.css","hash":"b2556ff41e513fd13d032ec84a37ee260a905815","modified":1505274224048},{"_id":"themes/material/source/css/prettify/tomorrow-night-bright.min.css","hash":"cf251fd3edfd736695272a0f1b41d509b7bb1fb9","modified":1505274224055},{"_id":"themes/material/source/css/prettify/tomorrow-night-blue.min.css","hash":"c442728d96485bcf816151fe6bd96993aae09852","modified":1505274224052},{"_id":"themes/material/source/css/prettify/tomorrow-night-eighties.min.css","hash":"6ce259d674bb4edda23eea32b2379be17d0e0e6e","modified":1505274224059},{"_id":"themes/material/source/css/prettify/tomorrow-night.min.css","hash":"d989206d124035494acb4b0cdc7fbc89f3b7d108","modified":1505274224063},{"_id":"themes/material/source/css/prettify/tomorrow.min.css","hash":"b2c6d610b77f0273fefab5aa4ad26a7f58956f87","modified":1505274224066},{"_id":"themes/material/source/css/prettify/tranquil-heart.min.css","hash":"0f6eefbdda8e410832e9c516a5dd19899217ef06","modified":1505274224070},{"_id":"themes/material/source/css/prettify/vibrant-ink.min.css","hash":"c265bac6c31cf622b536b29c8a6bc46955d6fe63","modified":1505274224074},{"_id":"themes/material/source/fonts/MaterialIcons-Regular.eot","hash":"26fb8cecb5512223277b4d290a24492a0f09ede1","modified":1505274224174},{"_id":"themes/material/source/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1505274224166},{"_id":"themes/material/source/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1505274224258},{"_id":"themes/material/source/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1505274224283},{"_id":"themes/material/source/img/footer/footer_ico-bilibili.svg","hash":"1a007ae30d69aa597f589edb4ee0638a9814c988","modified":1505274224313},{"_id":"themes/material/source/img/footer/footer_ico-facebook.svg","hash":"74b3b3c6bd1d76b7eaaf75d36ac929b11a5a3e82","modified":1505274224317},{"_id":"themes/material/source/img/footer/footer_ico-gplus.svg","hash":"b50274133ab263bcacdf729871d0446b615ac984","modified":1505274224327},{"_id":"themes/material/source/img/footer/footer_ico-instagram.svg","hash":"294c511e62063ea49f61e23958ab27d643ba0228","modified":1505274224332},{"_id":"themes/material/source/img/footer/footer_ico-github.svg","hash":"5f1f9f53e6a87ad674108c6bd16e424a1e888c61","modified":1505274224322},{"_id":"themes/material/source/img/footer/footer_ico-linkedin.svg","hash":"9831c86352ec5ff283a3277d033120f86388c277","modified":1505274224336},{"_id":"themes/material/source/img/footer/footer_ico-telegram.svg","hash":"413d66e40ca476deeb49364935d49d2f7839cdfd","modified":1505274224341},{"_id":"themes/material/source/img/footer/footer_ico-tumblr.svg","hash":"11daf4fa4220787306fc21a879429e98b7db8d03","modified":1505274224345},{"_id":"themes/material/source/img/footer/footer_ico-twitter.svg","hash":"58df7777d6fcee8fa3c42453c091714bb3f97c95","modified":1505274224350},{"_id":"themes/material/source/img/footer/footer_ico-weibo.svg","hash":"26d0cdb77f0c4afd60111176167eacfa222bc4c1","modified":1505274224359},{"_id":"themes/material/source/img/footer/footer_ico-zhihu.svg","hash":"d3f8da320fffefc5144822665dfe17d25af4061c","modified":1505274224364},{"_id":"themes/material/source/img/gallery/arrow.svg","hash":"6ca8e1b203728561c756cbd8d0237600f83717ee","modified":1506062959740},{"_id":"themes/material/source/img/gallery/close.svg","hash":"aab6fb81c25c46727357baa705fb3892b4858368","modified":1506062959742},{"_id":"themes/material/source/img/gallery/spinner.svg","hash":"6f1037ab0c48940f477b8f2d87e719724cde7f44","modified":1506062959749},{"_id":"themes/material/source/img/random/material-10.png","hash":"363466a376e4df9e61acc904cd25f3c7ae1a7280","modified":1505274224384},{"_id":"themes/material/source/img/random/material-12.png","hash":"d020b3d42542715c7ae95b3d8603fe3180bfe8f3","modified":1505274224388},{"_id":"themes/material/source/img/random/material-17.png","hash":"ece82810e31f711576db598c845c3d97bd49fe67","modified":1505274224399},{"_id":"themes/material/source/img/random/material-19.png","hash":"768ed1a4966e2e418cb00f6b36d2fc9058328eb3","modified":1505274224402},{"_id":"themes/material/source/img/random/material-3.png","hash":"848eaa70b9b0cd7a2204c78e8aa324d8f96bb097","modified":1505274224406},{"_id":"themes/material/source/img/random/material-4.png","hash":"b475dfbf67a076a4e17a5527fd1973b1d4adac07","modified":1505274224408},{"_id":"themes/material/source/img/random/material-6.png","hash":"2f841e0c064fecb607ad1e149662a0c96d9e725d","modified":1505274224412},{"_id":"themes/material/source/img/random/material-8.png","hash":"57db542d526ef6866cb34e261096e93a0e6f3a82","modified":1505274224416},{"_id":"themes/material/source/img/random/material-9.png","hash":"840319c4d1f38fb8df79eb4669ed2e14d89fd680","modified":1505274224418},{"_id":"themes/material/source/js/gallery/gallery.js","hash":"79688611831faca31d5ef0c6d90397c29781fa98","modified":1505274224510},{"_id":"themes/material/source/img/footer/footer_ico-v2ex.svg","hash":"90c5a53a27ba7cceeedbaffef9ce829abb1815c6","modified":1505274224354},{"_id":"themes/material/layout/_widget/comment/livere/common.ejs","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1505274223433},{"_id":"themes/material/source/img/random/material-1.png","hash":"4839299eaa4db7272befa7b824e54b647fbbfc44","modified":1505274224382},{"_id":"themes/material/source/img/random/material-11.png","hash":"ce20b0ad08a248c036115374f2edb7301ff60b72","modified":1505274224386},{"_id":"themes/material/source/img/random/material-13.png","hash":"1a8378db3121b583485e2b939cb1aa0e0b14b0c8","modified":1505274224390},{"_id":"themes/material/source/img/random/material-14.png","hash":"b4f65b601960138c69f57171b0ddd55895483f45","modified":1505274224392},{"_id":"themes/material/source/img/random/material-15.png","hash":"36b9937cf3810e4970902b78797ad29b0831f065","modified":1505274224394},{"_id":"themes/material/source/img/random/material-16.png","hash":"ade7f75200d3fb38326e3cf1e9f1a812fb12a43b","modified":1505274224397},{"_id":"themes/material/source/img/random/material-18.png","hash":"4b98204abe36ecd3f30678d2c22059130e0db328","modified":1505274224400},{"_id":"themes/material/source/img/random/material-2.png","hash":"faba2ce69c19d6c1dac392dd10b054e0061f6fb7","modified":1505274224404},{"_id":"themes/material/source/img/random/material-5.png","hash":"5041ebd073a139c67f8ed271e74c967c7eb9c5be","modified":1505274224410},{"_id":"themes/material/source/img/random/material-7.png","hash":"5c49ff3c064aaeb21227c2bd98b5ae422ddca84c","modified":1505274224414},{"_id":"themes/material/layout/_widget/comment/changyan/common.ejs","hash":"49f6580a358c75d152ec98c3e064e202ca188528","modified":1505274223316},{"_id":"themes/material/layout/_widget/comment/changyan/enter.ejs","hash":"f2728b174b12c3dc62b0199f540473ffb2a03ad8","modified":1505274223322},{"_id":"themes/material/layout/_widget/comment/disqus/common.ejs","hash":"c3e8ce6eb296b9b23836beaaf08b04d5e4ae5c11","modified":1505274223350},{"_id":"themes/material/layout/_widget/comment/disqus/enter.ejs","hash":"224fbc348041f239be46c332b6560285795f38b4","modified":1505274223355},{"_id":"themes/material/layout/_widget/comment/disqus_click/common.ejs","hash":"83605554328fc4456b88452247a4ba26b42bdcad","modified":1505274223378},{"_id":"themes/material/layout/_widget/comment/disqus_click/enter.ejs","hash":"2af0b1276184decab109496e359cb81733c3fa27","modified":1505274223386},{"_id":"themes/material/layout/_widget/comment/changyan/main.ejs","hash":"720b1fd954577382ebdb60de6a93fb875843a9bb","modified":1505274223346},{"_id":"themes/material/layout/_widget/comment/disqus_click/main.ejs","hash":"74a3591e25bb9c9fa72f7d723ee1877f5a7c97b4","modified":1505274223410},{"_id":"themes/material/layout/_widget/comment/gitment/common.ejs","hash":"9c6c8d1b448c32afb01c2d0351e87f4d4a17ec3c","modified":1505274223415},{"_id":"themes/material/layout/_widget/comment/gitment/main.ejs","hash":"ee74d328df06d16538e3be5e3f1d91073bcd2b9a","modified":1505274223433},{"_id":"themes/material/layout/_widget/comment/livere/enter.ejs","hash":"f780cfa631441eeeaa13c456c4a0fcc27668cc15","modified":1505274223439},{"_id":"themes/material/layout/_widget/comment/disqus/main.ejs","hash":"ec4f4fc80f6e51dc4bd9fc9b0978e06d6e21031e","modified":1505274223373},{"_id":"themes/material/layout/_widget/comment/gitment/enter.ejs","hash":"dac4f440a5d102e4e808a26567296963f0801544","modified":1505274223429},{"_id":"themes/material/layout/_widget/comment/valine/common.ejs","hash":"94e2e6062df9b74e9fcee816fa019776b06712c2","modified":1505274223464},{"_id":"themes/material/layout/_widget/comment/livere/main.ejs","hash":"abae103cc00d6c4d0dad26343b73965166489357","modified":1505274223451},{"_id":"themes/material/layout/_widget/comment/valine/enter.ejs","hash":"338b60e1f5542d2e8d7ba999c2fa58ab4bc066dd","modified":1505274223468},{"_id":"themes/material/layout/_widget/comment/valine/main.ejs","hash":"2ae3985f13173acccb4020d14bab0d70d6da12d5","modified":1505274223479},{"_id":"themes/material/source/fonts/fontawesome-webfont.svg","hash":"b5483b11f8ba213e733b5b8af9927a04fec996f6","modified":1505274224275},{"_id":"themes/material/source/fonts/Roboto-Light.ttf","hash":"b9ea2eaf26ff8fdcb5aee3e0c2c7a6084ebb6aac","modified":1505274224219},{"_id":"themes/material/source/fonts/Roboto-Black.ttf","hash":"0244e6497a51fb8a38ca7e6fe297b066e2e09af5","modified":1505274224200},{"_id":"themes/material/source/fonts/Roboto-Medium.ttf","hash":"3965419aab480c184f66bc5e39c1719a373a4ef6","modified":1505274224229},{"_id":"themes/material/source/fonts/Roboto-Bold.ttf","hash":"d1864343b543978bd491d40c80010cea50c1b7bf","modified":1505274224209},{"_id":"themes/material/source/fonts/Roboto-Thin.ttf","hash":"ed5101c3a800f35e925603a406e0c2dc5278b96c","modified":1505274224251},{"_id":"themes/material/source/fonts/Roboto-Regular.ttf","hash":"06691e103d4d3ce1f1108d9b7d21254b714a41f8","modified":1505274224239},{"_id":"themes/material/npm-debug.log","hash":"f94d88326657601a6c0b04eca27a8f608fe41d74","modified":1505275698710},{"_id":"public/music/index.html","hash":"93d8d90b24a764ca9a5505f5aa771e0396e6fae4","modified":1506064693052},{"_id":"public/gallery/index.html","hash":"dfbf918ae08fffebedd5c37761dcbc6d118fe46b","modified":1506064693051},{"_id":"public/links/index.html","hash":"996ab908f012cb1a5b98855a5020c803477a8875","modified":1506064693052},{"_id":"public/matrix/index.html","hash":"5919a571affc95c22fe8c755ef40b45521098d36","modified":1506064693052},{"_id":"public/tags/index.html","hash":"48c5baa58bc38a7c5499d8cf1986929eb3572100","modified":1506064693052},{"_id":"public/ours/index.html","hash":"b045abe01351ab825a14570ebaf30a9feb8fc981","modified":1506064693052},{"_id":"public/timeline/index.html","hash":"503f263ea8e41267569209e5aa0953db60ca7969","modified":1506064693052},{"_id":"public/2017/09/20/JS原生图片懒加载/index.html","hash":"188701ad75b47d9a7a84aeab48e0aba8df0d6cd6","modified":1506067807637},{"_id":"public/2017/09/18/React-渲染元素/index.html","hash":"f345811bdc663d4d9704131c86ef7ef5836634a6","modified":1506064693052},{"_id":"public/2017/09/15/React-JSX/index.html","hash":"43af37079803214f25ab2896a265d42809f7a51f","modified":1506064693053},{"_id":"public/2017/09/15/CSS中的content和attr/index.html","hash":"70b64e7ec5459469421116b97b99a1b5dbd1c251","modified":1506064693055},{"_id":"public/2017/09/15/前端面试集（HTML-CSS）/index.html","hash":"5c55a7d79a9c8449c8064c1f137fa720285cb147","modified":1506064693055},{"_id":"public/2017/09/14/timelime/index.html","hash":"e22f9b3613bccfaedf46660f92797bc4180793b5","modified":1505894730280},{"_id":"public/2017/09/14/Uncaught-TypeError-angular-module-provider-info-is-not-a-function/index.html","hash":"7e111eaaa8d4de371a1b66c699c2015139eb1665","modified":1506064693055},{"_id":"public/2017/09/13/实现元素水平垂直居中/index.html","hash":"740c5aea6ba0b8569720546733a4fcf731d1bacc","modified":1506064693055},{"_id":"public/2017/09/13/hello-world/index.html","hash":"96870288bba246d30110ae2d59a58f4e56d224b8","modified":1506067807658},{"_id":"public/archives/index.html","hash":"7bfd7b1cdb8d3b2a64008708ddea45d8bc16f7ac","modified":1506064693056},{"_id":"public/archives/2017/index.html","hash":"34b498ad204f4a96652c424c547ba4b64c6c2994","modified":1506064693056},{"_id":"public/archives/2017/09/index.html","hash":"eb64d3e989a866747c1f613a79103d8d1c2c3d1b","modified":1506064693056},{"_id":"public/categories/Javascript/index.html","hash":"706c8eb47511b79fac81e511ee14104e7cd1449d","modified":1506064693056},{"_id":"public/categories/React/index.html","hash":"91b5727e4e4df96cc1423bd922e250291fb38013","modified":1506064693056},{"_id":"public/categories/Angular/index.html","hash":"6903842dc5e5653f5afb5100d44733f6ce845de9","modified":1506064693056},{"_id":"public/categories/CSS/index.html","hash":"e6c98a1fd528b550c2e20c5230461ab775d0e94f","modified":1506064693056},{"_id":"public/index.html","hash":"b9957674ce65e8ef57bf0c17d844cf09c141e8ef","modified":1506064693056},{"_id":"public/tags/Javascript/index.html","hash":"853b42a4167e5268b043df896b5b3fa7f3e934b6","modified":1506064693056},{"_id":"public/tags/图片/index.html","hash":"d8c903a1d54dfe02ffe9ab8e085e233953d3d9a8","modified":1506064693056},{"_id":"public/tags/懒加载，-原生JS/index.html","hash":"e01a97d831ff06b82a257cf110c210ee6af16586","modified":1506064693056},{"_id":"public/tags/React/index.html","hash":"1286e9ca40856b2917cc90e9b65df34d15c56860","modified":1506064693056},{"_id":"public/tags/Angular/index.html","hash":"2bda33fdf4642a89ec48a1dd10b9ae29b3deab4b","modified":1506064693056},{"_id":"public/tags/ngSanitize/index.html","hash":"f99dfdcec9989c01cddd10c7d324d7ccdcc42c9e","modified":1506064693056},{"_id":"public/tags/HTML/index.html","hash":"55d346a9348daed9a43153a7c7d003c7ce82a1e7","modified":1506064693056},{"_id":"public/tags/CSS/index.html","hash":"cdd0adfbaea479c7eae1793ec4fa8d7ab7d66708","modified":1506064693056},{"_id":"public/tags/面试/index.html","hash":"82d33dc2f52af74a2eb1d62af91436855b53c67a","modified":1506064693056},{"_id":"public/tags/CSS3/index.html","hash":"6b6511bb6501f1bfb1b1173c20a25e95f78587d7","modified":1506064693056},{"_id":"public/CNAME","hash":"953fa75880ee0dd90018aff9ce26fe7944ac3005","modified":1505894730336},{"_id":"public/fonts/MaterialIcons-Regular.woff","hash":"c6c953c2ccb2ca9abb21db8dbf473b5a435f0082","modified":1505894730336},{"_id":"public/fonts/MaterialIcons-Regular.woff2","hash":"09963592e8c953cc7e14e3fb0a5b05d5042e8435","modified":1505894730336},{"_id":"public/img/avatar.png","hash":"bf483b0d495dbbcfb308348a945818e1c1cc9696","modified":1505894730336},{"_id":"public/img/bg.png","hash":"a32f9717e19e821a4030ade551dc2917c889fcd8","modified":1505894730336},{"_id":"public/img/browserstack_logo.png","hash":"a6c43887f64a7f48a2814e3714eaa1215e542037","modified":1505894730336},{"_id":"public/img/favicon.png","hash":"b1bcc84cedb2a618e8db93559ce7d58f9274085d","modified":1505894730336},{"_id":"public/img/sidebar_header.png","hash":"c47f4d39f421c0a950279d050ae82f9ae6dd19ff","modified":1505894730336},{"_id":"public/img/logo.png","hash":"b1bcc84cedb2a618e8db93559ce7d58f9274085d","modified":1505894730336},{"_id":"public/img/upyun_logo.svg","hash":"1f118b2b9c54f431d5e731ccf316ceefe605ba67","modified":1505894730336},{"_id":"public/img/footer/footer_ico-bilibili.svg","hash":"1a007ae30d69aa597f589edb4ee0638a9814c988","modified":1505894730336},{"_id":"public/img/footer/footer_ico-facebook.svg","hash":"74b3b3c6bd1d76b7eaaf75d36ac929b11a5a3e82","modified":1505894730336},{"_id":"public/img/footer/footer_ico-gplus.svg","hash":"b50274133ab263bcacdf729871d0446b615ac984","modified":1505894730336},{"_id":"public/img/footer/footer_ico-instagram.svg","hash":"294c511e62063ea49f61e23958ab27d643ba0228","modified":1505894730336},{"_id":"public/img/footer/footer_ico-linkedin.svg","hash":"9831c86352ec5ff283a3277d033120f86388c277","modified":1505894730336},{"_id":"public/img/footer/footer_ico-github.svg","hash":"5f1f9f53e6a87ad674108c6bd16e424a1e888c61","modified":1505894730336},{"_id":"public/img/footer/footer_ico-tumblr.svg","hash":"11daf4fa4220787306fc21a879429e98b7db8d03","modified":1505894730336},{"_id":"public/img/footer/footer_ico-telegram.svg","hash":"413d66e40ca476deeb49364935d49d2f7839cdfd","modified":1505894730336},{"_id":"public/img/footer/footer_ico-twitter.svg","hash":"58df7777d6fcee8fa3c42453c091714bb3f97c95","modified":1505894730337},{"_id":"public/img/footer/footer_ico-weibo.svg","hash":"26d0cdb77f0c4afd60111176167eacfa222bc4c1","modified":1505894730337},{"_id":"public/img/footer/footer_ico-zhihu.svg","hash":"d3f8da320fffefc5144822665dfe17d25af4061c","modified":1505894730337},{"_id":"public/img/gallery/close.svg","hash":"aab6fb81c25c46727357baa705fb3892b4858368","modified":1506063776755},{"_id":"public/img/gallery/arrow.svg","hash":"6ca8e1b203728561c756cbd8d0237600f83717ee","modified":1506063776755},{"_id":"public/img/random/material-10.png","hash":"363466a376e4df9e61acc904cd25f3c7ae1a7280","modified":1505894730337},{"_id":"public/img/gallery/spinner.svg","hash":"6f1037ab0c48940f477b8f2d87e719724cde7f44","modified":1506063776755},{"_id":"public/img/random/material-12.png","hash":"d020b3d42542715c7ae95b3d8603fe3180bfe8f3","modified":1505894730337},{"_id":"public/img/random/material-17.png","hash":"ece82810e31f711576db598c845c3d97bd49fe67","modified":1505894730337},{"_id":"public/img/random/material-19.png","hash":"768ed1a4966e2e418cb00f6b36d2fc9058328eb3","modified":1505894730337},{"_id":"public/img/random/material-3.png","hash":"848eaa70b9b0cd7a2204c78e8aa324d8f96bb097","modified":1505894730337},{"_id":"public/img/random/material-4.png","hash":"b475dfbf67a076a4e17a5527fd1973b1d4adac07","modified":1505894730337},{"_id":"public/img/random/material-6.png","hash":"2f841e0c064fecb607ad1e149662a0c96d9e725d","modified":1505894730337},{"_id":"public/img/random/material-9.png","hash":"840319c4d1f38fb8df79eb4669ed2e14d89fd680","modified":1505894730337},{"_id":"public/img/footer/footer_ico-v2ex.svg","hash":"90c5a53a27ba7cceeedbaffef9ce829abb1815c6","modified":1505894730337},{"_id":"public/img/random/material-8.png","hash":"57db542d526ef6866cb34e261096e93a0e6f3a82","modified":1505894730337},{"_id":"public/css/prism.css","hash":"bed3a85b4fb53bc89e65e42ec62b9ce3e907fc80","modified":1505894730337},{"_id":"public/fonts/MaterialIcons-Regular.ttf","hash":"fc05de31234e0090f7ddc28ce1b23af4026cb1da","modified":1505894730344},{"_id":"public/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1505894730362},{"_id":"public/img/daily_pic.png","hash":"5e9a5f6a134889d0242e69061837f2032416d7ce","modified":1505894730381},{"_id":"public/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1505894730381},{"_id":"public/img/random/material-1.png","hash":"4839299eaa4db7272befa7b824e54b647fbbfc44","modified":1505894730381},{"_id":"public/img/random/material-11.png","hash":"ce20b0ad08a248c036115374f2edb7301ff60b72","modified":1505894730381},{"_id":"public/img/random/material-13.png","hash":"1a8378db3121b583485e2b939cb1aa0e0b14b0c8","modified":1505894730381},{"_id":"public/img/random/material-14.png","hash":"b4f65b601960138c69f57171b0ddd55895483f45","modified":1505894730381},{"_id":"public/img/random/material-15.png","hash":"36b9937cf3810e4970902b78797ad29b0831f065","modified":1505894730381},{"_id":"public/img/random/material-16.png","hash":"ade7f75200d3fb38326e3cf1e9f1a812fb12a43b","modified":1505894730382},{"_id":"public/img/random/material-18.png","hash":"4b98204abe36ecd3f30678d2c22059130e0db328","modified":1505894730382},{"_id":"public/img/random/material-2.png","hash":"faba2ce69c19d6c1dac392dd10b054e0061f6fb7","modified":1505894730382},{"_id":"public/img/random/material-7.png","hash":"5c49ff3c064aaeb21227c2bd98b5ae422ddca84c","modified":1505894730382},{"_id":"public/img/random/material-5.png","hash":"5041ebd073a139c67f8ed271e74c967c7eb9c5be","modified":1505894730382},{"_id":"public/css/duoshuo.css","hash":"32a02eaa01ff7b66fd9df307b0d33d52810096be","modified":1505894730388},{"_id":"public/css/disqus-proxy.min.css","hash":"3f8f99f71d361302288b0ba11fd36072564b08c2","modified":1505894730388},{"_id":"public/css/prettify.css","hash":"c395f20ee64e80c2b6b15c7dade02f9aaaeab2c8","modified":1505894730388},{"_id":"public/css/ie-blocker.css","hash":"dddce7e6250a449291888ae7865697282a213b14","modified":1505894730388},{"_id":"public/css/uc.css","hash":"1e0977a2c9bdf721cc05654dfc025dd250655852","modified":1505894730388},{"_id":"public/css/timeline.css","hash":"e6b59966b16792270d17dd5fb23fdfb713ad0d56","modified":1505894730388},{"_id":"public/css/duoshuo.min.css","hash":"89a30544b8b01d061da51c40f2af702a7969de5e","modified":1505894730388},{"_id":"public/css/prettify.min.css","hash":"62edd8f08656463b0e077dcf893faa3cc8eb5fe4","modified":1505894730388},{"_id":"public/js/lazyload.min.js","hash":"5348fd7aa4dbefac9d21091c9fd5e263563b5540","modified":1505894730389},{"_id":"public/js/hanabi-browser-bundle.js","hash":"d646647bda386140c8315d60e3ff4ddbdb15c1ea","modified":1505894730389},{"_id":"public/js/lsloader.js","hash":"2b14e57784fb6b5f58d71584189c61af45f393e8","modified":1505894730389},{"_id":"public/js/nprogress.js","hash":"a3058d4b6afb5d7a14e5afcbb88f778de35864f0","modified":1505894730389},{"_id":"public/js/lsloader.min.js","hash":"1a68a8d267948ea8475245b7d365a1a1bd8f732e","modified":1505894730389},{"_id":"public/js/queue.min.js","hash":"21aab782ca33efbb1386cc960b6be0a02106760d","modified":1505894730389},{"_id":"public/js/prettify.min.js","hash":"69908fe0a09cee107c25cb5d769b861723e7b7bb","modified":1505894730389},{"_id":"public/js/queue.js","hash":"dd252616b568b71c222d9cfc859bfe52738e576a","modified":1505894730389},{"_id":"public/js/smoothscroll.js","hash":"df56a1c84191a62750ae820943377b6775fca0e2","modified":1505894730389},{"_id":"public/js/ie-blocker.en.js","hash":"96ca8e677a12048d099319ebdf01983ddc6ca80c","modified":1505894730391},{"_id":"public/js/ie-blocker.zhCN.js","hash":"0ed49b0ec1d1924b128fbd97fca2cf7af7856fdf","modified":1505894730391},{"_id":"public/css/prettify/atelier-dune-dark.min.css","hash":"c5094d99ca0e619d97860c88211bf908fdf830b1","modified":1505894730391},{"_id":"public/css/prettify/atelier-cave-dark.min.css","hash":"cb0156cdc36500a26b232ae1c81fdc880eba85e7","modified":1505894730391},{"_id":"public/css/prettify/atelier-dune-light.min.css","hash":"b3ad98483e4d5bde72d52a15423d98e0d086db09","modified":1505894730392},{"_id":"public/css/prettify/atelier-cave-light.min.css","hash":"4b62dc45aa351b071d6a434dc54fe8c2e15c85cc","modified":1505894730392},{"_id":"public/css/prettify/atelier-estuary-dark.min.css","hash":"7e3a065cafeb3acc1d7178f64ef4265f5d5ad2b9","modified":1505894730392},{"_id":"public/css/prettify/atelier-forest-dark.min.css","hash":"9296b851a5b66785a60afa5da5fe9080bda96bf5","modified":1505894730392},{"_id":"public/css/prettify/atelier-estuary-light.min.css","hash":"1d12d8f7fa9c122a186ee76fdf681c191a68f104","modified":1505894730392},{"_id":"public/css/prettify/atelier-forest-light.min.css","hash":"3532f6e86bf4afbba05f7a074b791b73174f9622","modified":1505894730392},{"_id":"public/css/prettify/atelier-heath-dark.min.css","hash":"954309acd7918422382a3ff2f9c2988aec0ff956","modified":1505894730392},{"_id":"public/css/prettify/atelier-heath-light.min.css","hash":"a67199fa580b3aa2df031e5d2028929d29ca3b45","modified":1505894730392},{"_id":"public/css/prettify/atelier-lakeside-dark.min.css","hash":"18575fc6dff855e395a39d0383d2f18807091f0d","modified":1505894730392},{"_id":"public/css/prettify/atelier-lakeside-light.min.css","hash":"e20e8ac64432fa1aa6f74792b58196af7cf79c12","modified":1505894730392},{"_id":"public/css/prettify/atelier-plateau-light.min.css","hash":"153801640fdcbb74c0de3f15345110f2210eb991","modified":1505894730392},{"_id":"public/css/prettify/atelier-savanna-dark.min.css","hash":"fba92c652fd6704422b8f2bbc11706805a6faed0","modified":1505894730393},{"_id":"public/css/prettify/atelier-savanna-light.min.css","hash":"d9425ffb7c60d646190c22b9a5f72091ee5f9ace","modified":1505894730393},{"_id":"public/css/prettify/atelier-seaside-light.min.css","hash":"732750b75389c1c49204f37705e6abeee40ce64f","modified":1505894730393},{"_id":"public/css/prettify/atelier-seaside-dark.min.css","hash":"e0e6bbacc75a349b1e49c236d374b0e42f1fd485","modified":1505894730393},{"_id":"public/css/prettify/atelier-sulphurpool-light.min.css","hash":"ab1a6200eab648cab443c3df77fde9b237ef27b6","modified":1505894730393},{"_id":"public/css/prettify/atelier-plateau-dark.min.css","hash":"137e3c499a720da3c1d57b4dc53264b1d623e1c5","modified":1505894730393},{"_id":"public/css/prettify/atelier-sulphurpool-dark.min.css","hash":"015a35dddaee153fa8bb71d7f3818a6ba4d120d8","modified":1505894730393},{"_id":"public/css/prettify/github.min.css","hash":"19cf828225288fa5c006f1d8f66c39d11f4ef7f2","modified":1505894730393},{"_id":"public/css/prettify/hemisu-dark.min.css","hash":"a671248cfd573292026d2174817e82e593691052","modified":1505894730393},{"_id":"public/css/prettify/tomorrow-night-bright.min.css","hash":"cf251fd3edfd736695272a0f1b41d509b7bb1fb9","modified":1505894730393},{"_id":"public/css/prettify/hemisu-light.min.css","hash":"b2556ff41e513fd13d032ec84a37ee260a905815","modified":1505894730393},{"_id":"public/css/prettify/tomorrow-night-blue.min.css","hash":"c442728d96485bcf816151fe6bd96993aae09852","modified":1505894730393},{"_id":"public/css/prettify/tomorrow-night-eighties.min.css","hash":"6ce259d674bb4edda23eea32b2379be17d0e0e6e","modified":1505894730393},{"_id":"public/css/prettify/tomorrow-night.min.css","hash":"d989206d124035494acb4b0cdc7fbc89f3b7d108","modified":1505894730393},{"_id":"public/css/prettify/github-v2.min.css","hash":"57630621d20842a529bdea7b17fc90f520e562ef","modified":1505894730393},{"_id":"public/css/prettify/tomorrow.min.css","hash":"b2c6d610b77f0273fefab5aa4ad26a7f58956f87","modified":1505894730393},{"_id":"public/css/prettify/vibrant-ink.min.css","hash":"c265bac6c31cf622b536b29c8a6bc46955d6fe63","modified":1505894730393},{"_id":"public/css/prettify/tranquil-heart.min.css","hash":"0f6eefbdda8e410832e9c516a5dd19899217ef06","modified":1505894730393},{"_id":"public/css/disqus-proxy.css","hash":"d5086cda8aaae20b8d3f9dd50f0be5ccb717e42a","modified":1505894730394},{"_id":"public/css/gallery.min.css","hash":"11329b6b4b4c6ad1967df34b693f9e612745bb60","modified":1505894730394},{"_id":"public/css/fontawesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1505894730394},{"_id":"public/js/Valine.min.js","hash":"6a287a99a772a0ea8f98b133523429c9250cc67f","modified":1505894730395},{"_id":"public/js/MathJax.js","hash":"a21703b5848325a902c9b39bbf3ca6490d3e1b1b","modified":1505894730395},{"_id":"public/css/material.css","hash":"068e2b00f686157b6e8b78b9b808112adbedf4de","modified":1505894730395},{"_id":"public/css/style.min.css","hash":"94a1212a11b65e5771c7727f9d0a26aed3cc07a9","modified":1505894730395},{"_id":"public/css/material.min.css","hash":"1a19febb9214ab689b02f5bb8ccb23579e6c1181","modified":1505894730395},{"_id":"public/css/style.css","hash":"fffb3966bf36057a325498aba9ce3a2ea7bd79e1","modified":1506064604840},{"_id":"public/js/js.js","hash":"64b3f20e7138674ecf21e6e3982565ea63feae26","modified":1505894730395},{"_id":"public/js/js.min.js","hash":"709d347d3be033b841de0493b7cf532b594bb1f6","modified":1505894730395},{"_id":"public/js/jquery.min.js","hash":"00073d6597d2760b81387274a9ec56b9d5cb1552","modified":1505894730395},{"_id":"public/js/gallery/gallery.js","hash":"8ee48312a183b42a9886211a0ec825ea0d041301","modified":1505894730396},{"_id":"public/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1505894730396},{"_id":"public/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1505894730396},{"_id":"public/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1505894730396},{"_id":"public/fonts/MaterialIcons-Regular.eot","hash":"26fb8cecb5512223277b4d290a24492a0f09ede1","modified":1505894730396},{"_id":"public/fonts/fontawesome-webfont.svg","hash":"b5483b11f8ba213e733b5b8af9927a04fec996f6","modified":1505894733621},{"_id":"public/fonts/Roboto-Light.ttf","hash":"b9ea2eaf26ff8fdcb5aee3e0c2c7a6084ebb6aac","modified":1505894734279},{"_id":"public/fonts/Roboto-Black.ttf","hash":"0244e6497a51fb8a38ca7e6fe297b066e2e09af5","modified":1505894734279},{"_id":"public/fonts/Roboto-Medium.ttf","hash":"3965419aab480c184f66bc5e39c1719a373a4ef6","modified":1505894734280},{"_id":"public/fonts/Roboto-Bold.ttf","hash":"d1864343b543978bd491d40c80010cea50c1b7bf","modified":1505894734282},{"_id":"public/fonts/Roboto-Regular.ttf","hash":"06691e103d4d3ce1f1108d9b7d21254b714a41f8","modified":1505894734285},{"_id":"public/fonts/Roboto-Thin.ttf","hash":"ed5101c3a800f35e925603a406e0c2dc5278b96c","modified":1505894734287},{"_id":"themes/landscape/.gitignore","hash":"ea2b285a29690f1eabbad0f3a158e34e9ccd1d86","modified":1506062957312},{"_id":"themes/landscape/Gruntfile.js","hash":"412e30530784993c8997aa8b1319c669b83b91c2","modified":1506062957321},{"_id":"themes/landscape/LICENSE","hash":"82ce1e15ddeabeaaca60e2186b5a3ce42b1a9c49","modified":1506062957326},{"_id":"themes/landscape/README.md","hash":"e7cc82dc79596f36ba05a8139e7d6b2dfc4ae5f9","modified":1506062957331},{"_id":"themes/landscape/_config.yml","hash":"218c5fb76666696c42dc86e2de4711e6b80befbf","modified":1506062957334},{"_id":"themes/landscape/package.json","hash":"d07f326588fef82f1d23ae3101c9ddfff34c132f","modified":1506062957460},{"_id":"themes/landscape/languages/default.yml","hash":"f26a34a7983d4bc17c65c7f0f14da598e62ce66d","modified":1506062957336},{"_id":"themes/landscape/languages/fr.yml","hash":"b4be1c1592a72012e48df2b3ec41cc9685573e50","modified":1506062957337},{"_id":"themes/landscape/languages/nl.yml","hash":"3d82ec703d0b3287739d7cb4750a715ae83bfcb3","modified":1506062957341},{"_id":"themes/landscape/languages/no.yml","hash":"ddf2035e920a5ecb9076138c184257d9f51896a7","modified":1506062957345},{"_id":"themes/landscape/languages/ru.yml","hash":"2a476b4c6e04900914c81378941640ac5d58a1f0","modified":1506062957347},{"_id":"themes/landscape/languages/zh-CN.yml","hash":"b057f389c6713010f97d461e48ec959b0b6f3b44","modified":1506062957349},{"_id":"themes/landscape/languages/zh-TW.yml","hash":"f5f0ca88185da7a8457760d84bf221781473bd7c","modified":1506062957353},{"_id":"themes/landscape/layout/archive.ejs","hash":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":1506062957433},{"_id":"themes/landscape/layout/category.ejs","hash":"765426a9c8236828dc34759e604cc2c52292835a","modified":1506062957439},{"_id":"themes/landscape/layout/index.ejs","hash":"aa1b4456907bdb43e629be3931547e2d29ac58c8","modified":1506062957442},{"_id":"themes/landscape/layout/layout.ejs","hash":"5d86bc48b0f1bdce9a2bb548c2f8e7a4f50d499a","modified":1506062957446},{"_id":"themes/landscape/layout/page.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1506062957454},{"_id":"themes/landscape/layout/post.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1506062957456},{"_id":"themes/landscape/layout/tag.ejs","hash":"eaa7b4ccb2ca7befb90142e4e68995fb1ea68b2e","modified":1506062957459},{"_id":"themes/landscape/scripts/fancybox.js","hash":"4c130fc242cf9b59b5df6ca5eae3b14302311e8c","modified":1506062957463},{"_id":"themes/landscape/layout/_partial/after-footer.ejs","hash":"a7faab4f3601b28107af5b1095b3966c2f88fec8","modified":1506062957356},{"_id":"themes/landscape/layout/_partial/archive-post.ejs","hash":"5062c723721d8497eebad372f57092ade45041f4","modified":1506062957358},{"_id":"themes/landscape/layout/_partial/archive.ejs","hash":"3beb0d164acacb6f21e1ca2038158a74ab4a73e4","modified":1506062957359},{"_id":"themes/landscape/layout/_partial/article.ejs","hash":"5cf2b8a1148e6f8c4bd9ca9e3b84c7e5a59d56bc","modified":1506062957371},{"_id":"themes/landscape/layout/_partial/footer.ejs","hash":"6faefe07f3d64e21c7743276e0f55ee1544f9d86","modified":1506062957374},{"_id":"themes/landscape/layout/_partial/google-analytics.ejs","hash":"1ccc627d7697e68fddc367c73ac09920457e5b35","modified":1506062957388},{"_id":"themes/landscape/layout/_partial/head.ejs","hash":"89998e6b2929c4ff5093bbf6b86d611d7420be52","modified":1506062957389},{"_id":"themes/landscape/layout/_partial/header.ejs","hash":"148bdf714dd1a7bf55e571f13808ceae079200cc","modified":1506062957391},{"_id":"themes/landscape/layout/_partial/mobile-nav.ejs","hash":"347cf1befd2ea637c24bd5901929d8e36e359e75","modified":1506062957392},{"_id":"themes/landscape/layout/_partial/sidebar.ejs","hash":"c70869569749a8f48cce202fa57926c06b55fdab","modified":1506062957413},{"_id":"themes/landscape/layout/_widget/archive.ejs","hash":"0fe1e52c291c9499bd05b966e0b9aac5be351c58","modified":1506062957419},{"_id":"themes/landscape/layout/_widget/category.ejs","hash":"866790acc13fed44b7ef74c3e19c300a3d6180d8","modified":1506062957420},{"_id":"themes/landscape/layout/_widget/recent_posts.ejs","hash":"16800f85ffb036d2644a26e02facd61acb3706e9","modified":1506062957426},{"_id":"themes/landscape/layout/_widget/tag.ejs","hash":"6017c54a8c3c8ff8db491cfbea3100c139da75d6","modified":1506062957429},{"_id":"themes/landscape/layout/_widget/tagcloud.ejs","hash":"7259c179aa0c41c02e467ad892292e90430aaabc","modified":1506062957431},{"_id":"themes/landscape/source/css/_extend.styl","hash":"8ab1ad313bd6707d248c5ca1ee9a5eab8d815e42","modified":1506062957470},{"_id":"themes/landscape/source/css/_variables.styl","hash":"8b63ea3c7199524b9a1541075c6f8fb2c0d0ea3d","modified":1506062957517},{"_id":"themes/landscape/source/css/style.styl","hash":"4a3e64ee8dad5834860c30b4176882eff628ca6b","modified":1506062957582},{"_id":"themes/landscape/source/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1506062957585},{"_id":"themes/landscape/source/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1506062957587},{"_id":"themes/landscape/source/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1506062957590},{"_id":"themes/landscape/source/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1506062957594},{"_id":"themes/landscape/source/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1506062957597},{"_id":"themes/landscape/source/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1506062957599},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.css","hash":"2e54d51d21e68ebc4bb870f6e57d3bfb660d4f9c","modified":1506062957633},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.js","hash":"58193c802f307ec9bc9e586c0e8a13ebef45d2f8","modified":1506062957652},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.pack.js","hash":"2da892a02778236b64076e5e8802ef0566e1d9e8","modified":1506062957674},{"_id":"themes/landscape/source/js/script.js","hash":"c0d368681c687258b628bacc84cc30d353de6d47","modified":1506062957677},{"_id":"themes/landscape/layout/_partial/post/category.ejs","hash":"16128d2422645e18d1b6882d4c4df17d895bd76e","modified":1506062957400},{"_id":"themes/landscape/layout/_partial/post/date.ejs","hash":"947f513f7a85fbcf085624e46dc2ae6de8185eec","modified":1506062957401},{"_id":"themes/landscape/layout/_partial/post/nav.ejs","hash":"cbb3819ce512bd24db8bad41b8617d46eba82fdc","modified":1506062957406},{"_id":"themes/landscape/layout/_partial/post/gallery.ejs","hash":"b0bf3f5d923c261ca2b5fabab513f1ec2708c8ca","modified":1506062957404},{"_id":"themes/landscape/layout/_partial/post/tag.ejs","hash":"694b5101bcc44c9f9c1cc62e5ad2fdfb4b7c7a07","modified":1506062957409},{"_id":"themes/landscape/layout/_partial/post/title.ejs","hash":"d4a460a35e2112d0c7414fd5e19b3a16093f1caf","modified":1506062957411},{"_id":"themes/landscape/source/css/_util/grid.styl","hash":"1aa883ab432d9e4139c89dcbd40ae2bd1528d029","modified":1506062957510},{"_id":"themes/landscape/source/css/_util/mixin.styl","hash":"429bad87fc156eacf226c5e35b0eafc277f2504b","modified":1506062957511},{"_id":"themes/landscape/source/css/_partial/comment.styl","hash":"2834870661e490775f9154d71638bfdc72e640a6","modified":1506062957489},{"_id":"themes/landscape/source/css/_partial/archive.styl","hash":"9e574d8eb1a5285ec3b4346607414770d2f7e0ff","modified":1506062957478},{"_id":"themes/landscape/source/css/_partial/article.styl","hash":"e291bc8c5f0c21080baa549d5d9ef2f39a871ea7","modified":1506062957485},{"_id":"themes/landscape/source/css/_partial/footer.styl","hash":"6f7aa810f296d6a1a4486637b5a853d35a198938","modified":1506062957490},{"_id":"themes/landscape/source/css/_partial/header.styl","hash":"67e59feb18eee6026717cb440d86ab9551782628","modified":1506062957492},{"_id":"themes/landscape/source/css/_partial/highlight.styl","hash":"ac19f1621305ca9f6a7b74acd211a4c0d88690bd","modified":1506062957494},{"_id":"themes/landscape/source/css/_partial/mobile.styl","hash":"680c7b809b62cd3ad294e822793fbd0b1a32cc33","modified":1506062957496},{"_id":"themes/landscape/source/css/_partial/sidebar-aside.styl","hash":"1fb15f13ba70d5b954f62920c6b63d26e2fb2985","modified":1506062957499},{"_id":"themes/landscape/source/css/_partial/sidebar-bottom.styl","hash":"4132e25ba9680c4b911a01abc75f501cda3fa4f1","modified":1506062957507},{"_id":"themes/landscape/source/css/_partial/sidebar.styl","hash":"8d971a00e644a600179b04815688d188f094012e","modified":1506062957508},{"_id":"themes/landscape/source/css/fonts/FontAwesome.otf","hash":"b5b4f9be85f91f10799e87a083da1d050f842734","modified":1506062957526},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.eot","hash":"7619748fe34c64fb157a57f6d4ef3678f63a8f5e","modified":1506062957543},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.woff","hash":"04c3bf56d87a0828935bd6b4aee859995f321693","modified":1506062957572},{"_id":"themes/landscape/source/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1506062957600},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.css","hash":"6394c48092085788a8c0ef72670b0652006231a1","modified":1506062957602},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.js","hash":"4c9c395d705d22af7da06870d18f434e2a2eeaf9","modified":1506062957613},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-media.js","hash":"e14c32cc6823b81b2f758512f13ed8eb9ef2b454","modified":1506062957628},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"83cdfea43632b613771691a11f56f99d85fb6dbd","modified":1506062957631},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"b88b589f5f1aa1b3d87cc7eef34c281ff749b1ae","modified":1506062957630},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.ttf","hash":"7f09c97f333917034ad08fa7295e916c9f72fd3f","modified":1506062957567},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.svg","hash":"a275426daefd3716c53561fad121d258a7f05b47","modified":1506062957554},{"_id":"themes/landscape/source/css/images/banner.jpg","hash":"f44aa591089fcb3ec79770a1e102fd3289a7c6a6","modified":1506062957578},{"_id":"public/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1506067807665},{"_id":"public/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1506067807665},{"_id":"public/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1506067807665},{"_id":"public/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1506067807665},{"_id":"public/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1506067807665},{"_id":"public/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1506067807667},{"_id":"public/css/fonts/FontAwesome.otf","hash":"b5b4f9be85f91f10799e87a083da1d050f842734","modified":1506067807667},{"_id":"public/css/fonts/fontawesome-webfont.eot","hash":"7619748fe34c64fb157a57f6d4ef3678f63a8f5e","modified":1506067807667},{"_id":"public/css/fonts/fontawesome-webfont.woff","hash":"04c3bf56d87a0828935bd6b4aee859995f321693","modified":1506067807667},{"_id":"public/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1506067807667},{"_id":"public/css/fonts/fontawesome-webfont.ttf","hash":"7f09c97f333917034ad08fa7295e916c9f72fd3f","modified":1506067808260},{"_id":"public/fancybox/jquery.fancybox.css","hash":"aaa582fb9eb4b7092dc69fcb2d5b1c20cca58ab6","modified":1506067808268},{"_id":"public/js/script.js","hash":"2876e0b19ce557fca38d7c6f49ca55922ab666a1","modified":1506067808268},{"_id":"public/fancybox/helpers/jquery.fancybox-buttons.js","hash":"dc3645529a4bf72983a39fa34c1eb9146e082019","modified":1506067808268},{"_id":"public/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"47da1ae5401c24b5c17cc18e2730780f5c1a7a0c","modified":1506067808268},{"_id":"public/fancybox/helpers/jquery.fancybox-media.js","hash":"294420f9ff20f4e3584d212b0c262a00a96ecdb3","modified":1506067808268},{"_id":"public/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1506067808268},{"_id":"public/fancybox/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1506067808268},{"_id":"public/fancybox/jquery.fancybox.pack.js","hash":"9e0d51ca1dbe66f6c0c7aefd552dc8122e694a6e","modified":1506067808268},{"_id":"public/fancybox/jquery.fancybox.js","hash":"d08b03a42d5c4ba456ef8ba33116fdbb7a9cabed","modified":1506067808268},{"_id":"public/css/fonts/fontawesome-webfont.svg","hash":"a275426daefd3716c53561fad121d258a7f05b47","modified":1506067808271},{"_id":"public/css/images/banner.jpg","hash":"f44aa591089fcb3ec79770a1e102fd3289a7c6a6","modified":1506067808271}],"Category":[{"name":"Javascript","_id":"cj7squ94u000494tu15rp1jqi"},{"name":"React","_id":"cj7squ960000b94tuol9kb7fm"},{"name":"Angular","_id":"cj7squ968000g94tu7sa1qp3m"},{"name":"CSS","_id":"cj7squ96t000o94tul7nrgqyg"}],"Data":[{"_id":"ours","data":{"our1":{"date":"2017-07-23T00:00:00.000Z","title":"women","desc":"hello"}}},{"_id":"head","data":{"Baidu":"<script> var _hmt = _hmt || []; (function() { var hm = document.createElement(\"script\"); hm.src = \"https://hm.baidu.com/hm.js?2faaec6fd26d66bbf5e331e48cc87735\"; var s = document.getElementsByTagName(\"script\")[0]; s.parentNode.insertBefore(hm, s); })(); </script>","Google":"<!-- Global Site Tag (gtag.js) - Google Analytics --> <script async src=\"https://www.googletagmanager.com/gtag/js?id=UA-106635475-1\"></script> <script> window.dataLayer = window.dataLayer || []; function gtag(){dataLayer.push(arguments)}; gtag('js', new Date());\ngtag('config', 'UA-106635475-1'); </script>"}},{"_id":"gallery","data":{"自拍-1":{"full_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy1.jpg","thumb_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy1.jpg","descr":"自拍哈哈哈哈！"},"自拍-2":{"full_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy2.jpg","thumb_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy2.jpg","descr":"自拍哈哈哈哈！"},"自拍-3":{"full_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy3.jpg","thumb_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy3.jpg","descr":"自拍哈哈哈哈！"},"自拍-4":{"full_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy4.jpg","thumb_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy4.jpg","descr":"自拍哈哈哈哈！"},"自拍-5":{"full_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy5.jpg","thumb_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy5.jpg","descr":"自拍哈哈哈哈！"},"自拍-6":{"full_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy6.jpg","thumb_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy6.jpg","descr":"自拍哈哈哈哈！"},"自拍-7":{"full_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy7.jpg","thumb_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy7.jpg","descr":"自拍哈哈哈哈！"},"《sleep no more》":{"full_link":"http://ow9cw9x3t.bkt.clouddn.com/sleep-no-more.jpg","thumb_link":"http://ow9cw9x3t.bkt.clouddn.com/sleep-no-more.jpg","descr":"自拍哈哈哈哈！"},"《sleep no more》-2":{"full_link":"http://ow9cw9x3t.bkt.clouddn.com/sleep-no-more-2.jpg","thumb_link":"http://ow9cw9x3t.bkt.clouddn.com/sleep-no-more-2.jpg","descr":"自拍哈哈哈哈！"}}},{"_id":"links","data":{"neoFelhz1":{"link":"https://nfz.moe/","avatar":"https://qiniu.viosey.com/img/blog/favatar/neofelhz1.png","descr":"拾穗者的故事"},"创造狮":{"link":"http://chuangzaoshi.com/","avatar":"https://qiniu.viosey.com/img/blog/favatar/chuangzaoshi.png","descr":" 为创意工作者而设计"}}}],"Page":[{"title":"映像","date":"2017-09-13T08:59:43.614Z","layout":"gallery","_content":"","source":"gallery/index.md","raw":"---\ntitle: 映像\ndate:\nlayout: gallery\n---","updated":"2017-09-13T08:59:43.613Z","path":"gallery/index.html","comments":1,"_id":"cj7squ94f000194tu2fz7dzcl","content":"","site":{"data":{"ours":{"our1":{"date":"2017-07-23T00:00:00.000Z","title":"women","desc":"hello"}},"head":{"Baidu":"<script> var _hmt = _hmt || []; (function() { var hm = document.createElement(\"script\"); hm.src = \"https://hm.baidu.com/hm.js?2faaec6fd26d66bbf5e331e48cc87735\"; var s = document.getElementsByTagName(\"script\")[0]; s.parentNode.insertBefore(hm, s); })(); </script>","Google":"<!-- Global Site Tag (gtag.js) - Google Analytics --> <script async src=\"https://www.googletagmanager.com/gtag/js?id=UA-106635475-1\"></script> <script> window.dataLayer = window.dataLayer || []; function gtag(){dataLayer.push(arguments)}; gtag('js', new Date());\ngtag('config', 'UA-106635475-1'); </script>"},"gallery":{"自拍-1":{"full_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy1.jpg","thumb_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy1.jpg","descr":"自拍哈哈哈哈！"},"自拍-2":{"full_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy2.jpg","thumb_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy2.jpg","descr":"自拍哈哈哈哈！"},"自拍-3":{"full_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy3.jpg","thumb_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy3.jpg","descr":"自拍哈哈哈哈！"},"自拍-4":{"full_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy4.jpg","thumb_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy4.jpg","descr":"自拍哈哈哈哈！"},"自拍-5":{"full_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy5.jpg","thumb_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy5.jpg","descr":"自拍哈哈哈哈！"},"自拍-6":{"full_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy6.jpg","thumb_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy6.jpg","descr":"自拍哈哈哈哈！"},"自拍-7":{"full_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy7.jpg","thumb_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy7.jpg","descr":"自拍哈哈哈哈！"},"《sleep no more》":{"full_link":"http://ow9cw9x3t.bkt.clouddn.com/sleep-no-more.jpg","thumb_link":"http://ow9cw9x3t.bkt.clouddn.com/sleep-no-more.jpg","descr":"自拍哈哈哈哈！"},"《sleep no more》-2":{"full_link":"http://ow9cw9x3t.bkt.clouddn.com/sleep-no-more-2.jpg","thumb_link":"http://ow9cw9x3t.bkt.clouddn.com/sleep-no-more-2.jpg","descr":"自拍哈哈哈哈！"}},"links":{"neoFelhz1":{"link":"https://nfz.moe/","avatar":"https://qiniu.viosey.com/img/blog/favatar/neofelhz1.png","descr":"拾穗者的故事"},"创造狮":{"link":"http://chuangzaoshi.com/","avatar":"https://qiniu.viosey.com/img/blog/favatar/chuangzaoshi.png","descr":" 为创意工作者而设计"}}}},"excerpt":"","more":""},{"title":"音乐播放器","date":"2017-09-18T03:25:55.490Z","layout":"music","_content":"","source":"music/index.md","raw":"---\ntitle: 音乐播放器\ndate:\nlayout: music\n---","updated":"2017-09-18T03:25:55.491Z","path":"music/index.html","comments":1,"_id":"cj7squ94s000394tu7jaapw2e","content":"","site":{"data":{"ours":{"our1":{"date":"2017-07-23T00:00:00.000Z","title":"women","desc":"hello"}},"head":{"Baidu":"<script> var _hmt = _hmt || []; (function() { var hm = document.createElement(\"script\"); hm.src = \"https://hm.baidu.com/hm.js?2faaec6fd26d66bbf5e331e48cc87735\"; var s = document.getElementsByTagName(\"script\")[0]; s.parentNode.insertBefore(hm, s); })(); </script>","Google":"<!-- Global Site Tag (gtag.js) - Google Analytics --> <script async src=\"https://www.googletagmanager.com/gtag/js?id=UA-106635475-1\"></script> <script> window.dataLayer = window.dataLayer || []; function gtag(){dataLayer.push(arguments)}; gtag('js', new Date());\ngtag('config', 'UA-106635475-1'); </script>"},"gallery":{"自拍-1":{"full_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy1.jpg","thumb_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy1.jpg","descr":"自拍哈哈哈哈！"},"自拍-2":{"full_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy2.jpg","thumb_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy2.jpg","descr":"自拍哈哈哈哈！"},"自拍-3":{"full_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy3.jpg","thumb_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy3.jpg","descr":"自拍哈哈哈哈！"},"自拍-4":{"full_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy4.jpg","thumb_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy4.jpg","descr":"自拍哈哈哈哈！"},"自拍-5":{"full_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy5.jpg","thumb_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy5.jpg","descr":"自拍哈哈哈哈！"},"自拍-6":{"full_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy6.jpg","thumb_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy6.jpg","descr":"自拍哈哈哈哈！"},"自拍-7":{"full_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy7.jpg","thumb_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy7.jpg","descr":"自拍哈哈哈哈！"},"《sleep no more》":{"full_link":"http://ow9cw9x3t.bkt.clouddn.com/sleep-no-more.jpg","thumb_link":"http://ow9cw9x3t.bkt.clouddn.com/sleep-no-more.jpg","descr":"自拍哈哈哈哈！"},"《sleep no more》-2":{"full_link":"http://ow9cw9x3t.bkt.clouddn.com/sleep-no-more-2.jpg","thumb_link":"http://ow9cw9x3t.bkt.clouddn.com/sleep-no-more-2.jpg","descr":"自拍哈哈哈哈！"}},"links":{"neoFelhz1":{"link":"https://nfz.moe/","avatar":"https://qiniu.viosey.com/img/blog/favatar/neofelhz1.png","descr":"拾穗者的故事"},"创造狮":{"link":"http://chuangzaoshi.com/","avatar":"https://qiniu.viosey.com/img/blog/favatar/chuangzaoshi.png","descr":" 为创意工作者而设计"}}}},"excerpt":"","more":""},{"title":"友情链接","date":"2017-09-13T08:59:57.905Z","layout":"links","_content":"","source":"links/index.md","raw":"---\ntitle: 友情链接\ndate:\nlayout: links\n---","updated":"2017-09-13T08:59:57.903Z","path":"links/index.html","comments":1,"_id":"cj7squ95j000794tuhroi6n30","content":"","site":{"data":{"ours":{"our1":{"date":"2017-07-23T00:00:00.000Z","title":"women","desc":"hello"}},"head":{"Baidu":"<script> var _hmt = _hmt || []; (function() { var hm = document.createElement(\"script\"); hm.src = \"https://hm.baidu.com/hm.js?2faaec6fd26d66bbf5e331e48cc87735\"; var s = document.getElementsByTagName(\"script\")[0]; s.parentNode.insertBefore(hm, s); })(); </script>","Google":"<!-- Global Site Tag (gtag.js) - Google Analytics --> <script async src=\"https://www.googletagmanager.com/gtag/js?id=UA-106635475-1\"></script> <script> window.dataLayer = window.dataLayer || []; function gtag(){dataLayer.push(arguments)}; gtag('js', new Date());\ngtag('config', 'UA-106635475-1'); </script>"},"gallery":{"自拍-1":{"full_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy1.jpg","thumb_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy1.jpg","descr":"自拍哈哈哈哈！"},"自拍-2":{"full_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy2.jpg","thumb_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy2.jpg","descr":"自拍哈哈哈哈！"},"自拍-3":{"full_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy3.jpg","thumb_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy3.jpg","descr":"自拍哈哈哈哈！"},"自拍-4":{"full_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy4.jpg","thumb_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy4.jpg","descr":"自拍哈哈哈哈！"},"自拍-5":{"full_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy5.jpg","thumb_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy5.jpg","descr":"自拍哈哈哈哈！"},"自拍-6":{"full_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy6.jpg","thumb_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy6.jpg","descr":"自拍哈哈哈哈！"},"自拍-7":{"full_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy7.jpg","thumb_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy7.jpg","descr":"自拍哈哈哈哈！"},"《sleep no more》":{"full_link":"http://ow9cw9x3t.bkt.clouddn.com/sleep-no-more.jpg","thumb_link":"http://ow9cw9x3t.bkt.clouddn.com/sleep-no-more.jpg","descr":"自拍哈哈哈哈！"},"《sleep no more》-2":{"full_link":"http://ow9cw9x3t.bkt.clouddn.com/sleep-no-more-2.jpg","thumb_link":"http://ow9cw9x3t.bkt.clouddn.com/sleep-no-more-2.jpg","descr":"自拍哈哈哈哈！"}},"links":{"neoFelhz1":{"link":"https://nfz.moe/","avatar":"https://qiniu.viosey.com/img/blog/favatar/neofelhz1.png","descr":"拾穗者的故事"},"创造狮":{"link":"http://chuangzaoshi.com/","avatar":"https://qiniu.viosey.com/img/blog/favatar/chuangzaoshi.png","descr":" 为创意工作者而设计"}}}},"excerpt":"","more":""},{"title":"黑客帝国","date":"2017-09-19T02:51:16.370Z","layout":"matrix","_content":"","source":"matrix/index.md","raw":"---\ntitle: 黑客帝国\ndate:\nlayout: matrix\n---","updated":"2017-09-19T02:51:16.369Z","path":"matrix/index.html","comments":1,"_id":"cj7squ95w000994tu6sexuakh","content":"","site":{"data":{"ours":{"our1":{"date":"2017-07-23T00:00:00.000Z","title":"women","desc":"hello"}},"head":{"Baidu":"<script> var _hmt = _hmt || []; (function() { var hm = document.createElement(\"script\"); hm.src = \"https://hm.baidu.com/hm.js?2faaec6fd26d66bbf5e331e48cc87735\"; var s = document.getElementsByTagName(\"script\")[0]; s.parentNode.insertBefore(hm, s); })(); </script>","Google":"<!-- Global Site Tag (gtag.js) - Google Analytics --> <script async src=\"https://www.googletagmanager.com/gtag/js?id=UA-106635475-1\"></script> <script> window.dataLayer = window.dataLayer || []; function gtag(){dataLayer.push(arguments)}; gtag('js', new Date());\ngtag('config', 'UA-106635475-1'); </script>"},"gallery":{"自拍-1":{"full_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy1.jpg","thumb_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy1.jpg","descr":"自拍哈哈哈哈！"},"自拍-2":{"full_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy2.jpg","thumb_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy2.jpg","descr":"自拍哈哈哈哈！"},"自拍-3":{"full_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy3.jpg","thumb_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy3.jpg","descr":"自拍哈哈哈哈！"},"自拍-4":{"full_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy4.jpg","thumb_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy4.jpg","descr":"自拍哈哈哈哈！"},"自拍-5":{"full_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy5.jpg","thumb_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy5.jpg","descr":"自拍哈哈哈哈！"},"自拍-6":{"full_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy6.jpg","thumb_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy6.jpg","descr":"自拍哈哈哈哈！"},"自拍-7":{"full_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy7.jpg","thumb_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy7.jpg","descr":"自拍哈哈哈哈！"},"《sleep no more》":{"full_link":"http://ow9cw9x3t.bkt.clouddn.com/sleep-no-more.jpg","thumb_link":"http://ow9cw9x3t.bkt.clouddn.com/sleep-no-more.jpg","descr":"自拍哈哈哈哈！"},"《sleep no more》-2":{"full_link":"http://ow9cw9x3t.bkt.clouddn.com/sleep-no-more-2.jpg","thumb_link":"http://ow9cw9x3t.bkt.clouddn.com/sleep-no-more-2.jpg","descr":"自拍哈哈哈哈！"}},"links":{"neoFelhz1":{"link":"https://nfz.moe/","avatar":"https://qiniu.viosey.com/img/blog/favatar/neofelhz1.png","descr":"拾穗者的故事"},"创造狮":{"link":"http://chuangzaoshi.com/","avatar":"https://qiniu.viosey.com/img/blog/favatar/chuangzaoshi.png","descr":" 为创意工作者而设计"}}}},"excerpt":"","more":""},{"title":"标签","date":"2017-09-13T09:25:21.969Z","layout":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: 标签\ndate:\nlayout: tags\n---","updated":"2017-09-13T09:25:21.968Z","path":"tags/index.html","comments":1,"_id":"cj7squ988001d94tumgdnxfff","content":"","site":{"data":{"ours":{"our1":{"date":"2017-07-23T00:00:00.000Z","title":"women","desc":"hello"}},"head":{"Baidu":"<script> var _hmt = _hmt || []; (function() { var hm = document.createElement(\"script\"); hm.src = \"https://hm.baidu.com/hm.js?2faaec6fd26d66bbf5e331e48cc87735\"; var s = document.getElementsByTagName(\"script\")[0]; s.parentNode.insertBefore(hm, s); })(); </script>","Google":"<!-- Global Site Tag (gtag.js) - Google Analytics --> <script async src=\"https://www.googletagmanager.com/gtag/js?id=UA-106635475-1\"></script> <script> window.dataLayer = window.dataLayer || []; function gtag(){dataLayer.push(arguments)}; gtag('js', new Date());\ngtag('config', 'UA-106635475-1'); </script>"},"gallery":{"自拍-1":{"full_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy1.jpg","thumb_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy1.jpg","descr":"自拍哈哈哈哈！"},"自拍-2":{"full_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy2.jpg","thumb_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy2.jpg","descr":"自拍哈哈哈哈！"},"自拍-3":{"full_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy3.jpg","thumb_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy3.jpg","descr":"自拍哈哈哈哈！"},"自拍-4":{"full_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy4.jpg","thumb_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy4.jpg","descr":"自拍哈哈哈哈！"},"自拍-5":{"full_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy5.jpg","thumb_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy5.jpg","descr":"自拍哈哈哈哈！"},"自拍-6":{"full_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy6.jpg","thumb_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy6.jpg","descr":"自拍哈哈哈哈！"},"自拍-7":{"full_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy7.jpg","thumb_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy7.jpg","descr":"自拍哈哈哈哈！"},"《sleep no more》":{"full_link":"http://ow9cw9x3t.bkt.clouddn.com/sleep-no-more.jpg","thumb_link":"http://ow9cw9x3t.bkt.clouddn.com/sleep-no-more.jpg","descr":"自拍哈哈哈哈！"},"《sleep no more》-2":{"full_link":"http://ow9cw9x3t.bkt.clouddn.com/sleep-no-more-2.jpg","thumb_link":"http://ow9cw9x3t.bkt.clouddn.com/sleep-no-more-2.jpg","descr":"自拍哈哈哈哈！"}},"links":{"neoFelhz1":{"link":"https://nfz.moe/","avatar":"https://qiniu.viosey.com/img/blog/favatar/neofelhz1.png","descr":"拾穗者的故事"},"创造狮":{"link":"http://chuangzaoshi.com/","avatar":"https://qiniu.viosey.com/img/blog/favatar/chuangzaoshi.png","descr":" 为创意工作者而设计"}}}},"excerpt":"","more":""},{"title":"我们","date":"2017-09-22T06:49:17.301Z","layout":"ours","_content":"","source":"ours/index.md","raw":"---\ntitle: 我们\ndate: \nlayout: ours\n---\n","updated":"2017-09-22T06:49:17.301Z","path":"ours/index.html","_id":"cj7squ98b001e94tusdmf5yhl","comments":1,"content":"","site":{"data":{"ours":{"our1":{"date":"2017-07-23T00:00:00.000Z","title":"women","desc":"hello"}},"head":{"Baidu":"<script> var _hmt = _hmt || []; (function() { var hm = document.createElement(\"script\"); hm.src = \"https://hm.baidu.com/hm.js?2faaec6fd26d66bbf5e331e48cc87735\"; var s = document.getElementsByTagName(\"script\")[0]; s.parentNode.insertBefore(hm, s); })(); </script>","Google":"<!-- Global Site Tag (gtag.js) - Google Analytics --> <script async src=\"https://www.googletagmanager.com/gtag/js?id=UA-106635475-1\"></script> <script> window.dataLayer = window.dataLayer || []; function gtag(){dataLayer.push(arguments)}; gtag('js', new Date());\ngtag('config', 'UA-106635475-1'); </script>"},"gallery":{"自拍-1":{"full_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy1.jpg","thumb_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy1.jpg","descr":"自拍哈哈哈哈！"},"自拍-2":{"full_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy2.jpg","thumb_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy2.jpg","descr":"自拍哈哈哈哈！"},"自拍-3":{"full_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy3.jpg","thumb_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy3.jpg","descr":"自拍哈哈哈哈！"},"自拍-4":{"full_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy4.jpg","thumb_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy4.jpg","descr":"自拍哈哈哈哈！"},"自拍-5":{"full_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy5.jpg","thumb_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy5.jpg","descr":"自拍哈哈哈哈！"},"自拍-6":{"full_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy6.jpg","thumb_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy6.jpg","descr":"自拍哈哈哈哈！"},"自拍-7":{"full_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy7.jpg","thumb_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy7.jpg","descr":"自拍哈哈哈哈！"},"《sleep no more》":{"full_link":"http://ow9cw9x3t.bkt.clouddn.com/sleep-no-more.jpg","thumb_link":"http://ow9cw9x3t.bkt.clouddn.com/sleep-no-more.jpg","descr":"自拍哈哈哈哈！"},"《sleep no more》-2":{"full_link":"http://ow9cw9x3t.bkt.clouddn.com/sleep-no-more-2.jpg","thumb_link":"http://ow9cw9x3t.bkt.clouddn.com/sleep-no-more-2.jpg","descr":"自拍哈哈哈哈！"}},"links":{"neoFelhz1":{"link":"https://nfz.moe/","avatar":"https://qiniu.viosey.com/img/blog/favatar/neofelhz1.png","descr":"拾穗者的故事"},"创造狮":{"link":"http://chuangzaoshi.com/","avatar":"https://qiniu.viosey.com/img/blog/favatar/chuangzaoshi.png","descr":" 为创意工作者而设计"}}}},"excerpt":"","more":""},{"title":"时间轴","date":"2017-09-13T09:29:17.610Z","layout":"timeline","_content":"","source":"timeline/index.md","raw":"---\ntitle: 时间轴\ndate:\nlayout: timeline\n---","updated":"2017-09-13T09:29:17.609Z","path":"timeline/index.html","comments":1,"_id":"cj7squ98c001g94tustin50u7","content":"","site":{"data":{"ours":{"our1":{"date":"2017-07-23T00:00:00.000Z","title":"women","desc":"hello"}},"head":{"Baidu":"<script> var _hmt = _hmt || []; (function() { var hm = document.createElement(\"script\"); hm.src = \"https://hm.baidu.com/hm.js?2faaec6fd26d66bbf5e331e48cc87735\"; var s = document.getElementsByTagName(\"script\")[0]; s.parentNode.insertBefore(hm, s); })(); </script>","Google":"<!-- Global Site Tag (gtag.js) - Google Analytics --> <script async src=\"https://www.googletagmanager.com/gtag/js?id=UA-106635475-1\"></script> <script> window.dataLayer = window.dataLayer || []; function gtag(){dataLayer.push(arguments)}; gtag('js', new Date());\ngtag('config', 'UA-106635475-1'); </script>"},"gallery":{"自拍-1":{"full_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy1.jpg","thumb_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy1.jpg","descr":"自拍哈哈哈哈！"},"自拍-2":{"full_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy2.jpg","thumb_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy2.jpg","descr":"自拍哈哈哈哈！"},"自拍-3":{"full_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy3.jpg","thumb_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy3.jpg","descr":"自拍哈哈哈哈！"},"自拍-4":{"full_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy4.jpg","thumb_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy4.jpg","descr":"自拍哈哈哈哈！"},"自拍-5":{"full_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy5.jpg","thumb_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy5.jpg","descr":"自拍哈哈哈哈！"},"自拍-6":{"full_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy6.jpg","thumb_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy6.jpg","descr":"自拍哈哈哈哈！"},"自拍-7":{"full_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy7.jpg","thumb_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy7.jpg","descr":"自拍哈哈哈哈！"},"《sleep no more》":{"full_link":"http://ow9cw9x3t.bkt.clouddn.com/sleep-no-more.jpg","thumb_link":"http://ow9cw9x3t.bkt.clouddn.com/sleep-no-more.jpg","descr":"自拍哈哈哈哈！"},"《sleep no more》-2":{"full_link":"http://ow9cw9x3t.bkt.clouddn.com/sleep-no-more-2.jpg","thumb_link":"http://ow9cw9x3t.bkt.clouddn.com/sleep-no-more-2.jpg","descr":"自拍哈哈哈哈！"}},"links":{"neoFelhz1":{"link":"https://nfz.moe/","avatar":"https://qiniu.viosey.com/img/blog/favatar/neofelhz1.png","descr":"拾穗者的故事"},"创造狮":{"link":"http://chuangzaoshi.com/","avatar":"https://qiniu.viosey.com/img/blog/favatar/chuangzaoshi.png","descr":" 为创意工作者而设计"}}}},"excerpt":"","more":""}],"Post":[{"title":"JS原生图片懒加载","date":"2017-09-20T06:43:41.000Z","thumbnail":"http://ow9cw9x3t.bkt.clouddn.com/banner.png","_content":"\n### 图片懒加载\n懒加载是前端优化的一种技术，旨在用户进入页面后，当滚动页面将要到达图片位置时才加载图片。\n加快页面加载速度，极大的提升了用户体验，也避免了用户进入页面之后就发送n多个图片请求，服务器吃不消啊！\n\n### 实现原理\n先将图片的```src```设置为空或者小的图片，将真实的图片地址存在```img```的自定义属性中，比如```data-src```中，等到页面滚动至图片位置时将真实图片位置复制给src属性。\n\n1. 页面中的img元素，如果没有src属性，浏览器就不会发出请求去下载图片\n2. 用户滚动页面至图片位置时，img元素获取到真正的路径后，开始发送请求加载图片\n\n### JS中位置相关\n> * ```screenLeft/screenX```: 窗口相对于屏幕左边的位置 \n> * ```screenTop/screenY```: 窗口相对于屏幕上边的位置\n\n**表示的是从屏幕左边和上边到window对象表示的可见区域的距离**。\n\n```javascript\n//FF中支持 screenX 和 screenY\nlet leftPos = (typeof window.screenLeft == 'Number') ? window.screenLeft : window.screenX;\nlet TopPos = (typeof window.screenTop == 'Number') ? window.screenTop : window.screenY;\n```\n\n若window对象是最外层对象，而且浏览器窗口贴紧屏幕上方，则 ```screenTop/screenY``` 为 0\n\n> * ```clientWidth/clientHeight``` : 页面视口大小信息（ALL，注意获取方式）\n> * ```innerWidth/innerHeight``` : 获取页面视口大小（页面尺寸）,页面视图容器大小\n> * ```outerWidth/outerHeight``` : 获取浏览器窗口本身的大小（IE9+、Safari、FF）\n\n```javascript\nlet pageWidth = window.innerWidth;\nlet pageHeight = window.innerHeight;\n\nif( typeof pageWidth != 'Number'){\n    if(document.compatMode == 'CSS!Compat'){\n        //标准模式\n        pageWidth = document.documentElement.clientWidth;\n        pageHeight = document.documentElement.clientHeight;\n    } else {\n        //怪异模式（混杂模式）\n        pageWidth = document.body.clientWidth;\n        pageHeight = document.body.clientHeight;\n    }\n}\n```\n\n> *   \n\n\n```javascript\nlet imgCurrent = 4;//初始化页面加载图片个数\nlet imgCount = 40;//总图片数\nlet height = Math.min(document.body.clientHeight, document.documentElement.clientHeight);\nlet img = document.getElementsByTagName('img');\n\nwindow.onscroll = null;\nwindow.onscroll = () => {\n\n    let scrollTop = document.body.scrollTop || document.documentElement.scrollTop;\n    let clientHeight = document.body.clientHeight;\n    let screenHeight = window.screenHeight;\n\n    //图片懒加载\n    for (let i = this.imgCurrent; i < this.imgCount; i++) {\n        if (img[i].offsetParent.offsetTop < clientHeight + scrollTop) {\n            img[i].src = img[i].getAttribute('data-src');\n            img[i].style.opacity = 1;\n            this.imgCurrent = i + 1;\n            console.log('图片加载[' + i + ']:' + img[i].src);\n        }\n    }\n};  \n```\n\n\n\n","source":"_posts/JS原生图片懒加载.md","raw":"---\ntitle: JS原生图片懒加载\ndate: 2017-09-20 14:43:41\ntags: [Javascript, 图片, 懒加载， 原生JS]\ncategories: Javascript\nthumbnail: http://ow9cw9x3t.bkt.clouddn.com/banner.png\n---\n\n### 图片懒加载\n懒加载是前端优化的一种技术，旨在用户进入页面后，当滚动页面将要到达图片位置时才加载图片。\n加快页面加载速度，极大的提升了用户体验，也避免了用户进入页面之后就发送n多个图片请求，服务器吃不消啊！\n\n### 实现原理\n先将图片的```src```设置为空或者小的图片，将真实的图片地址存在```img```的自定义属性中，比如```data-src```中，等到页面滚动至图片位置时将真实图片位置复制给src属性。\n\n1. 页面中的img元素，如果没有src属性，浏览器就不会发出请求去下载图片\n2. 用户滚动页面至图片位置时，img元素获取到真正的路径后，开始发送请求加载图片\n\n### JS中位置相关\n> * ```screenLeft/screenX```: 窗口相对于屏幕左边的位置 \n> * ```screenTop/screenY```: 窗口相对于屏幕上边的位置\n\n**表示的是从屏幕左边和上边到window对象表示的可见区域的距离**。\n\n```javascript\n//FF中支持 screenX 和 screenY\nlet leftPos = (typeof window.screenLeft == 'Number') ? window.screenLeft : window.screenX;\nlet TopPos = (typeof window.screenTop == 'Number') ? window.screenTop : window.screenY;\n```\n\n若window对象是最外层对象，而且浏览器窗口贴紧屏幕上方，则 ```screenTop/screenY``` 为 0\n\n> * ```clientWidth/clientHeight``` : 页面视口大小信息（ALL，注意获取方式）\n> * ```innerWidth/innerHeight``` : 获取页面视口大小（页面尺寸）,页面视图容器大小\n> * ```outerWidth/outerHeight``` : 获取浏览器窗口本身的大小（IE9+、Safari、FF）\n\n```javascript\nlet pageWidth = window.innerWidth;\nlet pageHeight = window.innerHeight;\n\nif( typeof pageWidth != 'Number'){\n    if(document.compatMode == 'CSS!Compat'){\n        //标准模式\n        pageWidth = document.documentElement.clientWidth;\n        pageHeight = document.documentElement.clientHeight;\n    } else {\n        //怪异模式（混杂模式）\n        pageWidth = document.body.clientWidth;\n        pageHeight = document.body.clientHeight;\n    }\n}\n```\n\n> *   \n\n\n```javascript\nlet imgCurrent = 4;//初始化页面加载图片个数\nlet imgCount = 40;//总图片数\nlet height = Math.min(document.body.clientHeight, document.documentElement.clientHeight);\nlet img = document.getElementsByTagName('img');\n\nwindow.onscroll = null;\nwindow.onscroll = () => {\n\n    let scrollTop = document.body.scrollTop || document.documentElement.scrollTop;\n    let clientHeight = document.body.clientHeight;\n    let screenHeight = window.screenHeight;\n\n    //图片懒加载\n    for (let i = this.imgCurrent; i < this.imgCount; i++) {\n        if (img[i].offsetParent.offsetTop < clientHeight + scrollTop) {\n            img[i].src = img[i].getAttribute('data-src');\n            img[i].style.opacity = 1;\n            this.imgCurrent = i + 1;\n            console.log('图片加载[' + i + ']:' + img[i].src);\n        }\n    }\n};  \n```\n\n\n\n","slug":"JS原生图片懒加载","published":1,"updated":"2017-09-22T08:09:33.208Z","_id":"cj7squ940000094tuqv6hx5nm","comments":1,"layout":"post","photos":[],"link":"","content":"<h3 id=\"图片懒加载\"><a href=\"#图片懒加载\" class=\"headerlink\" title=\"图片懒加载\"></a>图片懒加载</h3><p>懒加载是前端优化的一种技术，旨在用户进入页面后，当滚动页面将要到达图片位置时才加载图片。<br>加快页面加载速度，极大的提升了用户体验，也避免了用户进入页面之后就发送n多个图片请求，服务器吃不消啊！</p>\n<h3 id=\"实现原理\"><a href=\"#实现原理\" class=\"headerlink\" title=\"实现原理\"></a>实现原理</h3><p>先将图片的<code>src</code>设置为空或者小的图片，将真实的图片地址存在<code>img</code>的自定义属性中，比如<code>data-src</code>中，等到页面滚动至图片位置时将真实图片位置复制给src属性。</p>\n<ol>\n<li>页面中的img元素，如果没有src属性，浏览器就不会发出请求去下载图片</li>\n<li>用户滚动页面至图片位置时，img元素获取到真正的路径后，开始发送请求加载图片</li>\n</ol>\n<h3 id=\"JS中位置相关\"><a href=\"#JS中位置相关\" class=\"headerlink\" title=\"JS中位置相关\"></a>JS中位置相关</h3><blockquote>\n<ul>\n<li><code>screenLeft/screenX</code>: 窗口相对于屏幕左边的位置 </li>\n<li><code>screenTop/screenY</code>: 窗口相对于屏幕上边的位置</li>\n</ul>\n</blockquote>\n<p><strong>表示的是从屏幕左边和上边到window对象表示的可见区域的距离</strong>。</p>\n<pre class=\" language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\" spellcheck=\"true\">//FF中支持 screenX 和 screenY</span>\n<span class=\"token keyword\">let</span> leftPos <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> window<span class=\"token punctuation\">.</span>screenLeft <span class=\"token operator\">==</span> <span class=\"token string\">'Number'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> window<span class=\"token punctuation\">.</span>screenLeft <span class=\"token punctuation\">:</span> window<span class=\"token punctuation\">.</span>screenX<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> TopPos <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> window<span class=\"token punctuation\">.</span>screenTop <span class=\"token operator\">==</span> <span class=\"token string\">'Number'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> window<span class=\"token punctuation\">.</span>screenTop <span class=\"token punctuation\">:</span> window<span class=\"token punctuation\">.</span>screenY<span class=\"token punctuation\">;</span>\n</code></pre>\n<p>若window对象是最外层对象，而且浏览器窗口贴紧屏幕上方，则 <code>screenTop/screenY</code> 为 0</p>\n<blockquote>\n<ul>\n<li><code>clientWidth/clientHeight</code> : 页面视口大小信息（ALL，注意获取方式）</li>\n<li><code>innerWidth/innerHeight</code> : 获取页面视口大小（页面尺寸）,页面视图容器大小</li>\n<li><code>outerWidth/outerHeight</code> : 获取浏览器窗口本身的大小（IE9+、Safari、FF）</li>\n</ul>\n</blockquote>\n<pre class=\" language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> pageWidth <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span>innerWidth<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> pageHeight <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span>innerHeight<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">typeof</span> pageWidth <span class=\"token operator\">!=</span> <span class=\"token string\">'Number'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span>compatMode <span class=\"token operator\">==</span> <span class=\"token string\">'CSS!Compat'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token comment\" spellcheck=\"true\">//标准模式</span>\n        pageWidth <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span>documentElement<span class=\"token punctuation\">.</span>clientWidth<span class=\"token punctuation\">;</span>\n        pageHeight <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span>documentElement<span class=\"token punctuation\">.</span>clientHeight<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\" spellcheck=\"true\">//怪异模式（混杂模式）</span>\n        pageWidth <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>clientWidth<span class=\"token punctuation\">;</span>\n        pageHeight <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>clientHeight<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<blockquote>\n<ul>\n<li></li>\n</ul>\n</blockquote>\n<pre class=\" language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> imgCurrent <span class=\"token operator\">=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span><span class=\"token comment\" spellcheck=\"true\">//初始化页面加载图片个数</span>\n<span class=\"token keyword\">let</span> imgCount <span class=\"token operator\">=</span> <span class=\"token number\">40</span><span class=\"token punctuation\">;</span><span class=\"token comment\" spellcheck=\"true\">//总图片数</span>\n<span class=\"token keyword\">let</span> height <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">min</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>clientHeight<span class=\"token punctuation\">,</span> document<span class=\"token punctuation\">.</span>documentElement<span class=\"token punctuation\">.</span>clientHeight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> img <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementsByTagName</span><span class=\"token punctuation\">(</span><span class=\"token string\">'img'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nwindow<span class=\"token punctuation\">.</span>onscroll <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\nwindow<span class=\"token punctuation\">.</span>onscroll <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token keyword\">let</span> scrollTop <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>scrollTop <span class=\"token operator\">||</span> document<span class=\"token punctuation\">.</span>documentElement<span class=\"token punctuation\">.</span>scrollTop<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">let</span> clientHeight <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>clientHeight<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">let</span> screenHeight <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span>screenHeight<span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\" spellcheck=\"true\">//图片懒加载</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>imgCurrent<span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>imgCount<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>offsetParent<span class=\"token punctuation\">.</span>offsetTop <span class=\"token operator\">&lt;</span> clientHeight <span class=\"token operator\">+</span> scrollTop<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            img<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>src <span class=\"token operator\">=</span> img<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">getAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'data-src'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            img<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>opacity <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>imgCurrent <span class=\"token operator\">=</span> i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n            console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'图片加载['</span> <span class=\"token operator\">+</span> i <span class=\"token operator\">+</span> <span class=\"token string\">']:'</span> <span class=\"token operator\">+</span> img<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>src<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre>\n","site":{"data":{"ours":{"our1":{"date":"2017-07-23T00:00:00.000Z","title":"women","desc":"hello"}},"head":{"Baidu":"<script> var _hmt = _hmt || []; (function() { var hm = document.createElement(\"script\"); hm.src = \"https://hm.baidu.com/hm.js?2faaec6fd26d66bbf5e331e48cc87735\"; var s = document.getElementsByTagName(\"script\")[0]; s.parentNode.insertBefore(hm, s); })(); </script>","Google":"<!-- Global Site Tag (gtag.js) - Google Analytics --> <script async src=\"https://www.googletagmanager.com/gtag/js?id=UA-106635475-1\"></script> <script> window.dataLayer = window.dataLayer || []; function gtag(){dataLayer.push(arguments)}; gtag('js', new Date());\ngtag('config', 'UA-106635475-1'); </script>"},"gallery":{"自拍-1":{"full_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy1.jpg","thumb_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy1.jpg","descr":"自拍哈哈哈哈！"},"自拍-2":{"full_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy2.jpg","thumb_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy2.jpg","descr":"自拍哈哈哈哈！"},"自拍-3":{"full_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy3.jpg","thumb_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy3.jpg","descr":"自拍哈哈哈哈！"},"自拍-4":{"full_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy4.jpg","thumb_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy4.jpg","descr":"自拍哈哈哈哈！"},"自拍-5":{"full_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy5.jpg","thumb_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy5.jpg","descr":"自拍哈哈哈哈！"},"自拍-6":{"full_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy6.jpg","thumb_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy6.jpg","descr":"自拍哈哈哈哈！"},"自拍-7":{"full_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy7.jpg","thumb_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy7.jpg","descr":"自拍哈哈哈哈！"},"《sleep no more》":{"full_link":"http://ow9cw9x3t.bkt.clouddn.com/sleep-no-more.jpg","thumb_link":"http://ow9cw9x3t.bkt.clouddn.com/sleep-no-more.jpg","descr":"自拍哈哈哈哈！"},"《sleep no more》-2":{"full_link":"http://ow9cw9x3t.bkt.clouddn.com/sleep-no-more-2.jpg","thumb_link":"http://ow9cw9x3t.bkt.clouddn.com/sleep-no-more-2.jpg","descr":"自拍哈哈哈哈！"}},"links":{"neoFelhz1":{"link":"https://nfz.moe/","avatar":"https://qiniu.viosey.com/img/blog/favatar/neofelhz1.png","descr":"拾穗者的故事"},"创造狮":{"link":"http://chuangzaoshi.com/","avatar":"https://qiniu.viosey.com/img/blog/favatar/chuangzaoshi.png","descr":" 为创意工作者而设计"}}}},"excerpt":"","more":"<h3 id=\"图片懒加载\"><a href=\"#图片懒加载\" class=\"headerlink\" title=\"图片懒加载\"></a>图片懒加载</h3><p>懒加载是前端优化的一种技术，旨在用户进入页面后，当滚动页面将要到达图片位置时才加载图片。<br>加快页面加载速度，极大的提升了用户体验，也避免了用户进入页面之后就发送n多个图片请求，服务器吃不消啊！</p>\n<h3 id=\"实现原理\"><a href=\"#实现原理\" class=\"headerlink\" title=\"实现原理\"></a>实现原理</h3><p>先将图片的<code>src</code>设置为空或者小的图片，将真实的图片地址存在<code>img</code>的自定义属性中，比如<code>data-src</code>中，等到页面滚动至图片位置时将真实图片位置复制给src属性。</p>\n<ol>\n<li>页面中的img元素，如果没有src属性，浏览器就不会发出请求去下载图片</li>\n<li>用户滚动页面至图片位置时，img元素获取到真正的路径后，开始发送请求加载图片</li>\n</ol>\n<h3 id=\"JS中位置相关\"><a href=\"#JS中位置相关\" class=\"headerlink\" title=\"JS中位置相关\"></a>JS中位置相关</h3><blockquote>\n<ul>\n<li><code>screenLeft/screenX</code>: 窗口相对于屏幕左边的位置 </li>\n<li><code>screenTop/screenY</code>: 窗口相对于屏幕上边的位置</li>\n</ul>\n</blockquote>\n<p><strong>表示的是从屏幕左边和上边到window对象表示的可见区域的距离</strong>。</p>\n<pre><code class=\"javascript\">//FF中支持 screenX 和 screenY\nlet leftPos = (typeof window.screenLeft == &#39;Number&#39;) ? window.screenLeft : window.screenX;\nlet TopPos = (typeof window.screenTop == &#39;Number&#39;) ? window.screenTop : window.screenY;\n</code></pre>\n<p>若window对象是最外层对象，而且浏览器窗口贴紧屏幕上方，则 <code>screenTop/screenY</code> 为 0</p>\n<blockquote>\n<ul>\n<li><code>clientWidth/clientHeight</code> : 页面视口大小信息（ALL，注意获取方式）</li>\n<li><code>innerWidth/innerHeight</code> : 获取页面视口大小（页面尺寸）,页面视图容器大小</li>\n<li><code>outerWidth/outerHeight</code> : 获取浏览器窗口本身的大小（IE9+、Safari、FF）</li>\n</ul>\n</blockquote>\n<pre><code class=\"javascript\">let pageWidth = window.innerWidth;\nlet pageHeight = window.innerHeight;\n\nif( typeof pageWidth != &#39;Number&#39;){\n    if(document.compatMode == &#39;CSS!Compat&#39;){\n        //标准模式\n        pageWidth = document.documentElement.clientWidth;\n        pageHeight = document.documentElement.clientHeight;\n    } else {\n        //怪异模式（混杂模式）\n        pageWidth = document.body.clientWidth;\n        pageHeight = document.body.clientHeight;\n    }\n}\n</code></pre>\n<blockquote>\n<ul>\n<li></li>\n</ul>\n</blockquote>\n<pre><code class=\"javascript\">let imgCurrent = 4;//初始化页面加载图片个数\nlet imgCount = 40;//总图片数\nlet height = Math.min(document.body.clientHeight, document.documentElement.clientHeight);\nlet img = document.getElementsByTagName(&#39;img&#39;);\n\nwindow.onscroll = null;\nwindow.onscroll = () =&gt; {\n\n    let scrollTop = document.body.scrollTop || document.documentElement.scrollTop;\n    let clientHeight = document.body.clientHeight;\n    let screenHeight = window.screenHeight;\n\n    //图片懒加载\n    for (let i = this.imgCurrent; i &lt; this.imgCount; i++) {\n        if (img[i].offsetParent.offsetTop &lt; clientHeight + scrollTop) {\n            img[i].src = img[i].getAttribute(&#39;data-src&#39;);\n            img[i].style.opacity = 1;\n            this.imgCurrent = i + 1;\n            console.log(&#39;图片加载[&#39; + i + &#39;]:&#39; + img[i].src);\n        }\n    }\n};\n</code></pre>\n"},{"layout":"react","title":"React-渲染元素","date":"2017-09-18T07:07:31.000Z","thumbnail":"http://ow9cw9x3t.bkt.clouddn.com/react.jpg","_content":"","source":"_posts/React-渲染元素.md","raw":"---\nlayout: react\ntitle: React-渲染元素\ndate: 2017-09-18 15:07:31\ntags: React\ncategories: React\nthumbnail: http://ow9cw9x3t.bkt.clouddn.com/react.jpg\n---\n","slug":"React-渲染元素","published":1,"updated":"2017-09-22T06:49:17.272Z","_id":"cj7squ94j000294tuhgd5wlf6","comments":1,"photos":[],"link":"","content":"","site":{"data":{"ours":{"our1":{"date":"2017-07-23T00:00:00.000Z","title":"women","desc":"hello"}},"head":{"Baidu":"<script> var _hmt = _hmt || []; (function() { var hm = document.createElement(\"script\"); hm.src = \"https://hm.baidu.com/hm.js?2faaec6fd26d66bbf5e331e48cc87735\"; var s = document.getElementsByTagName(\"script\")[0]; s.parentNode.insertBefore(hm, s); })(); </script>","Google":"<!-- Global Site Tag (gtag.js) - Google Analytics --> <script async src=\"https://www.googletagmanager.com/gtag/js?id=UA-106635475-1\"></script> <script> window.dataLayer = window.dataLayer || []; function gtag(){dataLayer.push(arguments)}; gtag('js', new Date());\ngtag('config', 'UA-106635475-1'); </script>"},"gallery":{"自拍-1":{"full_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy1.jpg","thumb_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy1.jpg","descr":"自拍哈哈哈哈！"},"自拍-2":{"full_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy2.jpg","thumb_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy2.jpg","descr":"自拍哈哈哈哈！"},"自拍-3":{"full_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy3.jpg","thumb_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy3.jpg","descr":"自拍哈哈哈哈！"},"自拍-4":{"full_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy4.jpg","thumb_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy4.jpg","descr":"自拍哈哈哈哈！"},"自拍-5":{"full_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy5.jpg","thumb_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy5.jpg","descr":"自拍哈哈哈哈！"},"自拍-6":{"full_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy6.jpg","thumb_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy6.jpg","descr":"自拍哈哈哈哈！"},"自拍-7":{"full_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy7.jpg","thumb_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy7.jpg","descr":"自拍哈哈哈哈！"},"《sleep no more》":{"full_link":"http://ow9cw9x3t.bkt.clouddn.com/sleep-no-more.jpg","thumb_link":"http://ow9cw9x3t.bkt.clouddn.com/sleep-no-more.jpg","descr":"自拍哈哈哈哈！"},"《sleep no more》-2":{"full_link":"http://ow9cw9x3t.bkt.clouddn.com/sleep-no-more-2.jpg","thumb_link":"http://ow9cw9x3t.bkt.clouddn.com/sleep-no-more-2.jpg","descr":"自拍哈哈哈哈！"}},"links":{"neoFelhz1":{"link":"https://nfz.moe/","avatar":"https://qiniu.viosey.com/img/blog/favatar/neofelhz1.png","descr":"拾穗者的故事"},"创造狮":{"link":"http://chuangzaoshi.com/","avatar":"https://qiniu.viosey.com/img/blog/favatar/chuangzaoshi.png","descr":" 为创意工作者而设计"}}}},"excerpt":"","more":""},{"title":"Uncaught TypeError: angular.module(...).provider(...).info is not a function","date":"2017-09-14T07:27:19.000Z","_content":"\n> package.json中angular版本与ngSanitize版本不一致导致错误：\n> Uncaught TypeError: angular.module(...).provider(...).info is not a function\n\n[#github issue 上问题解答](https://github.com/angular/angular.js/issues/15791)\n\n\n* 尬，angular版本必须要与ngSanitize版本一致！\n\n> We do not support running core AngularJS that are at different versions. Can you explain why you would upgrade angular.js to 1.6.x but leave angular-sanitize.js at 1.5.x?\n","source":"_posts/Uncaught-TypeError-angular-module-provider-info-is-not-a-function.md","raw":"---\ntitle: 'Uncaught TypeError: angular.module(...).provider(...).info is not a function'\ndate: 2017-09-14 15:27:19\ntags: [ Angular, ngSanitize]\ncategories: Angular\n---\n\n> package.json中angular版本与ngSanitize版本不一致导致错误：\n> Uncaught TypeError: angular.module(...).provider(...).info is not a function\n\n[#github issue 上问题解答](https://github.com/angular/angular.js/issues/15791)\n\n\n* 尬，angular版本必须要与ngSanitize版本一致！\n\n> We do not support running core AngularJS that are at different versions. Can you explain why you would upgrade angular.js to 1.6.x but leave angular-sanitize.js at 1.5.x?\n","slug":"Uncaught-TypeError-angular-module-provider-info-is-not-a-function","published":1,"updated":"2017-09-22T06:49:17.276Z","_id":"cj7squ95f000694tu9lwayodw","comments":1,"layout":"post","photos":[],"link":"","content":"<blockquote>\n<p>package.json中angular版本与ngSanitize版本不一致导致错误：<br>Uncaught TypeError: angular.module(…).provider(…).info is not a function</p>\n</blockquote>\n<p><a href=\"https://github.com/angular/angular.js/issues/15791\" target=\"_blank\" rel=\"external\">#github issue 上问题解答</a></p>\n<ul>\n<li>尬，angular版本必须要与ngSanitize版本一致！</li>\n</ul>\n<blockquote>\n<p>We do not support running core AngularJS that are at different versions. Can you explain why you would upgrade angular.js to 1.6.x but leave angular-sanitize.js at 1.5.x?</p>\n</blockquote>\n","site":{"data":{"ours":{"our1":{"date":"2017-07-23T00:00:00.000Z","title":"women","desc":"hello"}},"head":{"Baidu":"<script> var _hmt = _hmt || []; (function() { var hm = document.createElement(\"script\"); hm.src = \"https://hm.baidu.com/hm.js?2faaec6fd26d66bbf5e331e48cc87735\"; var s = document.getElementsByTagName(\"script\")[0]; s.parentNode.insertBefore(hm, s); })(); </script>","Google":"<!-- Global Site Tag (gtag.js) - Google Analytics --> <script async src=\"https://www.googletagmanager.com/gtag/js?id=UA-106635475-1\"></script> <script> window.dataLayer = window.dataLayer || []; function gtag(){dataLayer.push(arguments)}; gtag('js', new Date());\ngtag('config', 'UA-106635475-1'); </script>"},"gallery":{"自拍-1":{"full_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy1.jpg","thumb_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy1.jpg","descr":"自拍哈哈哈哈！"},"自拍-2":{"full_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy2.jpg","thumb_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy2.jpg","descr":"自拍哈哈哈哈！"},"自拍-3":{"full_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy3.jpg","thumb_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy3.jpg","descr":"自拍哈哈哈哈！"},"自拍-4":{"full_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy4.jpg","thumb_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy4.jpg","descr":"自拍哈哈哈哈！"},"自拍-5":{"full_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy5.jpg","thumb_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy5.jpg","descr":"自拍哈哈哈哈！"},"自拍-6":{"full_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy6.jpg","thumb_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy6.jpg","descr":"自拍哈哈哈哈！"},"自拍-7":{"full_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy7.jpg","thumb_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy7.jpg","descr":"自拍哈哈哈哈！"},"《sleep no more》":{"full_link":"http://ow9cw9x3t.bkt.clouddn.com/sleep-no-more.jpg","thumb_link":"http://ow9cw9x3t.bkt.clouddn.com/sleep-no-more.jpg","descr":"自拍哈哈哈哈！"},"《sleep no more》-2":{"full_link":"http://ow9cw9x3t.bkt.clouddn.com/sleep-no-more-2.jpg","thumb_link":"http://ow9cw9x3t.bkt.clouddn.com/sleep-no-more-2.jpg","descr":"自拍哈哈哈哈！"}},"links":{"neoFelhz1":{"link":"https://nfz.moe/","avatar":"https://qiniu.viosey.com/img/blog/favatar/neofelhz1.png","descr":"拾穗者的故事"},"创造狮":{"link":"http://chuangzaoshi.com/","avatar":"https://qiniu.viosey.com/img/blog/favatar/chuangzaoshi.png","descr":" 为创意工作者而设计"}}}},"excerpt":"","more":"<blockquote>\n<p>package.json中angular版本与ngSanitize版本不一致导致错误：<br>Uncaught TypeError: angular.module(…).provider(…).info is not a function</p>\n</blockquote>\n<p><a href=\"https://github.com/angular/angular.js/issues/15791\" target=\"_blank\" rel=\"external\">#github issue 上问题解答</a></p>\n<ul>\n<li>尬，angular版本必须要与ngSanitize版本一致！</li>\n</ul>\n<blockquote>\n<p>We do not support running core AngularJS that are at different versions. Can you explain why you would upgrade angular.js to 1.6.x but leave angular-sanitize.js at 1.5.x?</p>\n</blockquote>\n"},{"title":"Hello World","comments":1,"_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\n```css\n.hello{\n    padding: 40px;\n    margin: 20px;\n}\n```\n```javascript\nfunction hello(){\n    var a = 'sss';\n    console.log();\n}\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n\n\n<iframe width=\"100%\" height=\"300\" src=\"//jsfiddle.net/wangyutao/80cqtjc5/embedded/\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\ncomments: true\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\n```css\n.hello{\n    padding: 40px;\n    margin: 20px;\n}\n```\n```javascript\nfunction hello(){\n    var a = 'sss';\n    console.log();\n}\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n\n\n<iframe width=\"100%\" height=\"300\" src=\"//jsfiddle.net/wangyutao/80cqtjc5/embedded/\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n","slug":"hello-world","published":1,"date":"2017-09-13T03:22:30.508Z","updated":"2017-09-15T08:25:56.138Z","layout":"post","photos":[],"link":"","_id":"cj7squ95u000894tu61xw9jh8","content":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"external\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"external\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"external\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"external\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><pre class=\" language-bash\"><code class=\"language-bash\">$ hexo new <span class=\"token string\">\"My New Post\"</span>\n</code></pre>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"external\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><pre class=\" language-bash\"><code class=\"language-bash\">$ hexo server\n</code></pre>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"external\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><pre class=\" language-bash\"><code class=\"language-bash\">$ hexo generate\n</code></pre>\n<pre class=\" language-css\"><code class=\"language-css\"><span class=\"token selector\"><span class=\"token class\">.hello</span></span><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">padding</span><span class=\"token punctuation\">:</span> <span class=\"token number\">40</span>px<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">margin</span><span class=\"token punctuation\">:</span> <span class=\"token number\">20</span>px<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<pre class=\" language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">hello</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> a <span class=\"token operator\">=</span> <span class=\"token string\">'sss'</span><span class=\"token punctuation\">;</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"external\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><pre class=\" language-bash\"><code class=\"language-bash\">$ hexo deploy\n</code></pre>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"external\">Deployment</a></p>\n<iframe width=\"100%\" height=\"300\" src=\"//jsfiddle.net/wangyutao/80cqtjc5/embedded/\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n","site":{"data":{"ours":{"our1":{"date":"2017-07-23T00:00:00.000Z","title":"women","desc":"hello"}},"head":{"Baidu":"<script> var _hmt = _hmt || []; (function() { var hm = document.createElement(\"script\"); hm.src = \"https://hm.baidu.com/hm.js?2faaec6fd26d66bbf5e331e48cc87735\"; var s = document.getElementsByTagName(\"script\")[0]; s.parentNode.insertBefore(hm, s); })(); </script>","Google":"<!-- Global Site Tag (gtag.js) - Google Analytics --> <script async src=\"https://www.googletagmanager.com/gtag/js?id=UA-106635475-1\"></script> <script> window.dataLayer = window.dataLayer || []; function gtag(){dataLayer.push(arguments)}; gtag('js', new Date());\ngtag('config', 'UA-106635475-1'); </script>"},"gallery":{"自拍-1":{"full_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy1.jpg","thumb_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy1.jpg","descr":"自拍哈哈哈哈！"},"自拍-2":{"full_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy2.jpg","thumb_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy2.jpg","descr":"自拍哈哈哈哈！"},"自拍-3":{"full_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy3.jpg","thumb_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy3.jpg","descr":"自拍哈哈哈哈！"},"自拍-4":{"full_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy4.jpg","thumb_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy4.jpg","descr":"自拍哈哈哈哈！"},"自拍-5":{"full_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy5.jpg","thumb_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy5.jpg","descr":"自拍哈哈哈哈！"},"自拍-6":{"full_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy6.jpg","thumb_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy6.jpg","descr":"自拍哈哈哈哈！"},"自拍-7":{"full_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy7.jpg","thumb_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy7.jpg","descr":"自拍哈哈哈哈！"},"《sleep no more》":{"full_link":"http://ow9cw9x3t.bkt.clouddn.com/sleep-no-more.jpg","thumb_link":"http://ow9cw9x3t.bkt.clouddn.com/sleep-no-more.jpg","descr":"自拍哈哈哈哈！"},"《sleep no more》-2":{"full_link":"http://ow9cw9x3t.bkt.clouddn.com/sleep-no-more-2.jpg","thumb_link":"http://ow9cw9x3t.bkt.clouddn.com/sleep-no-more-2.jpg","descr":"自拍哈哈哈哈！"}},"links":{"neoFelhz1":{"link":"https://nfz.moe/","avatar":"https://qiniu.viosey.com/img/blog/favatar/neofelhz1.png","descr":"拾穗者的故事"},"创造狮":{"link":"http://chuangzaoshi.com/","avatar":"https://qiniu.viosey.com/img/blog/favatar/chuangzaoshi.png","descr":" 为创意工作者而设计"}}}},"excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"external\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"external\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"external\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"external\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><pre><code class=\"bash\">$ hexo new &quot;My New Post&quot;\n</code></pre>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"external\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><pre><code class=\"bash\">$ hexo server\n</code></pre>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"external\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><pre><code class=\"bash\">$ hexo generate\n</code></pre>\n<pre><code class=\"css\">.hello{\n    padding: 40px;\n    margin: 20px;\n}\n</code></pre>\n<pre><code class=\"javascript\">function hello(){\n    var a = &#39;sss&#39;;\n    console.log();\n}\n</code></pre>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"external\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><pre><code class=\"bash\">$ hexo deploy\n</code></pre>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"external\">Deployment</a></p>\n<iframe width=\"100%\" height=\"300\" src=\"//jsfiddle.net/wangyutao/80cqtjc5/embedded/\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n"},{"layout":"react","title":"React-JSX","date":"2017-09-15T09:43:17.000Z","thumbnail":"http://ow9cw9x3t.bkt.clouddn.com/react.jpg","_content":"\n### JSX语法\n\n> JSX 既不是字符串也不是HTML，是JavaScript的语法扩展，将被解析成JavaScript的一个对象。JSX用于生成React的“元素”。JSX中可以嵌入js表达式，用```｛｝```包裹。\n\n```javascript\nfunction formatName(user) {\n    return user.firstName + ' ' + user.lastName; \n}\n\nconst user = {\n    firstName: 'Harper',\n    lastName: 'Perez'\n}\n\nconst element = (\n    <h1>Hello, {formatName(user)} !</h1>\n)\n\nReactDOM.render(\n    element,\n    document.getElementById('root')\n)\n```\n\n<iframe width=\"100%\" height=\"300\" src=\"//jsfiddle.net/wangyutao/z2pzn6xh/22/embedded/js,html,result/\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n\n### JSX指定属性\n* 使用引号将字符串文字指定为属性值\n```javascript\nconst element = <div tabIndex=\"0\"></div>\n```\n* 使用花括号```{}```将JavaScript表达式嵌入属性中，｛｝中的变量不需要用\"\"括起来，否则将解析为字符串\n```javascript\nconst element = <img src={user.avtarurl} />\n```\n\n### JXS包含子标签\n\n> JSX可以包含子标签\n\n> * JSX最外层只能包含一个标签，父标签内可以嵌套任意的子标签\n> * JSX 标签内的属性命名约定使用 ```camelCase```方式命名，而不是HTML属性名称\n\n```javascript\nconst element = (\n    <div className=\"demo\">\n        <h1>Hello!</h1>\n        <h2>Good to see you!</h2>\n    </div>\n)\n\nconst elemtent = (\n    <div tabIndex=\"0\"></div>\n)\n```\n\n### JSX转换\n\nBebel将JSX转换编译成```React.createElement()```对象。\n\n```javascript\nconst element = (\n    <h1 className=\"greeting\">\n        Hello, World!\n    </h1>\n)\n```\n\n```javascript\nconst element = React.createElement(\n    'h1',\n    {className: 'greeting'},\n    'Hello, World!'\n)\n```\n\n以上两种方式是等价的，最后都会转换成React Elements，这些对象组成页面的DOM并且保持更新。\n\n解析为react Elements\n\n```js   \nconst element = {\n    type: 'h1',\n    props: {\n        className: 'greeting',\n        children: 'Hello, World!'\n    }\n}\n```\n\n","source":"_posts/React-JSX.md","raw":"---\nlayout: react\ntitle: React-JSX\ndate: 2017-09-15 17:43:17\ntags: React\ncategories: React\nthumbnail: http://ow9cw9x3t.bkt.clouddn.com/react.jpg\n---\n\n### JSX语法\n\n> JSX 既不是字符串也不是HTML，是JavaScript的语法扩展，将被解析成JavaScript的一个对象。JSX用于生成React的“元素”。JSX中可以嵌入js表达式，用```｛｝```包裹。\n\n```javascript\nfunction formatName(user) {\n    return user.firstName + ' ' + user.lastName; \n}\n\nconst user = {\n    firstName: 'Harper',\n    lastName: 'Perez'\n}\n\nconst element = (\n    <h1>Hello, {formatName(user)} !</h1>\n)\n\nReactDOM.render(\n    element,\n    document.getElementById('root')\n)\n```\n\n<iframe width=\"100%\" height=\"300\" src=\"//jsfiddle.net/wangyutao/z2pzn6xh/22/embedded/js,html,result/\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n\n### JSX指定属性\n* 使用引号将字符串文字指定为属性值\n```javascript\nconst element = <div tabIndex=\"0\"></div>\n```\n* 使用花括号```{}```将JavaScript表达式嵌入属性中，｛｝中的变量不需要用\"\"括起来，否则将解析为字符串\n```javascript\nconst element = <img src={user.avtarurl} />\n```\n\n### JXS包含子标签\n\n> JSX可以包含子标签\n\n> * JSX最外层只能包含一个标签，父标签内可以嵌套任意的子标签\n> * JSX 标签内的属性命名约定使用 ```camelCase```方式命名，而不是HTML属性名称\n\n```javascript\nconst element = (\n    <div className=\"demo\">\n        <h1>Hello!</h1>\n        <h2>Good to see you!</h2>\n    </div>\n)\n\nconst elemtent = (\n    <div tabIndex=\"0\"></div>\n)\n```\n\n### JSX转换\n\nBebel将JSX转换编译成```React.createElement()```对象。\n\n```javascript\nconst element = (\n    <h1 className=\"greeting\">\n        Hello, World!\n    </h1>\n)\n```\n\n```javascript\nconst element = React.createElement(\n    'h1',\n    {className: 'greeting'},\n    'Hello, World!'\n)\n```\n\n以上两种方式是等价的，最后都会转换成React Elements，这些对象组成页面的DOM并且保持更新。\n\n解析为react Elements\n\n```js   \nconst element = {\n    type: 'h1',\n    props: {\n        className: 'greeting',\n        children: 'Hello, World!'\n    }\n}\n```\n\n","slug":"React-JSX","published":1,"updated":"2017-09-22T06:49:17.261Z","_id":"cj7squ95y000a94tukkx5xfxg","comments":1,"photos":[],"link":"","content":"<h3 id=\"JSX语法\"><a href=\"#JSX语法\" class=\"headerlink\" title=\"JSX语法\"></a>JSX语法</h3><blockquote>\n<p>JSX 既不是字符串也不是HTML，是JavaScript的语法扩展，将被解析成JavaScript的一个对象。JSX用于生成React的“元素”。JSX中可以嵌入js表达式，用<code>｛｝</code>包裹。</p>\n</blockquote>\n<pre class=\" language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">formatName</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> user<span class=\"token punctuation\">.</span>firstName <span class=\"token operator\">+</span> <span class=\"token string\">' '</span> <span class=\"token operator\">+</span> user<span class=\"token punctuation\">.</span>lastName<span class=\"token punctuation\">;</span> \n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> user <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    firstName<span class=\"token punctuation\">:</span> <span class=\"token string\">'Harper'</span><span class=\"token punctuation\">,</span>\n    lastName<span class=\"token punctuation\">:</span> <span class=\"token string\">'Perez'</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> element <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>h1<span class=\"token operator\">></span>Hello<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token function\">formatName</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span> <span class=\"token operator\">!</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h1<span class=\"token operator\">></span>\n<span class=\"token punctuation\">)</span>\n\nReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span>\n    element<span class=\"token punctuation\">,</span>\n    document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span>\n</code></pre>\n<iframe width=\"100%\" height=\"300\" src=\"//jsfiddle.net/wangyutao/z2pzn6xh/22/embedded/js,html,result/\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n\n<h3 id=\"JSX指定属性\"><a href=\"#JSX指定属性\" class=\"headerlink\" title=\"JSX指定属性\"></a>JSX指定属性</h3><ul>\n<li>使用引号将字符串文字指定为属性值<pre class=\" language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> element <span class=\"token operator\">=</span> <span class=\"token operator\">&lt;</span>div tabIndex<span class=\"token operator\">=</span><span class=\"token string\">\"0\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n</code></pre>\n</li>\n<li>使用花括号<code>{}</code>将JavaScript表达式嵌入属性中，｛｝中的变量不需要用””括起来，否则将解析为字符串<pre class=\" language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> element <span class=\"token operator\">=</span> <span class=\"token operator\">&lt;</span>img src<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>user<span class=\"token punctuation\">.</span>avtarurl<span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n</code></pre>\n</li>\n</ul>\n<h3 id=\"JXS包含子标签\"><a href=\"#JXS包含子标签\" class=\"headerlink\" title=\"JXS包含子标签\"></a>JXS包含子标签</h3><blockquote>\n<p>JSX可以包含子标签</p>\n<ul>\n<li>JSX最外层只能包含一个标签，父标签内可以嵌套任意的子标签</li>\n<li>JSX 标签内的属性命名约定使用 <code>camelCase</code>方式命名，而不是HTML属性名称</li>\n</ul>\n</blockquote>\n<pre class=\" language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> element <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>div className<span class=\"token operator\">=</span><span class=\"token string\">\"demo\"</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>h1<span class=\"token operator\">></span>Hello<span class=\"token operator\">!</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h1<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>h2<span class=\"token operator\">></span>Good to see you<span class=\"token operator\">!</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h2<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">const</span> elemtent <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>div tabIndex<span class=\"token operator\">=</span><span class=\"token string\">\"0\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n<span class=\"token punctuation\">)</span>\n</code></pre>\n<h3 id=\"JSX转换\"><a href=\"#JSX转换\" class=\"headerlink\" title=\"JSX转换\"></a>JSX转换</h3><p>Bebel将JSX转换编译成<code>React.createElement()</code>对象。</p>\n<pre class=\" language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> element <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>h1 className<span class=\"token operator\">=</span><span class=\"token string\">\"greeting\"</span><span class=\"token operator\">></span>\n        Hello<span class=\"token punctuation\">,</span> World<span class=\"token operator\">!</span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h1<span class=\"token operator\">></span>\n<span class=\"token punctuation\">)</span>\n</code></pre>\n<pre class=\" language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> element <span class=\"token operator\">=</span> React<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span>\n    <span class=\"token string\">'h1'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>className<span class=\"token punctuation\">:</span> <span class=\"token string\">'greeting'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'Hello, World!'</span>\n<span class=\"token punctuation\">)</span>\n</code></pre>\n<p>以上两种方式是等价的，最后都会转换成React Elements，这些对象组成页面的DOM并且保持更新。</p>\n<p>解析为react Elements</p>\n<pre class=\" language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> element <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    type<span class=\"token punctuation\">:</span> <span class=\"token string\">'h1'</span><span class=\"token punctuation\">,</span>\n    props<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n        className<span class=\"token punctuation\">:</span> <span class=\"token string\">'greeting'</span><span class=\"token punctuation\">,</span>\n        children<span class=\"token punctuation\">:</span> <span class=\"token string\">'Hello, World!'</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n","site":{"data":{"ours":{"our1":{"date":"2017-07-23T00:00:00.000Z","title":"women","desc":"hello"}},"head":{"Baidu":"<script> var _hmt = _hmt || []; (function() { var hm = document.createElement(\"script\"); hm.src = \"https://hm.baidu.com/hm.js?2faaec6fd26d66bbf5e331e48cc87735\"; var s = document.getElementsByTagName(\"script\")[0]; s.parentNode.insertBefore(hm, s); })(); </script>","Google":"<!-- Global Site Tag (gtag.js) - Google Analytics --> <script async src=\"https://www.googletagmanager.com/gtag/js?id=UA-106635475-1\"></script> <script> window.dataLayer = window.dataLayer || []; function gtag(){dataLayer.push(arguments)}; gtag('js', new Date());\ngtag('config', 'UA-106635475-1'); </script>"},"gallery":{"自拍-1":{"full_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy1.jpg","thumb_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy1.jpg","descr":"自拍哈哈哈哈！"},"自拍-2":{"full_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy2.jpg","thumb_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy2.jpg","descr":"自拍哈哈哈哈！"},"自拍-3":{"full_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy3.jpg","thumb_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy3.jpg","descr":"自拍哈哈哈哈！"},"自拍-4":{"full_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy4.jpg","thumb_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy4.jpg","descr":"自拍哈哈哈哈！"},"自拍-5":{"full_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy5.jpg","thumb_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy5.jpg","descr":"自拍哈哈哈哈！"},"自拍-6":{"full_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy6.jpg","thumb_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy6.jpg","descr":"自拍哈哈哈哈！"},"自拍-7":{"full_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy7.jpg","thumb_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy7.jpg","descr":"自拍哈哈哈哈！"},"《sleep no more》":{"full_link":"http://ow9cw9x3t.bkt.clouddn.com/sleep-no-more.jpg","thumb_link":"http://ow9cw9x3t.bkt.clouddn.com/sleep-no-more.jpg","descr":"自拍哈哈哈哈！"},"《sleep no more》-2":{"full_link":"http://ow9cw9x3t.bkt.clouddn.com/sleep-no-more-2.jpg","thumb_link":"http://ow9cw9x3t.bkt.clouddn.com/sleep-no-more-2.jpg","descr":"自拍哈哈哈哈！"}},"links":{"neoFelhz1":{"link":"https://nfz.moe/","avatar":"https://qiniu.viosey.com/img/blog/favatar/neofelhz1.png","descr":"拾穗者的故事"},"创造狮":{"link":"http://chuangzaoshi.com/","avatar":"https://qiniu.viosey.com/img/blog/favatar/chuangzaoshi.png","descr":" 为创意工作者而设计"}}}},"excerpt":"","more":"<h3 id=\"JSX语法\"><a href=\"#JSX语法\" class=\"headerlink\" title=\"JSX语法\"></a>JSX语法</h3><blockquote>\n<p>JSX 既不是字符串也不是HTML，是JavaScript的语法扩展，将被解析成JavaScript的一个对象。JSX用于生成React的“元素”。JSX中可以嵌入js表达式，用<code>｛｝</code>包裹。</p>\n</blockquote>\n<pre><code class=\"javascript\">function formatName(user) {\n    return user.firstName + &#39; &#39; + user.lastName; \n}\n\nconst user = {\n    firstName: &#39;Harper&#39;,\n    lastName: &#39;Perez&#39;\n}\n\nconst element = (\n    &lt;h1&gt;Hello, {formatName(user)} !&lt;/h1&gt;\n)\n\nReactDOM.render(\n    element,\n    document.getElementById(&#39;root&#39;)\n)\n</code></pre>\n<iframe width=\"100%\" height=\"300\" src=\"//jsfiddle.net/wangyutao/z2pzn6xh/22/embedded/js,html,result/\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n\n<h3 id=\"JSX指定属性\"><a href=\"#JSX指定属性\" class=\"headerlink\" title=\"JSX指定属性\"></a>JSX指定属性</h3><ul>\n<li>使用引号将字符串文字指定为属性值<pre><code class=\"javascript\">const element = &lt;div tabIndex=&quot;0&quot;&gt;&lt;/div&gt;\n</code></pre>\n</li>\n<li>使用花括号<code>{}</code>将JavaScript表达式嵌入属性中，｛｝中的变量不需要用””括起来，否则将解析为字符串<pre><code class=\"javascript\">const element = &lt;img src={user.avtarurl} /&gt;\n</code></pre>\n</li>\n</ul>\n<h3 id=\"JXS包含子标签\"><a href=\"#JXS包含子标签\" class=\"headerlink\" title=\"JXS包含子标签\"></a>JXS包含子标签</h3><blockquote>\n<p>JSX可以包含子标签</p>\n<ul>\n<li>JSX最外层只能包含一个标签，父标签内可以嵌套任意的子标签</li>\n<li>JSX 标签内的属性命名约定使用 <code>camelCase</code>方式命名，而不是HTML属性名称</li>\n</ul>\n</blockquote>\n<pre><code class=\"javascript\">const element = (\n    &lt;div className=&quot;demo&quot;&gt;\n        &lt;h1&gt;Hello!&lt;/h1&gt;\n        &lt;h2&gt;Good to see you!&lt;/h2&gt;\n    &lt;/div&gt;\n)\n\nconst elemtent = (\n    &lt;div tabIndex=&quot;0&quot;&gt;&lt;/div&gt;\n)\n</code></pre>\n<h3 id=\"JSX转换\"><a href=\"#JSX转换\" class=\"headerlink\" title=\"JSX转换\"></a>JSX转换</h3><p>Bebel将JSX转换编译成<code>React.createElement()</code>对象。</p>\n<pre><code class=\"javascript\">const element = (\n    &lt;h1 className=&quot;greeting&quot;&gt;\n        Hello, World!\n    &lt;/h1&gt;\n)\n</code></pre>\n<pre><code class=\"javascript\">const element = React.createElement(\n    &#39;h1&#39;,\n    {className: &#39;greeting&#39;},\n    &#39;Hello, World!&#39;\n)\n</code></pre>\n<p>以上两种方式是等价的，最后都会转换成React Elements，这些对象组成页面的DOM并且保持更新。</p>\n<p>解析为react Elements</p>\n<pre><code class=\"js\">const element = {\n    type: &#39;h1&#39;,\n    props: {\n        className: &#39;greeting&#39;,\n        children: &#39;Hello, World!&#39;\n    }\n}\n</code></pre>\n"},{"title":"前端面试集（HTML+CSS）","date":"2017-09-15T08:46:10.000Z","comments":1,"thumbnail":"http://ow9cw9x3t.bkt.clouddn.com/resume.gif","_content":"\n###### 1. 浏览器页面有哪三层构成，分别是什么，作用是什么?\n\n> 构成：结构层、表示层、行为层\n分别是：HTML、CSS、JavaScript\n作用：HTML实现页面结构，CSS完成页面的表现与风格，JavaScript实现一些客户端的功能与业务。\n\n##### 2.HTML5的优点与缺点？\n>优点：\na、网络标准统一、HTML5本身是由W3C推荐出来的。\nb、多设备、跨平台\nc、即时更新。\nd、提高可用性和改进用户的友好体验；\ne、有几个新的标签，这将有助于开发人员定义重要的内容；\nf、可以给站点带来更多的多媒体元素(视频和音频)；\ng、可以很好的替代Flash和Silverlight；\nh、涉及到网站的抓取和索引的时候，对于SEO很友好；\ni、被大量应用于移动应用程序和游戏。\n\n>缺点：\na、安全：像之前Firefox4的web socket和透明代理的实现存在严重的安全问题，同时web storage、web socket 这样的功能很容易被黑客利用，来盗取用户的信息和资料。\nb、完善性：许多特性各浏览器的支持程度也不一样。\nc、技术门槛：HTML5简化开发者工作的同时代表了有许多新的属性和API需要开发者学习，像web worker、web socket、web storage 等新特性，后台甚至浏览器原理的知识，机遇的同时也是巨大的挑战\nd、性能：某些平台上的引擎问题导致HTML5性能低下。\ne、浏览器兼容性：最大缺点，IE9以下浏览器几乎全军覆没。\n\n###### 3.Doctype作用? 严格模式与混杂模式如何区分？它们有何意义?\n>回答1：\n（1）、 声明位于文档中的最前面，处于标签之前。告知浏览器的解析器，用什么文档类型 规范来解析这个文档。\n（2）、严格模式的排版和JS 运作模式是以该浏览器支持的最高标准运行。\n（3）、在混杂模式中，页面以宽松的向后兼容的方式显示。模拟老式浏览器的行为以防止站点无法工作。\n（4）、DOCTYPE不存在或格式不正确会导致文档以混杂模式呈现。\n***\n>回答2： \ndoctype声明指出阅读程序应该用什么规则集来解释文档中的标记。在Web文档的情况下，“阅读程序”通常是浏览器或者校验器这样的一个程序，“规则”则是W3C所发布的一个文档类型定义（DTD）中包含的规则。\n(1) 声明位于文档中的最前面的位置，处于标签之前。此标签可告知浏览器文档使用哪种 HTML 或 XHTML 规范。该标签可声明三种 DTD 类型，分别表示严格版本、过渡版本以及基于框架的HTML 文档。\n(2)所谓的标准模式是指，浏览器按 W3C 标准解析执行代码；怪异模式则是使用浏览器自己的方式解析执行代码，因为不同浏览器解析执行的方式不一样，所以我们称之为怪异模式。 严格模式是浏览器根据web标准去解析页面，是一种要求严格的DTD，不允许使用任何表现层的语法，如\n。严格模式的排版和JS 运作模式是以该浏览器支持的最高标准运行混杂模式则是一种向后兼容的解析方法，说的透明点就是可以实现IE5.5以下版本浏览器的渲染模式。\n(3)浏览器解析时到底使用标准模式还是怪异模式，与你网页中的 DTD 声明直接相关， DTD 声明定义了标准文档的类型（标准模式解析）文档类型，会使浏览器使用相应的方式加载网页并显示，忽略 DTD 声明 ,将使网页进入怪异模式。\n\n###### 4.HTML5有哪些新特性、移除了哪些元素？\n> Html5 **新增了 `27 `个元素，废弃了`16`个元素**，根据现有的标准规范，把 HTML5 的元素按优先级定义为结构性属性、级块性元素、行内语义性元素和交互性元素 4 大类。\n1. **结构性元素主要负责web上下文结构的定义**\n`section`：在 web 页面应用中，该元素也可以用于区域的章节描述。\n`header`：页面主体上的头部， header 元素往往在一对 body 元素中。\n`footer`：页面的底部（页脚），通常会标出网站的相关信息。\n`nav`：专门用于菜单导航、链接导航的元素，是 navigator 的缩写。\n`article`：用于表现一篇文章的主体内容，一般为文字集中显示的区域。\n2. **级块性元素主要完成web页面区域的划分，确保内容的有效分割**\n`aside`：用于表达注记、贴士、侧栏、摘要、插入的引用等作为补充主体的内容。\n`figure`：是对多个元素进行组合并展示的元素，通常与 ficaption 联合使用。\n`code`：表示一段代码块。\n`dialog`：用于表达人与人之间的对话，该元素包含 dt 和 dd 这两个组合元素， dt 用于表示说话者，而 dd 用来表示说话内容。\n行内语义性元素主要完成web页面具体内容的引用和描述，是丰富内容展示的基础。\n`meter`：表示特定范围内的数值，可用于工资、数量、百分比等。\n`time`：表示时间值。\n`progress`：用来表示进度条，可通过对其 max 、 min 、 step 等属性进行控制，完成对进度的表示和监事。\n`video`：视频元素，用于支持和实现视频文件的直接播放，支持缓冲预载和多种视频媒体格式。\n`audio`：音频元素，用于支持和实现音频文件的直接播放，支持缓冲预载和多种音频媒体格式。\n交互性元素主要用于功能性的内容表达，会有一定的内容和数据的关联，是各种事件的基础。\n`details`：用来表示一段具体的内容，但是内容默认可能不显示，通过某种手段（如单击）与 legend 交互才会显示出来。\n`datagrid`：用来控制客户端数据与显示，可以由动态脚本及时更新。\n`menu`：主要用于交互菜单（曾被废弃又被重新启用的元素）。\n`command`：用来处理命令按钮。\n\n###### 5.你做的网页在哪些流览器测试过,这些浏览器的内核分别是什么?\n> \na、 IE: trident 内核\nb、 Firefox: gecko 内核\nc、 Safari: webkit 内核\nd、 Opera: 以前是 presto 内核， Opera 现已改用 Google Chrome 的 Blink 内核\ne、 Chrome:Blink( 基于 webkit ， Google 与 Opera Software 共同开发 )\n\n###### 6. 每个HTML文件里开头都有个很重要的东西，Doctype，知道这是干什么的吗？\n> 声明位于文档中的最前面的位置，处于标签之前。此标签可告知浏览器文档使用哪种 HTML 或 XHTML 规范。（**重点：告诉浏览器按照何种规范解析页面**）\n\n###### 7.说说你对HTML5认识?（是什么,为什么）\n>** 是什么：**\nHTML5指的是包括 HTML 、 CSS 和 JavaScript 在内的一套技术组合。它希望能够减少网页浏览器对于需要插件的丰富性网络应用服务（ Plug-in-Based Rich Internet Application ， RIA ），例如： AdobeFlash 、 Microsoft Silverlight 与 Oracle JavaFX 的需求，并且提供更多能有效加强网络应用的标准集。 HTML5 是 HTML 最新版本， 2014 年 10 月由万维网联盟（ W3C ）完成标准制定。目标是替换 1999 年所制定的 HTML 4.01 和 XHTML 1.0 标准，以期能在互联网应用迅速发展的时候，使网络标准达到匹配当代的网络需求。\n***\n**为什么:**\nHTML4陈旧不能满足日益发展的互联网需要，特别是移动互联网。为了增强浏览器功能 Flash 被广泛使用，但安全与稳定堪忧，不适合在移动端使用（耗电、触摸、不开放）。\nHTML5增强了浏览器的原生功能，符合 HTML5 规范的浏览器功能将更加强大，减少了 Web 应用对插件的依赖，让用户体验更好，让开发更加方便，另外 W3C 从推出 HTML4.0 到 5.0 之间共经历了 17 年， HTML 的变化很小，这并不符合一个好产品的演进规则。\n\n###### 8.对WEB标准以及W3C的理解与认识?\n>1. 标签闭合、标签小写、不乱嵌套、提高搜索机器人搜索几率、使用外链css和 js 脚本、结构行为表现的分离，\n2. 文件下载与页面速度更快、内容能被更多的用户所访问、内容能被更广泛的设备所访问、更少的代码和组件，\n3. 容易维护、改版方便，不需要变动页面内容、提供打印版本而不需要复制内容、提高网站易用性。\n\n###### 9.HTML5行内元素有哪些,块级元素有哪些, 空元素有哪些?\n\n>**行内元素**\n* a - 锚点\n* abbr - 缩写\n* acronym - 首字\n* b - 粗体 ( 不推荐 )\n* bdo - bidi override\n* big - 大字体\n* br - 换行\n* cite - 引用\n* code - 计算机代码 ( 在引用源码的时候需要 )\n* dfn - 定义字段\n* em - 强调\n* font - 字体设定 ( 不推荐 )\n* i - 斜体\n* img - 图片\n* input - 输入框\n* kbd - 定义键盘文本\n* label - 表格标签\n* q - 短引用\n* s - 中划线 ( 不推荐 )\n* samp - 定义范例计算机代码\n* select - 项目选择\n* small - 小字体文本\n* span - 常用内联容器，定义文本内区块\n* strike - 中划线\n* strong - 粗体强调\n* sub - 下标\n* sup - 上标\n* textarea - 多行文本输入框\n* tt - 电传文本\n* u - 下划线\n* var - 定义变量\n***\n**块元素 (block element)**\n* address - 地址\n* blockquote - 块引用\n* center - 举中对齐块\n* dir - 目录列表\n* div - 常用块级容易，也是 css layout 的主要标签\n* dl - 定义列表\n* fieldset - form控制组\n* form - 交互表单\n* h3 - 大标题\n* h4 - 副标题\n* h3 - 3级标题\n* h4 - 4级标题\n* h5 - 5级标题\n* h6 - 6级标题\n* hr - 水平分隔线\n* isindex - input prompt\n* menu - 菜单列表\n* noframes - frames可选内容，（对于不支持 frame 的浏览器显示此区块内容\n* noscript - ）可选脚本内容（对于不支持 script 的浏览器显示此内容）\n* ol - 排序表单\n* p - 段落\n* pre - 格式化文本\n* table - 表格\n* ul - 非排序列表\n可变元素\n可变元素为根据上下文语境决定该元素为块元素或者内联元素。\n* applet - java applet\n* button - 按钮\n* del - 删除文本\n* iframe - inline frame\n* ins - 插入的文本\n* map - 图片区块 (map)\n* object - object对象\n* script - 客户端脚本\n***\n**空元素 ( 在 HTML[1] 元素中，没有内容的 HTML 元素被称为空元素 )**\n* `br`\n* `hr`\n* `input`\n* `img`\n* `link` \n* `meta`\n\n###### 10.什么是WebGL,它有什么优点?\n> WebGL（全写 Web Graphics Library ）是一种 3D 绘图标准，这种绘图技术标准允许把 JavaScript 和 OpenGL ES 2.0 结合在一起，通过增加OpenGL ES 2.0 的一个 JavaScript 绑定， WebGL 可以为 HTML5 Canvas 提供硬件 3D 加速渲染，这样 Web 开发人员就可以借助系统显卡来在浏览器里更流畅地展示 3D 场景和模型了，还能创建复杂的导航和数据视觉化。显然， WebGL 技术标准免去了开发网页专用渲染插件的麻烦，可被用于创建具有复杂 3D 结构的网站页面，甚至可以用来设计 3D 网页游戏等等。\n***\nWebGL完美地解决了现有的 Web 交互式三维动画的两个问题：\n第一，它通过HTML脚本本身实现 Web 交互式三维动画的制作，无需任何浏览器插件支持 ;\n第二，它利用底层的图形硬件加速功能进行的图形渲染，是通过统一的、标准的、跨平台的OpenGL接口实现的。\n通俗说WebGL中 canvas 绘图中的 3D 版本。因为原生的 WebGL 很复杂，我们经常会使用一些三方的库，如 three.js 等，这些库多数用于HTML5 游戏开发。\n\n###### 11.请你描述一下 cookies，sessionStorage 和 localStorage 的区别?\n> sessionStorage 和 localStorage 是 HTML5 Web Storage API 提供的，可以方便的在 web 请求之间保存数据。有了本地数据，就可以避免数据在浏览器和服务器间不必要地来回传递。\nsessionStorage、 localStorage 、 cookie 都是在浏览器端存储的数据，其中 sessionStorage 的概念很特别，引入了一个“浏览器窗口”的概念。\n1. **sessionStorage** 是在**同源的同窗口（或 tab ）**中，始终存在的数据。也就是说只要这个浏览器窗口没有关闭，即使刷新页面或进入同源另一页面，数据仍然存在。**关闭窗口后， sessionStorage 即被销毁**。同时“独立”打开的不同窗口，即使是同一页面， sessionStorage 对象也是不同的\n**cookies会发送到服务器端。其余两个不会。**\nMicrosoft 指出 Internet Explorer 8 增加 cookie 限制为每个域名 50 个，但 IE7 似乎也允许每个域名 50 个 cookie 。 Firefox 每个域名 cookie 限制为 50 个。 Opera 每个域名 cookie 限制为 30 个。 Firefox 和 Safari 允许 cookie 多达 4097 个字节，包括名（ name ）、值（ value ）和等号。 Opera 许 cookie 多达 4096 个字节，包括：名（ name ）、值（ value ）和等号。 Internet Explorer 允许 cookie 多达 4095 个字节，包括：名（ name ）、值（ value ）和等号。\n***\n区别：\n**Cookie**\n每个域名存储量比较小（各浏览器不同，大致 4K ）\n所有域名的存储量有限制（各浏览器不同，大致 4K ）\n有个数限制（各浏览器不同）\n会随请求发送到服务器\n**LocalStorage**\n永久存储\n单个域名存储量比较大（推荐 5MB ，各浏览器不同）\n总体数量无限制\n**SessionStorage**\n只在 Session 内有效\n存储量更大（推荐没有限制，但是实际上各浏览器也不同）\n\n###### 12.说说你对HTML语义化的理解?\n> (1) 什么是 HTML 语义化？\n  根据内容的结构化（内容语义化），选择合适的标签（代码语义化）便于开发者阅读和写出更优雅的代码的同时让浏览器的爬虫和机器很好地解析。\n      **基本上都是围绕着几个主要的标签，像标题（ H1~H6 ）、列表（ li ）、强调（ strong em ）等等**\n***\n(2) 为什么要语义化？\n1. 为了在没有CSS的情况下，页面也能呈现出很好地内容结构、代码结构 : 为了裸奔时好看；\n2. 用户体验：例如title、 alt 用于解释名词或解释图片信息、 label 标签的活用；\n3. 有利于SEO：和搜索引擎建立良好沟通，有助于爬虫抓取更多的有效信息：爬虫依赖于标签来确定上下文和各个关键字的权重；\n4. 方便其他设备解析（如屏幕阅读器、盲人阅读器、移动设备）以意义的方式来渲染网页；\n5. 便于团队开发和维护，语义化更具可读性，是下一步吧网页的重要动向，遵循W3C标准的团队都遵循这个标准，可以减少差异化。\n***\n(3) 语义化标签\n<header></header>\n<footer></footer>\n<nav></nav>\n<section></section>\n<article></article> SM:用来在页面中表示一套结构完整且独立的内容部分\n<aslde></aside> SM:主题的附属信息 ( 用途很广，主要就是一个附属内容 ) ，如果 article 里面为一篇文章的话，那么文章的作者以及信息内容就是这篇文章的附属内容了\n<figure></figure>SM:媒体元素，比如一些视频，图片啊等等\n<datalist></datalist>SM:选项列表，与 input 元素配合使用，来定义 input 可能的值\n<details></details>SM:用于描述文档或者文档某个部分的细节 ~ 默认属性为 open~\nps:配合 summary 一起使用\n\n###### 13.link和@import的区别?\n>```\n<link rel='stylesheet' rev='stylesheet' href='CSS文件 ' type='text/css' media='all' />\n```\n```\n<style type='text/css' media='screen'>\n    @import url('CSS文件 ');\n</style>\n```\n***\n两者都是外部引用CSS的方式，但是存在一定的区别：\n*  `link` 是 XHTML 标签，除了加载 `CSS` 外，还可以定义` RSS` 等其他事务； `@import `属于 CSS 范畴，只能加载 CSS 。\n* `link` 引用 CSS 时，在页面载入时同时加载；` @import `需要页面网页完全载入以后加载。\n* `link` 是 XHTML 标签，无兼容问题； `@import` 是在 CSS2.1 提出的，低版本的浏览器不支持。\n* `link` 支持使用 Javascript 控制 DOM 去改变样式；而 `@import` 不支持。\n\n###### 14.说说你对SVG理解?\n> `SVG可缩放矢量图形（ Scalable Vector Graphics ）`是基于可扩展标记语言（ XML ），用于描述二维矢量图形的一种图形格式。 SVG 是W3C('World Wide Web ConSortium' 即 ' 国际互联网标准组织 ') 在 2000 年 8 月制定的一种新的`二维矢量图形格式`，也是规范中的网络矢量图形标准。 SVG 严格遵从 XML 语法，并用文本格式的描述性语言来描述图像内容，因此是一种和图像分辨率无关的矢量图形格式。 SVG 于 2003 年 1 月14 日成为 W3C 推荐标准。\n***\n特点：\n1. **任意放缩**。用户可以任意缩放图像显示，而不会破坏图像的清晰度、细节等。\n2. **文本独立**。SVG图像中的文字独立于图像，文字保留可编辑和可搜寻的状态。也不会再有字体的限制，用户系统即使没有安装某一字体，也会看到和他们制作时完全相同的画面。\n3. **较小文件**。总体来讲，SVG文件比那些 GIF 和 JPEG 格式的文件要小很多，因而下载也很快。\n4. **超强显示效果**。SVG图像在屏幕上总是边缘清晰，它的清晰度适合任何屏幕分辨率和打印分辨率。\n5. **超级颜色控制**。SVG图像提供一个 1600 万种颜色的调色板，支持 ICC 颜色描述文件标准、 RGB 、线 X 填充、渐变和蒙版。\n6. **交互 X 和智能化**。 SVG 面临的主要问题一个是如何和已经占有重要市场份额的矢量图形格式 Flash 竞争的问题，另一个问题就是 SVG 的本地运行环境下的厂家支持程度。\n7. **浏览器支持**\n>> Internet Explorer9，火狐，谷歌 Chrome ， Opera 和 Safari 都支持 SVG 。\nIE8和早期版本都需要一个插件 - 如 Adobe SVG 浏览器，这是免费提供的。\n\n###### 15.HTML全局属性(global attribute)有哪些?\n> MDN: html global attribute或者W3C HTML global-attributes accesskey:设置快捷键，提供快速访问元素如aaa在windows下的firefox中按alt + shift + a可激活元素 class:为元素设置类标识，多个类名用空格分开，CSS和javascript可通过class属性获取元素 contenteditable: 指定元素内容是否可编辑 contextmenu: 自定义鼠标右键弹出菜单内容 data-*: 为元素增加自定义属性 dir: 设置元素文本方向 draggable: 设置元素是否可拖拽 dropzone: 设置元素拖放类型： copy, move, link hidden: 表示一个元素是否与文档。样式上会导致元素不显示，但是不能用这个属性实现样式效果 id: 元素id，文档内唯一 lang: 元素内容的的语言 spellcheck: 是否启动拼写和语法检查 style: 行内css样式 tabindex: 设置元素可以获得焦点，通过tab可以导航 title: 元素相关的建议信息 translate: 元素和子孙节点内容是否需要本地化\n\n###### 16.说说超链接target属性的取值和作用？\n> `target`这个属性指定所链接的页面在浏览器窗口中的打开方式。\n它的参数值主要有：\na、` _blank` ：在新浏览器窗口中打开链接文件\nb、` _parent` ：将链接的文件载入含有该链接框架的父框架集或父窗口中。如果含有该链接的框架不是嵌套的，则在浏览器全屏窗口中载入链接的文件，就象 _self 参数。\nc、 `_self` ：在同一框架或窗口中打开所链接的文档。此参数为默认值，通常不用指定。\nd、` _top` ：在当前的整个浏览器窗口中打开所链接的文档，因而会删除所有框架。\n\n###### 17.data-属性的作用是什么？\n> `data-xxx`为前端开发者提供**自定义的属性**，这些属性集可以通过对象的 `dataset `属性获取，不支持该属性的浏览器可以通过 `getAttribute `方法获取。\n\n>需要注意的是：`data-xxx`之后的以连字符分割的多个单词组成的属性，获取的时候使用**驼峰风格**。并不是所有的浏览器都支持` .dataset 属性`，测试的浏览器中只有 Chrome 和 Opera 支持。\n即：当没有合适的属性和元素时，自定义的 data 属性是能够存储页面或 App 的私有的自定义数据。\n\n###### 18.介绍一下你对浏览器内核的理解？\n>浏览器内核主要分成两部分：**`渲染引擎(layout engineer或 Rendering Engine)`** 和** `JS 引擎`**。\n**渲染引擎**：负责取得网页的内容（HTML、 XML 、图像等等）、整理讯息（例如加载 CSS 等），以及计算网页的显示方式，然后会输出至显示器或打印机。浏览器的内核的不同对于网页的语法解释会有不同，所以渲染的效果也不相同。所有网页浏览器、电子邮件客户端以及其它需要编辑、显示网络内容的应用程序都需要内核。\n**JS引擎**：解析和执行 javascript 来实现网页的动态效果。\n***\n最开始渲染引擎和JS引擎并没有区分的很明确，后来 JS 引擎越来越独立，内核就倾向于只指渲染引擎。\n\n###### 19.常见的浏览器内核有哪些？\n>1. `Trident内核`： `IE`,`MaxThon`,`TT`,`The World`,`360`, `搜狗`等。[ 又称 MSHTML]\n2. `Gecko内核`： `Netscape6` 及以上版本，`FF`,`MozillaSuite/SeaMonkey `等\n3. `Presto内核`： `Opera7 `及以上。[`Opera` 内核原为： `Presto` ，现为：` Blink`;]\n4. `Webkit内核`： `Safari`,`Chrome` 等。[ `Chrome` 的： `Blink （ WebKit 的分支）` ]\n\n###### 20.iframe有那些缺点？\n> 1. iframe会阻塞主页面的 Onload 事件； \n2. 搜索引擎的检索程序无法解读这种页面，不利于 SEO;\n3. iframe和主页面共享连接池，而浏览器对相同域的连接有限制，所以会影响页面的并行加载。\n***\n>使用iframe之前需要考虑这两个缺点。如果需要使用 iframe，最好是**通过 javascript动态给iframe添加 src 属性值**，这样可以绕开以上两个问题。\n\n###### 21.Label的作用是什么，是怎么用的？\n>`label`标签来*定义表单控制间的关系* , 当用户选择该标签时，浏览器会自动将焦点转到和标签相关的表单控件上。\n```\n<label for='Name'>Number:</label>\n<input type=“ text “ name='Name' id='Name'/>\n<label>Date:<input type='text' name='B'/></label>\n```\n\n###### 22.如何实现浏览器内多个标签页之间的通信?\n>`WebSocket`、 `SharedWorker `；\n也可以调用`localstorge`、 `cookies` 等本地存储方式；\n`localstorge` 另一个浏览上下文里被添加、修改或删除时，它都会触发一个事件，我们通过监听事件，控制它的值来进行页面信息通信；\n***\n注意quirks： Safari 在无痕模式下设置 localstorge 值时会抛出 QuotaExceededError 的异常；\n\n###### 23.如何在页面上实现一个圆形的可点击区域？\n>a、 map+area(锚点图) 或者 svg\nb、   `border-radius`\nc、纯 js 实现 需要求一个点在不在圆上简单算法、获取鼠标坐标等等\n\n##### 24.title与h3的区别、b与strong的区别、i与em的区别？\n>* `title`属性没有明确意义只表示是个标题， `H1` 则表示层次明确的标题，对页面信息的抓取也有很大的影响；\n* `strong`是标明重点内容，有语气加强的含义，使用阅读设备阅读网络时： 会重读，而 `<B> `是展示强调内容。\n* `i`内容展示为斜体， `em` 表示强调的文本；\n***\n* Physical Style Elements -- 自然样式标签\nb, i, u, s, pre\n* Semantic Style Elements -- 语义样式标签\nstrong, em, ins, del, code\n*应该准确使用语义样式标签, 但不能滥用 , 如果不能确定时首选使用自然样式标签。*\n\n###### 25.实现不使用 border 画出1px高的线，在不同浏览器的标准模式与怪异模式下都能保持一致的效果？\n>```<div style='height:1px;overflow:hidden;background:red'></div>```\n\n###### 26.HTML5标签的作用?(用途)\n>a、使Web页面的内容更加有序和规范\nb、使搜索引擎更加容易按照HTML5规则识别出有效的内容\nc、使Web页面更接近于一种数据字段和表\n\n###### 27.简述一下src与href的区别？\n>src用于替换当前元素， href 用于在当前文档和引用资源之间确立联系。\nsrc是 source 的缩写，指向外部资源的位置，指向的内容将会嵌入到文档中当前标签所在位置；在请求 src 资源时会将其指向的资源下载并应用到文档内，例如 js 脚本， img 图片和 frame 等元素。\n`<script src ='js.js'></script>`\n当浏览器解析到该元素时，会暂停其他资源的下载和处理，直到将该资源加载、编译、执行完毕，图片和框架等元素也如此，类似于将所指向资源嵌入当前标签内。这也是为什么将js脚本放在底部而不是头部。\nhref是 Hypertext Reference 的缩写，指向网络资源所在位置，建立和当前元素（锚点）或当前文档（链接）之间的链接，如果我们在文档中添加\n`<link href='common.css' rel='stylesheet'/>`，那么浏览器会识别该文档为css文件，就会并行下载资源并且不会停止对当前文档的处理。这也是为什么建议使用 link 方式来加载 css ，而不是使用@import 方式。\n\n###### 28.谈谈你对canvas的理解？\n>canvas是HTML5中新增一个HTML5标签与操作canvas的javascript API，它可以实现在网页中完成动态的2D与3D图像技术。标记和 SVG以及 VML 之间的一个重要的不同是，有一个基于 JavaScript 的绘图 API，而 SVG 和 VML 使用一个 XML 文档来描述绘图。SVG 绘图很容易编辑与生成，但功能明显要弱一些。 canvas可以完成动画、游戏、图表、图像处理等原来需要Flash完成的一些功能。\n\n###### 29.WebSocket与消息推送？\n> B/S架构的系统多使用HTTP协议，\nHTTP协议的特点： 1 无状态协议 2 用于通过 Internet 发送请求消息和响应消息 3 使用端口接收和发送消息，默认为80端口 底层通信还是使用Socket完成。\nHTTP协议决定了服务器与客户端之间的连接方式，无法直接实现消息推送（ F5 已坏） , 一些变相的解决办法：\n双向通信与消息推送\n轮询：客户端定时向服务器发送Ajax请求，服务器接到请求后马上返回响应信息并关闭连接。\n优点：后端程序编写比较容易。\n缺点：请求中有大半是无用，浪费带宽和服务器资源。\n实例：适于小型应用。\n长轮询：客户端向服务器发送Ajax请求，服务器接到请求后 hold 住连接，直到有新消息才返回响应信息并关闭连接，客户端处理完响应信息后再向服务器发送新的请求。\n优点：在无消息的情况下不会频繁的请求，耗费资小。\n缺点：服务器hold连接会消耗资源，返回数据顺序无保证，难于管理维护。 Comet 异步的 ashx ，\n实例：WebQQ、 Hi 网页版、 Facebook IM 。\n长连接：在页面里嵌入一个隐蔵iframe，将这个隐蔵 iframe 的 src 属性设为对一个长连接的请求或是采用 xhr 请求，服务器端就能源源不断地往客户端输入数据。\n优点：消息即时到达，不发无用请求；管理起来也相对便。\n缺点：服务器维护一个长连接会增加开销。\n实例：Gmail聊天\nFlash Socket：在页面中内嵌入一个使用了 Socket 类的 Flash 程序 JavaScript 通过调用此 Flash 程序提供的 Socket 接口与服务器端的 Socket 接口进行通信， JavaScript 在收到服务器端传送的信息后控制页面的显示。\n优点：实现真正的即时通信，而不是伪即时。\n缺点：客户端必须安装Flash插件；非 HTTP 协议，无法自动穿越防火墙。\n实例：网络互动游戏。\nWebsocket:\nWebSocket是 HTML5 开始提供的一种浏览器与服务器间进行全双工通讯的网络技术。依靠这种技术可以实现客户端和服务器端的长连接，双向实时通信。\n特点:\na、事件驱动\nb、异步\nc、使用 ws 或者 wss 协议的客户端 socket\nd、能够实现真正意义上的推送功能\n缺点：少部分浏览器不支持，浏览器支持的程度与方式有区别。\n\n###### 30.img的title和alt有什么区别？\n>`alt` 用于图片无法加载时显示\n> `title` 为该属性提供信息，通常当鼠标滑动到元素上的时候显示\n\n###### 31.表单的基本组成部分有哪些，表单的主要用途是什么？\n>组成：表单标签、表单域、表单按钮\n>\na、表单标签：这里面包含了处理表单数据所用 CGI 程序的 URL, 以及数据提交到服务器的方法。\nb、表单域：包含了文本框、密码框、隐藏域、多行文本框、复选框、单选框、下拉选择框、和文件上传框等。\nc、表单按钮：包括提交按钮，复位按钮和一般按钮；用于将数据传送到服务器上的 CGI 脚本或者取消输入，还可以用表单按钮来控制其他定义了处理脚本的处理工作。\n主要用途：表单在网页中主要负责数据采集的功能，和向服务器传送数据。\n\n###### 32.表单提交中Get和Post方式的区别？\n>1. get 是从服务器上获取数据， post 是向服务器传送数据。\n2.  get 是把参数数据队列加到提交表单的 ACTION 属性所指的 URL 中，值和表单内各个字段一一对应，在 URL 中可以看到。 post 是通过 HTTP post 机制，将表单内各个字段与其内容放置在 HTML HEADER 内一起传送到 ACTION 属性所指的 URL 地址 , 用户看不到这个过程。\n3. 对于 get 方式，服务器端用 Request.QueryString 获取变量的值，对于 post 方式，服务器端用 Request.Form 获取提交的数据。\n4. get 传送的数据量较小，不能大于 2KB 。 post 传送的数据量较大，一般被默认为不受限制。但理论上， IIS4 中最大量为 80KB ， IIS5 中为100KB 。\n5.  get 安全性非常低， post 安全性较高。\n\n###### 33.HTML5 有哪些新增的表单元素？\n>HTML5 新增了很多表单元素让开发者构建更优秀的 Web 应用程序。\n• datalist\n• datetime\n• output\n• keygen\n• date\n• month\n• week\n• time\n• color\n• number\n• range\n• email\n• Url\n\n###### 34.HTML5 废弃了哪些 HTML4 标签？\n> HTML5 废弃了一些过时的，不合理的HTML 标签：\n• frame\n• frameset\n• noframe\n• applet\n• big\n• center\n• basefront\n\n###### 35.HTML5 标准提供了哪些新的 API？\n>HTML5 提供的应用程序 API 主要有：\n• Media API\n• Text Track API\n• Application Cache API\n• User Interaction\n• Data Transfer API\n• Command API\n• Constraint Validation API\n• History API\n\n###### 36.HTML5 存储类型有什么区别？\n>HTML5 能够本地存储数据，在之前都是使用 cookies 使用的。 HTML5 提供了下面两种本地存储方案：\n• localStorage 用于持久化的本地存储，数据永远不会过期，关闭浏览器也不会丢失。\n• sessionStorage 同一个会话中的页面才能访问并且当会话结束后数据也随之销毁。因此sessionStorage不是一种持久化的本地存储，仅仅是会话级别的存储\n\n###### 37.HTML5 应用程序缓存和浏览器缓存有什么区别？\n> **应用程序缓存**是 HTML5 的重要特性之一，提供了离线使用的功能，让应用程序可以获取本地的网站内容，例如 HTML 、 CSS 、图片以及 JavaScript 。这个特性可以提高网站性能，它的实现借助于 manifest 文件，如下：\n```\n<!doctype html>\n<html manifest=”example.appcache”>\n…\n</html>\n```\n与传统浏览器缓存相比，它不强制用户访问的网站内容被缓存。\n\n###### 38.HTML5 Canvas 元素有什么用？\n>Canvas 元素用于在网页上绘制图形，该元素标签强大之处在于可以直接在 HTML 上进行图形操作，\n```\n<canvas id=” canvas1 ″ width= ” 300 ″ height= ” 100 ″ >\n</canvas>\n```\n\n###### 39.除了 audio 和 video，HTML5 还有哪些媒体标签？\n>HTML5 对于多媒体提供了强有力的支持，除了 audio 和 video 标签外，还支持以下标签：\n* <embed> 标签定义嵌入的内容，比如插件。\n`<embed type=” video/quicktime ” src= ” Fishing.mov ” >`\n* <source> 对于定义多个数据源很有用。\n```\n<video width=” 450 ″ height= ” 340 ″ controls>\n  <source src=” jamshed.mp4 ″ type= ” video/mp4 ″ >\n  <source src=” jamshed.ogg ” type= ” video/ogg ” >\n</video>\n```\n* <track> 标签为诸如 video 元素之类的媒介规定外部文本轨道。 用于规定字幕文件或其他包含文本的文件，当媒介播放时，这些文件是可见的。\n```\n<video width=” 450 ″ height= ” 340 ″ controls>\n    <source src=” jamshed.mp4 ″ type= ” video/mp4 ″ >\n    <source src=” jamshed.ogg ” type= ” video/ogg ” >\n    <track kind=” subtitles ” label= ” English ” src= ” jamshed_en.vtt ” srclang= ” en ” default></track>\n    <track kind=” subtitles ” label= ” Arabic ” src= ” jamshed_ar.vtt ” srclang= ” ar ” ></track>\n</video>\n```\n据源很有用。标签为诸如 video 元素之类的媒介规定外部文本轨道。 用于规定字幕文件或其他包含文本的文件，当媒介播放时，这些文件是可见的。\n\n###### 40.HTML5 中如何嵌入视频？\n>和音频类似，HTML5 支持 MP4 、 WebM 和 Ogg 格式的视频，下面是简单示例：\n```\n<video width=” 450 ″ height= ” 340 ″ controls>\n    <source src=” jamshed.mp4 ″ type= ” video/mp4 ″ >\n    Your browser does’ nt support video embedding feature.\n</video>\n```\n\n###### 4.HTML5 中如何嵌入音频？\n>HTML5 支持 MP3 、 Wav 和 Ogg 格式的音频，下面是在网页中嵌入音频的简单示例：\n```\n<audio controls>\n    <source src=” jamshed.mp3 ″ type= ” audio/mpeg ” >\n    Your browser does’ nt support audio embedding feature.\n</audio>\n```\n\n###### 42 .新的 HTML5 文档类型和字符集是？\n>HTML5 文档类型很简单：\n```\n<!doctype html>\n<!--HTML5 使用 UTF-8 编码示例-->\n<meta charset=” UTF-8 ″ >\n```\n\n###### 43.解释一下CSS的盒子模型？\n>回答一：\na、**标准的css盒子模型**：宽度=内容的宽度+边框的宽度+加上内边具的宽度\nb、网页设计中常听的属性名：内容(content)、填充(padding)、边框(border)、边界(margin)， CSS盒子模式都具备这些属性。\nc、这些属性我们可以把它转移到我们日常生活中的盒子（箱子）上来理解，日常生活中所见的盒子也就是能装东西的一种箱子，也具有这些属性，所以叫它盒子模式。CSS盒子模型就是在网页设计中经常用到的CSS技术所使用的一种思维模型。\n回答二：\n盒子模型也有人称为框模型，HTML中的多数元素都会在浏览器中生成一个矩形的区域，每个区域包含四个组成部分，从外向内依次是：外边距（Margin）、边框（Border）、内边距（Padding）和内容（Content），其实盒子模型有两种，分别是 ie 盒子模型和标准 w3c 盒子模型，加上了doctype声明，让所有浏览器都会采用标准 w3c 盒子模型去解释你的盒子。\n\n###### 44. 请你说说CSS选择器的类型有哪些，并举几个例子说明其用法？\n>类型：基础的选择器、组合选择器、属性选择器、伪类、伪元素\n\n###### 45.请你说说CSS有什么特殊性?（优先级、计算特殊值）\n>优先级\n(1)、同类型，同级别的样式后者先于前者\n(2))、ID > 类样式 > 标签 > \n(3)、内联>ID选择器>伪类>属性选择器>类选择器>标签选择器>通用选择器()>继承的样式\n(4)、具体 > 泛化的，特殊性即css优先级\n(5)、近的 > 远的 (内嵌样式 > 内部样式表 > 外联样式表)\n  **内嵌样式**：内嵌在元素中，<span style=\"color:red\">span</span>\n  **内部样式表**：在页面中的样式，写在<style></style>中的样式\n**外联样式表**：单独存在一个css文件中，通过link引入或import导入的样式\n(6)、!important 权重最高，比 inline style 还要高\n***\n计算特殊性值\nimportant > 内嵌 > ID > 类 > 标签 | 伪类 | 属性选择 > 伪对象 > 继承 > 通配符\n权重、特殊性计算法：\nCSS样式选择器分为4个等级，a、b、c、d\n(1)、如果样式是行内样式（通过Style=“”定义），那么a=1，1,0,0,0\n(2)、b为ID选择器的总数 0,1,0,0\n(3)、c为属性选择器，伪类选择器和class类选择器的数量。0,0,1,0\n(4)、d为标签、伪元素选择器的数量 0,0,0,1\n(5)、!important 权重最高，比 inline style 还要高\n比如结果为：1093比1100，按位比较，从左到右，只要一位高于则立即胜出，否则继续比较。\n\n###### 46.要动态改变层中内容可以使用的方法？\n>innerHTML，innerText","source":"_posts/前端面试集（HTML-CSS）.md","raw":"---\ntitle: 前端面试集（HTML+CSS）\ndate: 2017-09-15 16:46:10\ntags: [HTML, CSS, 面试]\ncategories: CSS\ncomments: true\nthumbnail: http://ow9cw9x3t.bkt.clouddn.com/resume.gif\n---\n\n###### 1. 浏览器页面有哪三层构成，分别是什么，作用是什么?\n\n> 构成：结构层、表示层、行为层\n分别是：HTML、CSS、JavaScript\n作用：HTML实现页面结构，CSS完成页面的表现与风格，JavaScript实现一些客户端的功能与业务。\n\n##### 2.HTML5的优点与缺点？\n>优点：\na、网络标准统一、HTML5本身是由W3C推荐出来的。\nb、多设备、跨平台\nc、即时更新。\nd、提高可用性和改进用户的友好体验；\ne、有几个新的标签，这将有助于开发人员定义重要的内容；\nf、可以给站点带来更多的多媒体元素(视频和音频)；\ng、可以很好的替代Flash和Silverlight；\nh、涉及到网站的抓取和索引的时候，对于SEO很友好；\ni、被大量应用于移动应用程序和游戏。\n\n>缺点：\na、安全：像之前Firefox4的web socket和透明代理的实现存在严重的安全问题，同时web storage、web socket 这样的功能很容易被黑客利用，来盗取用户的信息和资料。\nb、完善性：许多特性各浏览器的支持程度也不一样。\nc、技术门槛：HTML5简化开发者工作的同时代表了有许多新的属性和API需要开发者学习，像web worker、web socket、web storage 等新特性，后台甚至浏览器原理的知识，机遇的同时也是巨大的挑战\nd、性能：某些平台上的引擎问题导致HTML5性能低下。\ne、浏览器兼容性：最大缺点，IE9以下浏览器几乎全军覆没。\n\n###### 3.Doctype作用? 严格模式与混杂模式如何区分？它们有何意义?\n>回答1：\n（1）、 声明位于文档中的最前面，处于标签之前。告知浏览器的解析器，用什么文档类型 规范来解析这个文档。\n（2）、严格模式的排版和JS 运作模式是以该浏览器支持的最高标准运行。\n（3）、在混杂模式中，页面以宽松的向后兼容的方式显示。模拟老式浏览器的行为以防止站点无法工作。\n（4）、DOCTYPE不存在或格式不正确会导致文档以混杂模式呈现。\n***\n>回答2： \ndoctype声明指出阅读程序应该用什么规则集来解释文档中的标记。在Web文档的情况下，“阅读程序”通常是浏览器或者校验器这样的一个程序，“规则”则是W3C所发布的一个文档类型定义（DTD）中包含的规则。\n(1) 声明位于文档中的最前面的位置，处于标签之前。此标签可告知浏览器文档使用哪种 HTML 或 XHTML 规范。该标签可声明三种 DTD 类型，分别表示严格版本、过渡版本以及基于框架的HTML 文档。\n(2)所谓的标准模式是指，浏览器按 W3C 标准解析执行代码；怪异模式则是使用浏览器自己的方式解析执行代码，因为不同浏览器解析执行的方式不一样，所以我们称之为怪异模式。 严格模式是浏览器根据web标准去解析页面，是一种要求严格的DTD，不允许使用任何表现层的语法，如\n。严格模式的排版和JS 运作模式是以该浏览器支持的最高标准运行混杂模式则是一种向后兼容的解析方法，说的透明点就是可以实现IE5.5以下版本浏览器的渲染模式。\n(3)浏览器解析时到底使用标准模式还是怪异模式，与你网页中的 DTD 声明直接相关， DTD 声明定义了标准文档的类型（标准模式解析）文档类型，会使浏览器使用相应的方式加载网页并显示，忽略 DTD 声明 ,将使网页进入怪异模式。\n\n###### 4.HTML5有哪些新特性、移除了哪些元素？\n> Html5 **新增了 `27 `个元素，废弃了`16`个元素**，根据现有的标准规范，把 HTML5 的元素按优先级定义为结构性属性、级块性元素、行内语义性元素和交互性元素 4 大类。\n1. **结构性元素主要负责web上下文结构的定义**\n`section`：在 web 页面应用中，该元素也可以用于区域的章节描述。\n`header`：页面主体上的头部， header 元素往往在一对 body 元素中。\n`footer`：页面的底部（页脚），通常会标出网站的相关信息。\n`nav`：专门用于菜单导航、链接导航的元素，是 navigator 的缩写。\n`article`：用于表现一篇文章的主体内容，一般为文字集中显示的区域。\n2. **级块性元素主要完成web页面区域的划分，确保内容的有效分割**\n`aside`：用于表达注记、贴士、侧栏、摘要、插入的引用等作为补充主体的内容。\n`figure`：是对多个元素进行组合并展示的元素，通常与 ficaption 联合使用。\n`code`：表示一段代码块。\n`dialog`：用于表达人与人之间的对话，该元素包含 dt 和 dd 这两个组合元素， dt 用于表示说话者，而 dd 用来表示说话内容。\n行内语义性元素主要完成web页面具体内容的引用和描述，是丰富内容展示的基础。\n`meter`：表示特定范围内的数值，可用于工资、数量、百分比等。\n`time`：表示时间值。\n`progress`：用来表示进度条，可通过对其 max 、 min 、 step 等属性进行控制，完成对进度的表示和监事。\n`video`：视频元素，用于支持和实现视频文件的直接播放，支持缓冲预载和多种视频媒体格式。\n`audio`：音频元素，用于支持和实现音频文件的直接播放，支持缓冲预载和多种音频媒体格式。\n交互性元素主要用于功能性的内容表达，会有一定的内容和数据的关联，是各种事件的基础。\n`details`：用来表示一段具体的内容，但是内容默认可能不显示，通过某种手段（如单击）与 legend 交互才会显示出来。\n`datagrid`：用来控制客户端数据与显示，可以由动态脚本及时更新。\n`menu`：主要用于交互菜单（曾被废弃又被重新启用的元素）。\n`command`：用来处理命令按钮。\n\n###### 5.你做的网页在哪些流览器测试过,这些浏览器的内核分别是什么?\n> \na、 IE: trident 内核\nb、 Firefox: gecko 内核\nc、 Safari: webkit 内核\nd、 Opera: 以前是 presto 内核， Opera 现已改用 Google Chrome 的 Blink 内核\ne、 Chrome:Blink( 基于 webkit ， Google 与 Opera Software 共同开发 )\n\n###### 6. 每个HTML文件里开头都有个很重要的东西，Doctype，知道这是干什么的吗？\n> 声明位于文档中的最前面的位置，处于标签之前。此标签可告知浏览器文档使用哪种 HTML 或 XHTML 规范。（**重点：告诉浏览器按照何种规范解析页面**）\n\n###### 7.说说你对HTML5认识?（是什么,为什么）\n>** 是什么：**\nHTML5指的是包括 HTML 、 CSS 和 JavaScript 在内的一套技术组合。它希望能够减少网页浏览器对于需要插件的丰富性网络应用服务（ Plug-in-Based Rich Internet Application ， RIA ），例如： AdobeFlash 、 Microsoft Silverlight 与 Oracle JavaFX 的需求，并且提供更多能有效加强网络应用的标准集。 HTML5 是 HTML 最新版本， 2014 年 10 月由万维网联盟（ W3C ）完成标准制定。目标是替换 1999 年所制定的 HTML 4.01 和 XHTML 1.0 标准，以期能在互联网应用迅速发展的时候，使网络标准达到匹配当代的网络需求。\n***\n**为什么:**\nHTML4陈旧不能满足日益发展的互联网需要，特别是移动互联网。为了增强浏览器功能 Flash 被广泛使用，但安全与稳定堪忧，不适合在移动端使用（耗电、触摸、不开放）。\nHTML5增强了浏览器的原生功能，符合 HTML5 规范的浏览器功能将更加强大，减少了 Web 应用对插件的依赖，让用户体验更好，让开发更加方便，另外 W3C 从推出 HTML4.0 到 5.0 之间共经历了 17 年， HTML 的变化很小，这并不符合一个好产品的演进规则。\n\n###### 8.对WEB标准以及W3C的理解与认识?\n>1. 标签闭合、标签小写、不乱嵌套、提高搜索机器人搜索几率、使用外链css和 js 脚本、结构行为表现的分离，\n2. 文件下载与页面速度更快、内容能被更多的用户所访问、内容能被更广泛的设备所访问、更少的代码和组件，\n3. 容易维护、改版方便，不需要变动页面内容、提供打印版本而不需要复制内容、提高网站易用性。\n\n###### 9.HTML5行内元素有哪些,块级元素有哪些, 空元素有哪些?\n\n>**行内元素**\n* a - 锚点\n* abbr - 缩写\n* acronym - 首字\n* b - 粗体 ( 不推荐 )\n* bdo - bidi override\n* big - 大字体\n* br - 换行\n* cite - 引用\n* code - 计算机代码 ( 在引用源码的时候需要 )\n* dfn - 定义字段\n* em - 强调\n* font - 字体设定 ( 不推荐 )\n* i - 斜体\n* img - 图片\n* input - 输入框\n* kbd - 定义键盘文本\n* label - 表格标签\n* q - 短引用\n* s - 中划线 ( 不推荐 )\n* samp - 定义范例计算机代码\n* select - 项目选择\n* small - 小字体文本\n* span - 常用内联容器，定义文本内区块\n* strike - 中划线\n* strong - 粗体强调\n* sub - 下标\n* sup - 上标\n* textarea - 多行文本输入框\n* tt - 电传文本\n* u - 下划线\n* var - 定义变量\n***\n**块元素 (block element)**\n* address - 地址\n* blockquote - 块引用\n* center - 举中对齐块\n* dir - 目录列表\n* div - 常用块级容易，也是 css layout 的主要标签\n* dl - 定义列表\n* fieldset - form控制组\n* form - 交互表单\n* h3 - 大标题\n* h4 - 副标题\n* h3 - 3级标题\n* h4 - 4级标题\n* h5 - 5级标题\n* h6 - 6级标题\n* hr - 水平分隔线\n* isindex - input prompt\n* menu - 菜单列表\n* noframes - frames可选内容，（对于不支持 frame 的浏览器显示此区块内容\n* noscript - ）可选脚本内容（对于不支持 script 的浏览器显示此内容）\n* ol - 排序表单\n* p - 段落\n* pre - 格式化文本\n* table - 表格\n* ul - 非排序列表\n可变元素\n可变元素为根据上下文语境决定该元素为块元素或者内联元素。\n* applet - java applet\n* button - 按钮\n* del - 删除文本\n* iframe - inline frame\n* ins - 插入的文本\n* map - 图片区块 (map)\n* object - object对象\n* script - 客户端脚本\n***\n**空元素 ( 在 HTML[1] 元素中，没有内容的 HTML 元素被称为空元素 )**\n* `br`\n* `hr`\n* `input`\n* `img`\n* `link` \n* `meta`\n\n###### 10.什么是WebGL,它有什么优点?\n> WebGL（全写 Web Graphics Library ）是一种 3D 绘图标准，这种绘图技术标准允许把 JavaScript 和 OpenGL ES 2.0 结合在一起，通过增加OpenGL ES 2.0 的一个 JavaScript 绑定， WebGL 可以为 HTML5 Canvas 提供硬件 3D 加速渲染，这样 Web 开发人员就可以借助系统显卡来在浏览器里更流畅地展示 3D 场景和模型了，还能创建复杂的导航和数据视觉化。显然， WebGL 技术标准免去了开发网页专用渲染插件的麻烦，可被用于创建具有复杂 3D 结构的网站页面，甚至可以用来设计 3D 网页游戏等等。\n***\nWebGL完美地解决了现有的 Web 交互式三维动画的两个问题：\n第一，它通过HTML脚本本身实现 Web 交互式三维动画的制作，无需任何浏览器插件支持 ;\n第二，它利用底层的图形硬件加速功能进行的图形渲染，是通过统一的、标准的、跨平台的OpenGL接口实现的。\n通俗说WebGL中 canvas 绘图中的 3D 版本。因为原生的 WebGL 很复杂，我们经常会使用一些三方的库，如 three.js 等，这些库多数用于HTML5 游戏开发。\n\n###### 11.请你描述一下 cookies，sessionStorage 和 localStorage 的区别?\n> sessionStorage 和 localStorage 是 HTML5 Web Storage API 提供的，可以方便的在 web 请求之间保存数据。有了本地数据，就可以避免数据在浏览器和服务器间不必要地来回传递。\nsessionStorage、 localStorage 、 cookie 都是在浏览器端存储的数据，其中 sessionStorage 的概念很特别，引入了一个“浏览器窗口”的概念。\n1. **sessionStorage** 是在**同源的同窗口（或 tab ）**中，始终存在的数据。也就是说只要这个浏览器窗口没有关闭，即使刷新页面或进入同源另一页面，数据仍然存在。**关闭窗口后， sessionStorage 即被销毁**。同时“独立”打开的不同窗口，即使是同一页面， sessionStorage 对象也是不同的\n**cookies会发送到服务器端。其余两个不会。**\nMicrosoft 指出 Internet Explorer 8 增加 cookie 限制为每个域名 50 个，但 IE7 似乎也允许每个域名 50 个 cookie 。 Firefox 每个域名 cookie 限制为 50 个。 Opera 每个域名 cookie 限制为 30 个。 Firefox 和 Safari 允许 cookie 多达 4097 个字节，包括名（ name ）、值（ value ）和等号。 Opera 许 cookie 多达 4096 个字节，包括：名（ name ）、值（ value ）和等号。 Internet Explorer 允许 cookie 多达 4095 个字节，包括：名（ name ）、值（ value ）和等号。\n***\n区别：\n**Cookie**\n每个域名存储量比较小（各浏览器不同，大致 4K ）\n所有域名的存储量有限制（各浏览器不同，大致 4K ）\n有个数限制（各浏览器不同）\n会随请求发送到服务器\n**LocalStorage**\n永久存储\n单个域名存储量比较大（推荐 5MB ，各浏览器不同）\n总体数量无限制\n**SessionStorage**\n只在 Session 内有效\n存储量更大（推荐没有限制，但是实际上各浏览器也不同）\n\n###### 12.说说你对HTML语义化的理解?\n> (1) 什么是 HTML 语义化？\n  根据内容的结构化（内容语义化），选择合适的标签（代码语义化）便于开发者阅读和写出更优雅的代码的同时让浏览器的爬虫和机器很好地解析。\n      **基本上都是围绕着几个主要的标签，像标题（ H1~H6 ）、列表（ li ）、强调（ strong em ）等等**\n***\n(2) 为什么要语义化？\n1. 为了在没有CSS的情况下，页面也能呈现出很好地内容结构、代码结构 : 为了裸奔时好看；\n2. 用户体验：例如title、 alt 用于解释名词或解释图片信息、 label 标签的活用；\n3. 有利于SEO：和搜索引擎建立良好沟通，有助于爬虫抓取更多的有效信息：爬虫依赖于标签来确定上下文和各个关键字的权重；\n4. 方便其他设备解析（如屏幕阅读器、盲人阅读器、移动设备）以意义的方式来渲染网页；\n5. 便于团队开发和维护，语义化更具可读性，是下一步吧网页的重要动向，遵循W3C标准的团队都遵循这个标准，可以减少差异化。\n***\n(3) 语义化标签\n<header></header>\n<footer></footer>\n<nav></nav>\n<section></section>\n<article></article> SM:用来在页面中表示一套结构完整且独立的内容部分\n<aslde></aside> SM:主题的附属信息 ( 用途很广，主要就是一个附属内容 ) ，如果 article 里面为一篇文章的话，那么文章的作者以及信息内容就是这篇文章的附属内容了\n<figure></figure>SM:媒体元素，比如一些视频，图片啊等等\n<datalist></datalist>SM:选项列表，与 input 元素配合使用，来定义 input 可能的值\n<details></details>SM:用于描述文档或者文档某个部分的细节 ~ 默认属性为 open~\nps:配合 summary 一起使用\n\n###### 13.link和@import的区别?\n>```\n<link rel='stylesheet' rev='stylesheet' href='CSS文件 ' type='text/css' media='all' />\n```\n```\n<style type='text/css' media='screen'>\n    @import url('CSS文件 ');\n</style>\n```\n***\n两者都是外部引用CSS的方式，但是存在一定的区别：\n*  `link` 是 XHTML 标签，除了加载 `CSS` 外，还可以定义` RSS` 等其他事务； `@import `属于 CSS 范畴，只能加载 CSS 。\n* `link` 引用 CSS 时，在页面载入时同时加载；` @import `需要页面网页完全载入以后加载。\n* `link` 是 XHTML 标签，无兼容问题； `@import` 是在 CSS2.1 提出的，低版本的浏览器不支持。\n* `link` 支持使用 Javascript 控制 DOM 去改变样式；而 `@import` 不支持。\n\n###### 14.说说你对SVG理解?\n> `SVG可缩放矢量图形（ Scalable Vector Graphics ）`是基于可扩展标记语言（ XML ），用于描述二维矢量图形的一种图形格式。 SVG 是W3C('World Wide Web ConSortium' 即 ' 国际互联网标准组织 ') 在 2000 年 8 月制定的一种新的`二维矢量图形格式`，也是规范中的网络矢量图形标准。 SVG 严格遵从 XML 语法，并用文本格式的描述性语言来描述图像内容，因此是一种和图像分辨率无关的矢量图形格式。 SVG 于 2003 年 1 月14 日成为 W3C 推荐标准。\n***\n特点：\n1. **任意放缩**。用户可以任意缩放图像显示，而不会破坏图像的清晰度、细节等。\n2. **文本独立**。SVG图像中的文字独立于图像，文字保留可编辑和可搜寻的状态。也不会再有字体的限制，用户系统即使没有安装某一字体，也会看到和他们制作时完全相同的画面。\n3. **较小文件**。总体来讲，SVG文件比那些 GIF 和 JPEG 格式的文件要小很多，因而下载也很快。\n4. **超强显示效果**。SVG图像在屏幕上总是边缘清晰，它的清晰度适合任何屏幕分辨率和打印分辨率。\n5. **超级颜色控制**。SVG图像提供一个 1600 万种颜色的调色板，支持 ICC 颜色描述文件标准、 RGB 、线 X 填充、渐变和蒙版。\n6. **交互 X 和智能化**。 SVG 面临的主要问题一个是如何和已经占有重要市场份额的矢量图形格式 Flash 竞争的问题，另一个问题就是 SVG 的本地运行环境下的厂家支持程度。\n7. **浏览器支持**\n>> Internet Explorer9，火狐，谷歌 Chrome ， Opera 和 Safari 都支持 SVG 。\nIE8和早期版本都需要一个插件 - 如 Adobe SVG 浏览器，这是免费提供的。\n\n###### 15.HTML全局属性(global attribute)有哪些?\n> MDN: html global attribute或者W3C HTML global-attributes accesskey:设置快捷键，提供快速访问元素如aaa在windows下的firefox中按alt + shift + a可激活元素 class:为元素设置类标识，多个类名用空格分开，CSS和javascript可通过class属性获取元素 contenteditable: 指定元素内容是否可编辑 contextmenu: 自定义鼠标右键弹出菜单内容 data-*: 为元素增加自定义属性 dir: 设置元素文本方向 draggable: 设置元素是否可拖拽 dropzone: 设置元素拖放类型： copy, move, link hidden: 表示一个元素是否与文档。样式上会导致元素不显示，但是不能用这个属性实现样式效果 id: 元素id，文档内唯一 lang: 元素内容的的语言 spellcheck: 是否启动拼写和语法检查 style: 行内css样式 tabindex: 设置元素可以获得焦点，通过tab可以导航 title: 元素相关的建议信息 translate: 元素和子孙节点内容是否需要本地化\n\n###### 16.说说超链接target属性的取值和作用？\n> `target`这个属性指定所链接的页面在浏览器窗口中的打开方式。\n它的参数值主要有：\na、` _blank` ：在新浏览器窗口中打开链接文件\nb、` _parent` ：将链接的文件载入含有该链接框架的父框架集或父窗口中。如果含有该链接的框架不是嵌套的，则在浏览器全屏窗口中载入链接的文件，就象 _self 参数。\nc、 `_self` ：在同一框架或窗口中打开所链接的文档。此参数为默认值，通常不用指定。\nd、` _top` ：在当前的整个浏览器窗口中打开所链接的文档，因而会删除所有框架。\n\n###### 17.data-属性的作用是什么？\n> `data-xxx`为前端开发者提供**自定义的属性**，这些属性集可以通过对象的 `dataset `属性获取，不支持该属性的浏览器可以通过 `getAttribute `方法获取。\n\n>需要注意的是：`data-xxx`之后的以连字符分割的多个单词组成的属性，获取的时候使用**驼峰风格**。并不是所有的浏览器都支持` .dataset 属性`，测试的浏览器中只有 Chrome 和 Opera 支持。\n即：当没有合适的属性和元素时，自定义的 data 属性是能够存储页面或 App 的私有的自定义数据。\n\n###### 18.介绍一下你对浏览器内核的理解？\n>浏览器内核主要分成两部分：**`渲染引擎(layout engineer或 Rendering Engine)`** 和** `JS 引擎`**。\n**渲染引擎**：负责取得网页的内容（HTML、 XML 、图像等等）、整理讯息（例如加载 CSS 等），以及计算网页的显示方式，然后会输出至显示器或打印机。浏览器的内核的不同对于网页的语法解释会有不同，所以渲染的效果也不相同。所有网页浏览器、电子邮件客户端以及其它需要编辑、显示网络内容的应用程序都需要内核。\n**JS引擎**：解析和执行 javascript 来实现网页的动态效果。\n***\n最开始渲染引擎和JS引擎并没有区分的很明确，后来 JS 引擎越来越独立，内核就倾向于只指渲染引擎。\n\n###### 19.常见的浏览器内核有哪些？\n>1. `Trident内核`： `IE`,`MaxThon`,`TT`,`The World`,`360`, `搜狗`等。[ 又称 MSHTML]\n2. `Gecko内核`： `Netscape6` 及以上版本，`FF`,`MozillaSuite/SeaMonkey `等\n3. `Presto内核`： `Opera7 `及以上。[`Opera` 内核原为： `Presto` ，现为：` Blink`;]\n4. `Webkit内核`： `Safari`,`Chrome` 等。[ `Chrome` 的： `Blink （ WebKit 的分支）` ]\n\n###### 20.iframe有那些缺点？\n> 1. iframe会阻塞主页面的 Onload 事件； \n2. 搜索引擎的检索程序无法解读这种页面，不利于 SEO;\n3. iframe和主页面共享连接池，而浏览器对相同域的连接有限制，所以会影响页面的并行加载。\n***\n>使用iframe之前需要考虑这两个缺点。如果需要使用 iframe，最好是**通过 javascript动态给iframe添加 src 属性值**，这样可以绕开以上两个问题。\n\n###### 21.Label的作用是什么，是怎么用的？\n>`label`标签来*定义表单控制间的关系* , 当用户选择该标签时，浏览器会自动将焦点转到和标签相关的表单控件上。\n```\n<label for='Name'>Number:</label>\n<input type=“ text “ name='Name' id='Name'/>\n<label>Date:<input type='text' name='B'/></label>\n```\n\n###### 22.如何实现浏览器内多个标签页之间的通信?\n>`WebSocket`、 `SharedWorker `；\n也可以调用`localstorge`、 `cookies` 等本地存储方式；\n`localstorge` 另一个浏览上下文里被添加、修改或删除时，它都会触发一个事件，我们通过监听事件，控制它的值来进行页面信息通信；\n***\n注意quirks： Safari 在无痕模式下设置 localstorge 值时会抛出 QuotaExceededError 的异常；\n\n###### 23.如何在页面上实现一个圆形的可点击区域？\n>a、 map+area(锚点图) 或者 svg\nb、   `border-radius`\nc、纯 js 实现 需要求一个点在不在圆上简单算法、获取鼠标坐标等等\n\n##### 24.title与h3的区别、b与strong的区别、i与em的区别？\n>* `title`属性没有明确意义只表示是个标题， `H1` 则表示层次明确的标题，对页面信息的抓取也有很大的影响；\n* `strong`是标明重点内容，有语气加强的含义，使用阅读设备阅读网络时： 会重读，而 `<B> `是展示强调内容。\n* `i`内容展示为斜体， `em` 表示强调的文本；\n***\n* Physical Style Elements -- 自然样式标签\nb, i, u, s, pre\n* Semantic Style Elements -- 语义样式标签\nstrong, em, ins, del, code\n*应该准确使用语义样式标签, 但不能滥用 , 如果不能确定时首选使用自然样式标签。*\n\n###### 25.实现不使用 border 画出1px高的线，在不同浏览器的标准模式与怪异模式下都能保持一致的效果？\n>```<div style='height:1px;overflow:hidden;background:red'></div>```\n\n###### 26.HTML5标签的作用?(用途)\n>a、使Web页面的内容更加有序和规范\nb、使搜索引擎更加容易按照HTML5规则识别出有效的内容\nc、使Web页面更接近于一种数据字段和表\n\n###### 27.简述一下src与href的区别？\n>src用于替换当前元素， href 用于在当前文档和引用资源之间确立联系。\nsrc是 source 的缩写，指向外部资源的位置，指向的内容将会嵌入到文档中当前标签所在位置；在请求 src 资源时会将其指向的资源下载并应用到文档内，例如 js 脚本， img 图片和 frame 等元素。\n`<script src ='js.js'></script>`\n当浏览器解析到该元素时，会暂停其他资源的下载和处理，直到将该资源加载、编译、执行完毕，图片和框架等元素也如此，类似于将所指向资源嵌入当前标签内。这也是为什么将js脚本放在底部而不是头部。\nhref是 Hypertext Reference 的缩写，指向网络资源所在位置，建立和当前元素（锚点）或当前文档（链接）之间的链接，如果我们在文档中添加\n`<link href='common.css' rel='stylesheet'/>`，那么浏览器会识别该文档为css文件，就会并行下载资源并且不会停止对当前文档的处理。这也是为什么建议使用 link 方式来加载 css ，而不是使用@import 方式。\n\n###### 28.谈谈你对canvas的理解？\n>canvas是HTML5中新增一个HTML5标签与操作canvas的javascript API，它可以实现在网页中完成动态的2D与3D图像技术。标记和 SVG以及 VML 之间的一个重要的不同是，有一个基于 JavaScript 的绘图 API，而 SVG 和 VML 使用一个 XML 文档来描述绘图。SVG 绘图很容易编辑与生成，但功能明显要弱一些。 canvas可以完成动画、游戏、图表、图像处理等原来需要Flash完成的一些功能。\n\n###### 29.WebSocket与消息推送？\n> B/S架构的系统多使用HTTP协议，\nHTTP协议的特点： 1 无状态协议 2 用于通过 Internet 发送请求消息和响应消息 3 使用端口接收和发送消息，默认为80端口 底层通信还是使用Socket完成。\nHTTP协议决定了服务器与客户端之间的连接方式，无法直接实现消息推送（ F5 已坏） , 一些变相的解决办法：\n双向通信与消息推送\n轮询：客户端定时向服务器发送Ajax请求，服务器接到请求后马上返回响应信息并关闭连接。\n优点：后端程序编写比较容易。\n缺点：请求中有大半是无用，浪费带宽和服务器资源。\n实例：适于小型应用。\n长轮询：客户端向服务器发送Ajax请求，服务器接到请求后 hold 住连接，直到有新消息才返回响应信息并关闭连接，客户端处理完响应信息后再向服务器发送新的请求。\n优点：在无消息的情况下不会频繁的请求，耗费资小。\n缺点：服务器hold连接会消耗资源，返回数据顺序无保证，难于管理维护。 Comet 异步的 ashx ，\n实例：WebQQ、 Hi 网页版、 Facebook IM 。\n长连接：在页面里嵌入一个隐蔵iframe，将这个隐蔵 iframe 的 src 属性设为对一个长连接的请求或是采用 xhr 请求，服务器端就能源源不断地往客户端输入数据。\n优点：消息即时到达，不发无用请求；管理起来也相对便。\n缺点：服务器维护一个长连接会增加开销。\n实例：Gmail聊天\nFlash Socket：在页面中内嵌入一个使用了 Socket 类的 Flash 程序 JavaScript 通过调用此 Flash 程序提供的 Socket 接口与服务器端的 Socket 接口进行通信， JavaScript 在收到服务器端传送的信息后控制页面的显示。\n优点：实现真正的即时通信，而不是伪即时。\n缺点：客户端必须安装Flash插件；非 HTTP 协议，无法自动穿越防火墙。\n实例：网络互动游戏。\nWebsocket:\nWebSocket是 HTML5 开始提供的一种浏览器与服务器间进行全双工通讯的网络技术。依靠这种技术可以实现客户端和服务器端的长连接，双向实时通信。\n特点:\na、事件驱动\nb、异步\nc、使用 ws 或者 wss 协议的客户端 socket\nd、能够实现真正意义上的推送功能\n缺点：少部分浏览器不支持，浏览器支持的程度与方式有区别。\n\n###### 30.img的title和alt有什么区别？\n>`alt` 用于图片无法加载时显示\n> `title` 为该属性提供信息，通常当鼠标滑动到元素上的时候显示\n\n###### 31.表单的基本组成部分有哪些，表单的主要用途是什么？\n>组成：表单标签、表单域、表单按钮\n>\na、表单标签：这里面包含了处理表单数据所用 CGI 程序的 URL, 以及数据提交到服务器的方法。\nb、表单域：包含了文本框、密码框、隐藏域、多行文本框、复选框、单选框、下拉选择框、和文件上传框等。\nc、表单按钮：包括提交按钮，复位按钮和一般按钮；用于将数据传送到服务器上的 CGI 脚本或者取消输入，还可以用表单按钮来控制其他定义了处理脚本的处理工作。\n主要用途：表单在网页中主要负责数据采集的功能，和向服务器传送数据。\n\n###### 32.表单提交中Get和Post方式的区别？\n>1. get 是从服务器上获取数据， post 是向服务器传送数据。\n2.  get 是把参数数据队列加到提交表单的 ACTION 属性所指的 URL 中，值和表单内各个字段一一对应，在 URL 中可以看到。 post 是通过 HTTP post 机制，将表单内各个字段与其内容放置在 HTML HEADER 内一起传送到 ACTION 属性所指的 URL 地址 , 用户看不到这个过程。\n3. 对于 get 方式，服务器端用 Request.QueryString 获取变量的值，对于 post 方式，服务器端用 Request.Form 获取提交的数据。\n4. get 传送的数据量较小，不能大于 2KB 。 post 传送的数据量较大，一般被默认为不受限制。但理论上， IIS4 中最大量为 80KB ， IIS5 中为100KB 。\n5.  get 安全性非常低， post 安全性较高。\n\n###### 33.HTML5 有哪些新增的表单元素？\n>HTML5 新增了很多表单元素让开发者构建更优秀的 Web 应用程序。\n• datalist\n• datetime\n• output\n• keygen\n• date\n• month\n• week\n• time\n• color\n• number\n• range\n• email\n• Url\n\n###### 34.HTML5 废弃了哪些 HTML4 标签？\n> HTML5 废弃了一些过时的，不合理的HTML 标签：\n• frame\n• frameset\n• noframe\n• applet\n• big\n• center\n• basefront\n\n###### 35.HTML5 标准提供了哪些新的 API？\n>HTML5 提供的应用程序 API 主要有：\n• Media API\n• Text Track API\n• Application Cache API\n• User Interaction\n• Data Transfer API\n• Command API\n• Constraint Validation API\n• History API\n\n###### 36.HTML5 存储类型有什么区别？\n>HTML5 能够本地存储数据，在之前都是使用 cookies 使用的。 HTML5 提供了下面两种本地存储方案：\n• localStorage 用于持久化的本地存储，数据永远不会过期，关闭浏览器也不会丢失。\n• sessionStorage 同一个会话中的页面才能访问并且当会话结束后数据也随之销毁。因此sessionStorage不是一种持久化的本地存储，仅仅是会话级别的存储\n\n###### 37.HTML5 应用程序缓存和浏览器缓存有什么区别？\n> **应用程序缓存**是 HTML5 的重要特性之一，提供了离线使用的功能，让应用程序可以获取本地的网站内容，例如 HTML 、 CSS 、图片以及 JavaScript 。这个特性可以提高网站性能，它的实现借助于 manifest 文件，如下：\n```\n<!doctype html>\n<html manifest=”example.appcache”>\n…\n</html>\n```\n与传统浏览器缓存相比，它不强制用户访问的网站内容被缓存。\n\n###### 38.HTML5 Canvas 元素有什么用？\n>Canvas 元素用于在网页上绘制图形，该元素标签强大之处在于可以直接在 HTML 上进行图形操作，\n```\n<canvas id=” canvas1 ″ width= ” 300 ″ height= ” 100 ″ >\n</canvas>\n```\n\n###### 39.除了 audio 和 video，HTML5 还有哪些媒体标签？\n>HTML5 对于多媒体提供了强有力的支持，除了 audio 和 video 标签外，还支持以下标签：\n* <embed> 标签定义嵌入的内容，比如插件。\n`<embed type=” video/quicktime ” src= ” Fishing.mov ” >`\n* <source> 对于定义多个数据源很有用。\n```\n<video width=” 450 ″ height= ” 340 ″ controls>\n  <source src=” jamshed.mp4 ″ type= ” video/mp4 ″ >\n  <source src=” jamshed.ogg ” type= ” video/ogg ” >\n</video>\n```\n* <track> 标签为诸如 video 元素之类的媒介规定外部文本轨道。 用于规定字幕文件或其他包含文本的文件，当媒介播放时，这些文件是可见的。\n```\n<video width=” 450 ″ height= ” 340 ″ controls>\n    <source src=” jamshed.mp4 ″ type= ” video/mp4 ″ >\n    <source src=” jamshed.ogg ” type= ” video/ogg ” >\n    <track kind=” subtitles ” label= ” English ” src= ” jamshed_en.vtt ” srclang= ” en ” default></track>\n    <track kind=” subtitles ” label= ” Arabic ” src= ” jamshed_ar.vtt ” srclang= ” ar ” ></track>\n</video>\n```\n据源很有用。标签为诸如 video 元素之类的媒介规定外部文本轨道。 用于规定字幕文件或其他包含文本的文件，当媒介播放时，这些文件是可见的。\n\n###### 40.HTML5 中如何嵌入视频？\n>和音频类似，HTML5 支持 MP4 、 WebM 和 Ogg 格式的视频，下面是简单示例：\n```\n<video width=” 450 ″ height= ” 340 ″ controls>\n    <source src=” jamshed.mp4 ″ type= ” video/mp4 ″ >\n    Your browser does’ nt support video embedding feature.\n</video>\n```\n\n###### 4.HTML5 中如何嵌入音频？\n>HTML5 支持 MP3 、 Wav 和 Ogg 格式的音频，下面是在网页中嵌入音频的简单示例：\n```\n<audio controls>\n    <source src=” jamshed.mp3 ″ type= ” audio/mpeg ” >\n    Your browser does’ nt support audio embedding feature.\n</audio>\n```\n\n###### 42 .新的 HTML5 文档类型和字符集是？\n>HTML5 文档类型很简单：\n```\n<!doctype html>\n<!--HTML5 使用 UTF-8 编码示例-->\n<meta charset=” UTF-8 ″ >\n```\n\n###### 43.解释一下CSS的盒子模型？\n>回答一：\na、**标准的css盒子模型**：宽度=内容的宽度+边框的宽度+加上内边具的宽度\nb、网页设计中常听的属性名：内容(content)、填充(padding)、边框(border)、边界(margin)， CSS盒子模式都具备这些属性。\nc、这些属性我们可以把它转移到我们日常生活中的盒子（箱子）上来理解，日常生活中所见的盒子也就是能装东西的一种箱子，也具有这些属性，所以叫它盒子模式。CSS盒子模型就是在网页设计中经常用到的CSS技术所使用的一种思维模型。\n回答二：\n盒子模型也有人称为框模型，HTML中的多数元素都会在浏览器中生成一个矩形的区域，每个区域包含四个组成部分，从外向内依次是：外边距（Margin）、边框（Border）、内边距（Padding）和内容（Content），其实盒子模型有两种，分别是 ie 盒子模型和标准 w3c 盒子模型，加上了doctype声明，让所有浏览器都会采用标准 w3c 盒子模型去解释你的盒子。\n\n###### 44. 请你说说CSS选择器的类型有哪些，并举几个例子说明其用法？\n>类型：基础的选择器、组合选择器、属性选择器、伪类、伪元素\n\n###### 45.请你说说CSS有什么特殊性?（优先级、计算特殊值）\n>优先级\n(1)、同类型，同级别的样式后者先于前者\n(2))、ID > 类样式 > 标签 > \n(3)、内联>ID选择器>伪类>属性选择器>类选择器>标签选择器>通用选择器()>继承的样式\n(4)、具体 > 泛化的，特殊性即css优先级\n(5)、近的 > 远的 (内嵌样式 > 内部样式表 > 外联样式表)\n  **内嵌样式**：内嵌在元素中，<span style=\"color:red\">span</span>\n  **内部样式表**：在页面中的样式，写在<style></style>中的样式\n**外联样式表**：单独存在一个css文件中，通过link引入或import导入的样式\n(6)、!important 权重最高，比 inline style 还要高\n***\n计算特殊性值\nimportant > 内嵌 > ID > 类 > 标签 | 伪类 | 属性选择 > 伪对象 > 继承 > 通配符\n权重、特殊性计算法：\nCSS样式选择器分为4个等级，a、b、c、d\n(1)、如果样式是行内样式（通过Style=“”定义），那么a=1，1,0,0,0\n(2)、b为ID选择器的总数 0,1,0,0\n(3)、c为属性选择器，伪类选择器和class类选择器的数量。0,0,1,0\n(4)、d为标签、伪元素选择器的数量 0,0,0,1\n(5)、!important 权重最高，比 inline style 还要高\n比如结果为：1093比1100，按位比较，从左到右，只要一位高于则立即胜出，否则继续比较。\n\n###### 46.要动态改变层中内容可以使用的方法？\n>innerHTML，innerText","slug":"前端面试集（HTML-CSS）","published":1,"updated":"2017-09-22T06:49:17.283Z","_id":"cj7squ962000d94tuwrf7qwco","layout":"post","photos":[],"link":"","content":"<h6 id=\"1-浏览器页面有哪三层构成，分别是什么，作用是什么\"><a href=\"#1-浏览器页面有哪三层构成，分别是什么，作用是什么\" class=\"headerlink\" title=\"1. 浏览器页面有哪三层构成，分别是什么，作用是什么?\"></a>1. 浏览器页面有哪三层构成，分别是什么，作用是什么?</h6><blockquote>\n<p>构成：结构层、表示层、行为层<br>分别是：HTML、CSS、JavaScript<br>作用：HTML实现页面结构，CSS完成页面的表现与风格，JavaScript实现一些客户端的功能与业务。</p>\n</blockquote>\n<h5 id=\"2-HTML5的优点与缺点？\"><a href=\"#2-HTML5的优点与缺点？\" class=\"headerlink\" title=\"2.HTML5的优点与缺点？\"></a>2.HTML5的优点与缺点？</h5><blockquote>\n<p>优点：<br>a、网络标准统一、HTML5本身是由W3C推荐出来的。<br>b、多设备、跨平台<br>c、即时更新。<br>d、提高可用性和改进用户的友好体验；<br>e、有几个新的标签，这将有助于开发人员定义重要的内容；<br>f、可以给站点带来更多的多媒体元素(视频和音频)；<br>g、可以很好的替代Flash和Silverlight；<br>h、涉及到网站的抓取和索引的时候，对于SEO很友好；<br>i、被大量应用于移动应用程序和游戏。</p>\n<p>缺点：<br>a、安全：像之前Firefox4的web socket和透明代理的实现存在严重的安全问题，同时web storage、web socket 这样的功能很容易被黑客利用，来盗取用户的信息和资料。<br>b、完善性：许多特性各浏览器的支持程度也不一样。<br>c、技术门槛：HTML5简化开发者工作的同时代表了有许多新的属性和API需要开发者学习，像web worker、web socket、web storage 等新特性，后台甚至浏览器原理的知识，机遇的同时也是巨大的挑战<br>d、性能：某些平台上的引擎问题导致HTML5性能低下。<br>e、浏览器兼容性：最大缺点，IE9以下浏览器几乎全军覆没。</p>\n</blockquote>\n<h6 id=\"3-Doctype作用-严格模式与混杂模式如何区分？它们有何意义\"><a href=\"#3-Doctype作用-严格模式与混杂模式如何区分？它们有何意义\" class=\"headerlink\" title=\"3.Doctype作用? 严格模式与混杂模式如何区分？它们有何意义?\"></a>3.Doctype作用? 严格模式与混杂模式如何区分？它们有何意义?</h6><blockquote>\n<p>回答1：<br>（1）、 声明位于文档中的最前面，处于标签之前。告知浏览器的解析器，用什么文档类型 规范来解析这个文档。<br>（2）、严格模式的排版和JS 运作模式是以该浏览器支持的最高标准运行。<br>（3）、在混杂模式中，页面以宽松的向后兼容的方式显示。模拟老式浏览器的行为以防止站点无法工作。<br>（4）、DOCTYPE不存在或格式不正确会导致文档以混杂模式呈现。</p>\n<hr>\n<p>回答2：<br>doctype声明指出阅读程序应该用什么规则集来解释文档中的标记。在Web文档的情况下，“阅读程序”通常是浏览器或者校验器这样的一个程序，“规则”则是W3C所发布的一个文档类型定义（DTD）中包含的规则。<br>(1) 声明位于文档中的最前面的位置，处于标签之前。此标签可告知浏览器文档使用哪种 HTML 或 XHTML 规范。该标签可声明三种 DTD 类型，分别表示严格版本、过渡版本以及基于框架的HTML 文档。<br>(2)所谓的标准模式是指，浏览器按 W3C 标准解析执行代码；怪异模式则是使用浏览器自己的方式解析执行代码，因为不同浏览器解析执行的方式不一样，所以我们称之为怪异模式。 严格模式是浏览器根据web标准去解析页面，是一种要求严格的DTD，不允许使用任何表现层的语法，如<br>。严格模式的排版和JS 运作模式是以该浏览器支持的最高标准运行混杂模式则是一种向后兼容的解析方法，说的透明点就是可以实现IE5.5以下版本浏览器的渲染模式。<br>(3)浏览器解析时到底使用标准模式还是怪异模式，与你网页中的 DTD 声明直接相关， DTD 声明定义了标准文档的类型（标准模式解析）文档类型，会使浏览器使用相应的方式加载网页并显示，忽略 DTD 声明 ,将使网页进入怪异模式。</p>\n</blockquote>\n<h6 id=\"4-HTML5有哪些新特性、移除了哪些元素？\"><a href=\"#4-HTML5有哪些新特性、移除了哪些元素？\" class=\"headerlink\" title=\"4.HTML5有哪些新特性、移除了哪些元素？\"></a>4.HTML5有哪些新特性、移除了哪些元素？</h6><blockquote>\n<p>Html5 <strong>新增了 <code>27</code>个元素，废弃了<code>16</code>个元素</strong>，根据现有的标准规范，把 HTML5 的元素按优先级定义为结构性属性、级块性元素、行内语义性元素和交互性元素 4 大类。</p>\n<ol>\n<li><strong>结构性元素主要负责web上下文结构的定义</strong><br><code>section</code>：在 web 页面应用中，该元素也可以用于区域的章节描述。<br><code>header</code>：页面主体上的头部， header 元素往往在一对 body 元素中。<br><code>footer</code>：页面的底部（页脚），通常会标出网站的相关信息。<br><code>nav</code>：专门用于菜单导航、链接导航的元素，是 navigator 的缩写。<br><code>article</code>：用于表现一篇文章的主体内容，一般为文字集中显示的区域。</li>\n<li><strong>级块性元素主要完成web页面区域的划分，确保内容的有效分割</strong><br><code>aside</code>：用于表达注记、贴士、侧栏、摘要、插入的引用等作为补充主体的内容。<br><code>figure</code>：是对多个元素进行组合并展示的元素，通常与 ficaption 联合使用。<br><code>code</code>：表示一段代码块。<br><code>dialog</code>：用于表达人与人之间的对话，该元素包含 dt 和 dd 这两个组合元素， dt 用于表示说话者，而 dd 用来表示说话内容。<br>行内语义性元素主要完成web页面具体内容的引用和描述，是丰富内容展示的基础。<br><code>meter</code>：表示特定范围内的数值，可用于工资、数量、百分比等。<br><code>time</code>：表示时间值。<br><code>progress</code>：用来表示进度条，可通过对其 max 、 min 、 step 等属性进行控制，完成对进度的表示和监事。<br><code>video</code>：视频元素，用于支持和实现视频文件的直接播放，支持缓冲预载和多种视频媒体格式。<br><code>audio</code>：音频元素，用于支持和实现音频文件的直接播放，支持缓冲预载和多种音频媒体格式。<br>交互性元素主要用于功能性的内容表达，会有一定的内容和数据的关联，是各种事件的基础。<br><code>details</code>：用来表示一段具体的内容，但是内容默认可能不显示，通过某种手段（如单击）与 legend 交互才会显示出来。<br><code>datagrid</code>：用来控制客户端数据与显示，可以由动态脚本及时更新。<br><code>menu</code>：主要用于交互菜单（曾被废弃又被重新启用的元素）。<br><code>command</code>：用来处理命令按钮。</li>\n</ol>\n</blockquote>\n<h6 id=\"5-你做的网页在哪些流览器测试过-这些浏览器的内核分别是什么\"><a href=\"#5-你做的网页在哪些流览器测试过-这些浏览器的内核分别是什么\" class=\"headerlink\" title=\"5.你做的网页在哪些流览器测试过,这些浏览器的内核分别是什么?\"></a>5.你做的网页在哪些流览器测试过,这些浏览器的内核分别是什么?</h6><blockquote>\n<p>a、 IE: trident 内核<br>b、 Firefox: gecko 内核<br>c、 Safari: webkit 内核<br>d、 Opera: 以前是 presto 内核， Opera 现已改用 Google Chrome 的 Blink 内核<br>e、 Chrome:Blink( 基于 webkit ， Google 与 Opera Software 共同开发 )</p>\n</blockquote>\n<h6 id=\"6-每个HTML文件里开头都有个很重要的东西，Doctype，知道这是干什么的吗？\"><a href=\"#6-每个HTML文件里开头都有个很重要的东西，Doctype，知道这是干什么的吗？\" class=\"headerlink\" title=\"6. 每个HTML文件里开头都有个很重要的东西，Doctype，知道这是干什么的吗？\"></a>6. 每个HTML文件里开头都有个很重要的东西，Doctype，知道这是干什么的吗？</h6><blockquote>\n<p>声明位于文档中的最前面的位置，处于标签之前。此标签可告知浏览器文档使用哪种 HTML 或 XHTML 规范。（<strong>重点：告诉浏览器按照何种规范解析页面</strong>）</p>\n</blockquote>\n<h6 id=\"7-说说你对HTML5认识-（是什么-为什么）\"><a href=\"#7-说说你对HTML5认识-（是什么-为什么）\" class=\"headerlink\" title=\"7.说说你对HTML5认识?（是什么,为什么）\"></a>7.说说你对HTML5认识?（是什么,为什么）</h6><blockquote>\n<p><strong> 是什么：</strong><br>HTML5指的是包括 HTML 、 CSS 和 JavaScript 在内的一套技术组合。它希望能够减少网页浏览器对于需要插件的丰富性网络应用服务（ Plug-in-Based Rich Internet Application ， RIA ），例如： AdobeFlash 、 Microsoft Silverlight 与 Oracle JavaFX 的需求，并且提供更多能有效加强网络应用的标准集。 HTML5 是 HTML 最新版本， 2014 年 10 月由万维网联盟（ W3C ）完成标准制定。目标是替换 1999 年所制定的 HTML 4.01 和 XHTML 1.0 标准，以期能在互联网应用迅速发展的时候，使网络标准达到匹配当代的网络需求。</p>\n<hr>\n<p><strong>为什么:</strong><br>HTML4陈旧不能满足日益发展的互联网需要，特别是移动互联网。为了增强浏览器功能 Flash 被广泛使用，但安全与稳定堪忧，不适合在移动端使用（耗电、触摸、不开放）。<br>HTML5增强了浏览器的原生功能，符合 HTML5 规范的浏览器功能将更加强大，减少了 Web 应用对插件的依赖，让用户体验更好，让开发更加方便，另外 W3C 从推出 HTML4.0 到 5.0 之间共经历了 17 年， HTML 的变化很小，这并不符合一个好产品的演进规则。</p>\n</blockquote>\n<h6 id=\"8-对WEB标准以及W3C的理解与认识\"><a href=\"#8-对WEB标准以及W3C的理解与认识\" class=\"headerlink\" title=\"8.对WEB标准以及W3C的理解与认识?\"></a>8.对WEB标准以及W3C的理解与认识?</h6><blockquote>\n<ol>\n<li>标签闭合、标签小写、不乱嵌套、提高搜索机器人搜索几率、使用外链css和 js 脚本、结构行为表现的分离，</li>\n<li>文件下载与页面速度更快、内容能被更多的用户所访问、内容能被更广泛的设备所访问、更少的代码和组件，</li>\n<li>容易维护、改版方便，不需要变动页面内容、提供打印版本而不需要复制内容、提高网站易用性。</li>\n</ol>\n</blockquote>\n<h6 id=\"9-HTML5行内元素有哪些-块级元素有哪些-空元素有哪些\"><a href=\"#9-HTML5行内元素有哪些-块级元素有哪些-空元素有哪些\" class=\"headerlink\" title=\"9.HTML5行内元素有哪些,块级元素有哪些, 空元素有哪些?\"></a>9.HTML5行内元素有哪些,块级元素有哪些, 空元素有哪些?</h6><blockquote>\n<p><strong>行内元素</strong></p>\n<ul>\n<li>a - 锚点</li>\n<li>abbr - 缩写</li>\n<li>acronym - 首字</li>\n<li>b - 粗体 ( 不推荐 )</li>\n<li>bdo - bidi override</li>\n<li>big - 大字体</li>\n<li>br - 换行</li>\n<li>cite - 引用</li>\n<li>code - 计算机代码 ( 在引用源码的时候需要 )</li>\n<li>dfn - 定义字段</li>\n<li>em - 强调</li>\n<li>font - 字体设定 ( 不推荐 )</li>\n<li>i - 斜体</li>\n<li>img - 图片</li>\n<li>input - 输入框</li>\n<li>kbd - 定义键盘文本</li>\n<li>label - 表格标签</li>\n<li>q - 短引用</li>\n<li>s - 中划线 ( 不推荐 )</li>\n<li>samp - 定义范例计算机代码</li>\n<li>select - 项目选择</li>\n<li>small - 小字体文本</li>\n<li>span - 常用内联容器，定义文本内区块</li>\n<li>strike - 中划线</li>\n<li>strong - 粗体强调</li>\n<li>sub - 下标</li>\n<li>sup - 上标</li>\n<li>textarea - 多行文本输入框</li>\n<li>tt - 电传文本</li>\n<li>u - 下划线</li>\n<li>var - 定义变量</li>\n</ul>\n<hr>\n<p><strong>块元素 (block element)</strong></p>\n<ul>\n<li>address - 地址</li>\n<li>blockquote - 块引用</li>\n<li>center - 举中对齐块</li>\n<li>dir - 目录列表</li>\n<li>div - 常用块级容易，也是 css layout 的主要标签</li>\n<li>dl - 定义列表</li>\n<li>fieldset - form控制组</li>\n<li>form - 交互表单</li>\n<li>h3 - 大标题</li>\n<li>h4 - 副标题</li>\n<li>h3 - 3级标题</li>\n<li>h4 - 4级标题</li>\n<li>h5 - 5级标题</li>\n<li>h6 - 6级标题</li>\n<li>hr - 水平分隔线</li>\n<li>isindex - input prompt</li>\n<li>menu - 菜单列表</li>\n<li>noframes - frames可选内容，（对于不支持 frame 的浏览器显示此区块内容</li>\n<li>noscript - ）可选脚本内容（对于不支持 script 的浏览器显示此内容）</li>\n<li>ol - 排序表单</li>\n<li>p - 段落</li>\n<li>pre - 格式化文本</li>\n<li>table - 表格</li>\n<li>ul - 非排序列表<br>可变元素<br>可变元素为根据上下文语境决定该元素为块元素或者内联元素。</li>\n<li>applet - java applet</li>\n<li>button - 按钮</li>\n<li>del - 删除文本</li>\n<li>iframe - inline frame</li>\n<li>ins - 插入的文本</li>\n<li>map - 图片区块 (map)</li>\n<li>object - object对象</li>\n<li>script - 客户端脚本</li>\n</ul>\n<hr>\n<p><strong>空元素 ( 在 HTML[1] 元素中，没有内容的 HTML 元素被称为空元素 )</strong></p>\n<ul>\n<li><code>br</code></li>\n<li><code>hr</code></li>\n<li><code>input</code></li>\n<li><code>img</code></li>\n<li><code>link</code> </li>\n<li><code>meta</code></li>\n</ul>\n</blockquote>\n<h6 id=\"10-什么是WebGL-它有什么优点\"><a href=\"#10-什么是WebGL-它有什么优点\" class=\"headerlink\" title=\"10.什么是WebGL,它有什么优点?\"></a>10.什么是WebGL,它有什么优点?</h6><blockquote>\n<p>WebGL（全写 Web Graphics Library ）是一种 3D 绘图标准，这种绘图技术标准允许把 JavaScript 和 OpenGL ES 2.0 结合在一起，通过增加OpenGL ES 2.0 的一个 JavaScript 绑定， WebGL 可以为 HTML5 Canvas 提供硬件 3D 加速渲染，这样 Web 开发人员就可以借助系统显卡来在浏览器里更流畅地展示 3D 场景和模型了，还能创建复杂的导航和数据视觉化。显然， WebGL 技术标准免去了开发网页专用渲染插件的麻烦，可被用于创建具有复杂 3D 结构的网站页面，甚至可以用来设计 3D 网页游戏等等。</p>\n<hr>\n<p>WebGL完美地解决了现有的 Web 交互式三维动画的两个问题：<br>第一，它通过HTML脚本本身实现 Web 交互式三维动画的制作，无需任何浏览器插件支持 ;<br>第二，它利用底层的图形硬件加速功能进行的图形渲染，是通过统一的、标准的、跨平台的OpenGL接口实现的。<br>通俗说WebGL中 canvas 绘图中的 3D 版本。因为原生的 WebGL 很复杂，我们经常会使用一些三方的库，如 three.js 等，这些库多数用于HTML5 游戏开发。</p>\n</blockquote>\n<h6 id=\"11-请你描述一下-cookies，sessionStorage-和-localStorage-的区别\"><a href=\"#11-请你描述一下-cookies，sessionStorage-和-localStorage-的区别\" class=\"headerlink\" title=\"11.请你描述一下 cookies，sessionStorage 和 localStorage 的区别?\"></a>11.请你描述一下 cookies，sessionStorage 和 localStorage 的区别?</h6><blockquote>\n<p>sessionStorage 和 localStorage 是 HTML5 Web Storage API 提供的，可以方便的在 web 请求之间保存数据。有了本地数据，就可以避免数据在浏览器和服务器间不必要地来回传递。<br>sessionStorage、 localStorage 、 cookie 都是在浏览器端存储的数据，其中 sessionStorage 的概念很特别，引入了一个“浏览器窗口”的概念。</p>\n<ol>\n<li><strong>sessionStorage</strong> 是在<strong>同源的同窗口（或 tab ）</strong>中，始终存在的数据。也就是说只要这个浏览器窗口没有关闭，即使刷新页面或进入同源另一页面，数据仍然存在。<strong>关闭窗口后， sessionStorage 即被销毁</strong>。同时“独立”打开的不同窗口，即使是同一页面， sessionStorage 对象也是不同的<br><strong>cookies会发送到服务器端。其余两个不会。</strong><br>Microsoft 指出 Internet Explorer 8 增加 cookie 限制为每个域名 50 个，但 IE7 似乎也允许每个域名 50 个 cookie 。 Firefox 每个域名 cookie 限制为 50 个。 Opera 每个域名 cookie 限制为 30 个。 Firefox 和 Safari 允许 cookie 多达 4097 个字节，包括名（ name ）、值（ value ）和等号。 Opera 许 cookie 多达 4096 个字节，包括：名（ name ）、值（ value ）和等号。 Internet Explorer 允许 cookie 多达 4095 个字节，包括：名（ name ）、值（ value ）和等号。</li>\n</ol>\n<hr>\n<p>区别：<br><strong>Cookie</strong><br>每个域名存储量比较小（各浏览器不同，大致 4K ）<br>所有域名的存储量有限制（各浏览器不同，大致 4K ）<br>有个数限制（各浏览器不同）<br>会随请求发送到服务器<br><strong>LocalStorage</strong><br>永久存储<br>单个域名存储量比较大（推荐 5MB ，各浏览器不同）<br>总体数量无限制<br><strong>SessionStorage</strong><br>只在 Session 内有效<br>存储量更大（推荐没有限制，但是实际上各浏览器也不同）</p>\n</blockquote>\n<h6 id=\"12-说说你对HTML语义化的理解\"><a href=\"#12-说说你对HTML语义化的理解\" class=\"headerlink\" title=\"12.说说你对HTML语义化的理解?\"></a>12.说说你对HTML语义化的理解?</h6><blockquote>\n<p>(1) 什么是 HTML 语义化？<br>  根据内容的结构化（内容语义化），选择合适的标签（代码语义化）便于开发者阅读和写出更优雅的代码的同时让浏览器的爬虫和机器很好地解析。<br>      <strong>基本上都是围绕着几个主要的标签，像标题（ H1~H6 ）、列表（ li ）、强调（ strong em ）等等</strong></p>\n<hr>\n<p>(2) 为什么要语义化？</p>\n<ol>\n<li>为了在没有CSS的情况下，页面也能呈现出很好地内容结构、代码结构 : 为了裸奔时好看；</li>\n<li>用户体验：例如title、 alt 用于解释名词或解释图片信息、 label 标签的活用；</li>\n<li>有利于SEO：和搜索引擎建立良好沟通，有助于爬虫抓取更多的有效信息：爬虫依赖于标签来确定上下文和各个关键字的权重；</li>\n<li>方便其他设备解析（如屏幕阅读器、盲人阅读器、移动设备）以意义的方式来渲染网页；</li>\n<li>便于团队开发和维护，语义化更具可读性，是下一步吧网页的重要动向，遵循W3C标准的团队都遵循这个标准，可以减少差异化。</li>\n</ol>\n<hr>\n<p>(3) 语义化标签</p>\n<p><header></header></p>\n<p><footer></footer></p>\n<p><nav></nav></p>\n<p><section></section></p>\n<p><article></article> SM:用来在页面中表示一套结构完整且独立的内容部分</p>\n<p><aslde> SM:主题的附属信息 ( 用途很广，主要就是一个附属内容 ) ，如果 article 里面为一篇文章的话，那么文章的作者以及信息内容就是这篇文章的附属内容了</aslde></p>\n<p><figure></figure>SM:媒体元素，比如一些视频，图片啊等等</p>\n<p><datalist></datalist>SM:选项列表，与 input 元素配合使用，来定义 input 可能的值</p>\n<p><details></details>SM:用于描述文档或者文档某个部分的细节 ~ 默认属性为 open~<br>ps:配合 summary 一起使用</p>\n</blockquote>\n<h6 id=\"13-link和-import的区别\"><a href=\"#13-link和-import的区别\" class=\"headerlink\" title=\"13.link和@import的区别?\"></a>13.link和@import的区别?</h6><blockquote>\n<pre><code>&lt;link rel=&#39;stylesheet&#39; rev=&#39;stylesheet&#39; href=&#39;CSS文件 &#39; type=&#39;text/css&#39; media=&#39;all&#39; /&gt;\n</code></pre><pre><code>&lt;style type=&#39;text/css&#39; media=&#39;screen&#39;&gt;\n    @import url(&#39;CSS文件 &#39;);\n&lt;/style&gt;\n</code></pre><hr>\n<p>两者都是外部引用CSS的方式，但是存在一定的区别：</p>\n<ul>\n<li><code>link</code> 是 XHTML 标签，除了加载 <code>CSS</code> 外，还可以定义<code>RSS</code> 等其他事务； <code>@import</code>属于 CSS 范畴，只能加载 CSS 。</li>\n<li><code>link</code> 引用 CSS 时，在页面载入时同时加载；<code>@import</code>需要页面网页完全载入以后加载。</li>\n<li><code>link</code> 是 XHTML 标签，无兼容问题； <code>@import</code> 是在 CSS2.1 提出的，低版本的浏览器不支持。</li>\n<li><code>link</code> 支持使用 Javascript 控制 DOM 去改变样式；而 <code>@import</code> 不支持。</li>\n</ul>\n</blockquote>\n<h6 id=\"14-说说你对SVG理解\"><a href=\"#14-说说你对SVG理解\" class=\"headerlink\" title=\"14.说说你对SVG理解?\"></a>14.说说你对SVG理解?</h6><blockquote>\n<p><code>SVG可缩放矢量图形（ Scalable Vector Graphics ）</code>是基于可扩展标记语言（ XML ），用于描述二维矢量图形的一种图形格式。 SVG 是W3C(‘World Wide Web ConSortium’ 即 ‘ 国际互联网标准组织 ‘) 在 2000 年 8 月制定的一种新的<code>二维矢量图形格式</code>，也是规范中的网络矢量图形标准。 SVG 严格遵从 XML 语法，并用文本格式的描述性语言来描述图像内容，因此是一种和图像分辨率无关的矢量图形格式。 SVG 于 2003 年 1 月14 日成为 W3C 推荐标准。</p>\n<hr>\n<p>特点：</p>\n<ol>\n<li><strong>任意放缩</strong>。用户可以任意缩放图像显示，而不会破坏图像的清晰度、细节等。</li>\n<li><strong>文本独立</strong>。SVG图像中的文字独立于图像，文字保留可编辑和可搜寻的状态。也不会再有字体的限制，用户系统即使没有安装某一字体，也会看到和他们制作时完全相同的画面。</li>\n<li><strong>较小文件</strong>。总体来讲，SVG文件比那些 GIF 和 JPEG 格式的文件要小很多，因而下载也很快。</li>\n<li><strong>超强显示效果</strong>。SVG图像在屏幕上总是边缘清晰，它的清晰度适合任何屏幕分辨率和打印分辨率。</li>\n<li><strong>超级颜色控制</strong>。SVG图像提供一个 1600 万种颜色的调色板，支持 ICC 颜色描述文件标准、 RGB 、线 X 填充、渐变和蒙版。</li>\n<li><strong>交互 X 和智能化</strong>。 SVG 面临的主要问题一个是如何和已经占有重要市场份额的矢量图形格式 Flash 竞争的问题，另一个问题就是 SVG 的本地运行环境下的厂家支持程度。</li>\n<li><strong>浏览器支持</strong><blockquote>\n<p>Internet Explorer9，火狐，谷歌 Chrome ， Opera 和 Safari 都支持 SVG 。<br>IE8和早期版本都需要一个插件 - 如 Adobe SVG 浏览器，这是免费提供的。</p>\n</blockquote>\n</li>\n</ol>\n</blockquote>\n<h6 id=\"15-HTML全局属性-global-attribute-有哪些\"><a href=\"#15-HTML全局属性-global-attribute-有哪些\" class=\"headerlink\" title=\"15.HTML全局属性(global attribute)有哪些?\"></a>15.HTML全局属性(global attribute)有哪些?</h6><blockquote>\n<p>MDN: html global attribute或者W3C HTML global-attributes accesskey:设置快捷键，提供快速访问元素如aaa在windows下的firefox中按alt + shift + a可激活元素 class:为元素设置类标识，多个类名用空格分开，CSS和javascript可通过class属性获取元素 contenteditable: 指定元素内容是否可编辑 contextmenu: 自定义鼠标右键弹出菜单内容 data-*: 为元素增加自定义属性 dir: 设置元素文本方向 draggable: 设置元素是否可拖拽 dropzone: 设置元素拖放类型： copy, move, link hidden: 表示一个元素是否与文档。样式上会导致元素不显示，但是不能用这个属性实现样式效果 id: 元素id，文档内唯一 lang: 元素内容的的语言 spellcheck: 是否启动拼写和语法检查 style: 行内css样式 tabindex: 设置元素可以获得焦点，通过tab可以导航 title: 元素相关的建议信息 translate: 元素和子孙节点内容是否需要本地化</p>\n</blockquote>\n<h6 id=\"16-说说超链接target属性的取值和作用？\"><a href=\"#16-说说超链接target属性的取值和作用？\" class=\"headerlink\" title=\"16.说说超链接target属性的取值和作用？\"></a>16.说说超链接target属性的取值和作用？</h6><blockquote>\n<p><code>target</code>这个属性指定所链接的页面在浏览器窗口中的打开方式。<br>它的参数值主要有：<br>a、<code>_blank</code> ：在新浏览器窗口中打开链接文件<br>b、<code>_parent</code> ：将链接的文件载入含有该链接框架的父框架集或父窗口中。如果含有该链接的框架不是嵌套的，则在浏览器全屏窗口中载入链接的文件，就象 _self 参数。<br>c、 <code>_self</code> ：在同一框架或窗口中打开所链接的文档。此参数为默认值，通常不用指定。<br>d、<code>_top</code> ：在当前的整个浏览器窗口中打开所链接的文档，因而会删除所有框架。</p>\n</blockquote>\n<h6 id=\"17-data-属性的作用是什么？\"><a href=\"#17-data-属性的作用是什么？\" class=\"headerlink\" title=\"17.data-属性的作用是什么？\"></a>17.data-属性的作用是什么？</h6><blockquote>\n<p><code>data-xxx</code>为前端开发者提供<strong>自定义的属性</strong>，这些属性集可以通过对象的 <code>dataset</code>属性获取，不支持该属性的浏览器可以通过 <code>getAttribute</code>方法获取。</p>\n<p>需要注意的是：<code>data-xxx</code>之后的以连字符分割的多个单词组成的属性，获取的时候使用<strong>驼峰风格</strong>。并不是所有的浏览器都支持<code>.dataset 属性</code>，测试的浏览器中只有 Chrome 和 Opera 支持。<br>即：当没有合适的属性和元素时，自定义的 data 属性是能够存储页面或 App 的私有的自定义数据。</p>\n</blockquote>\n<h6 id=\"18-介绍一下你对浏览器内核的理解？\"><a href=\"#18-介绍一下你对浏览器内核的理解？\" class=\"headerlink\" title=\"18.介绍一下你对浏览器内核的理解？\"></a>18.介绍一下你对浏览器内核的理解？</h6><blockquote>\n<p>浏览器内核主要分成两部分：<strong><code>渲染引擎(layout engineer或 Rendering Engine)</code></strong> 和<strong> <code>JS 引擎</code></strong>。<br><strong>渲染引擎</strong>：负责取得网页的内容（HTML、 XML 、图像等等）、整理讯息（例如加载 CSS 等），以及计算网页的显示方式，然后会输出至显示器或打印机。浏览器的内核的不同对于网页的语法解释会有不同，所以渲染的效果也不相同。所有网页浏览器、电子邮件客户端以及其它需要编辑、显示网络内容的应用程序都需要内核。<br><strong>JS引擎</strong>：解析和执行 javascript 来实现网页的动态效果。</p>\n<hr>\n<p>最开始渲染引擎和JS引擎并没有区分的很明确，后来 JS 引擎越来越独立，内核就倾向于只指渲染引擎。</p>\n</blockquote>\n<h6 id=\"19-常见的浏览器内核有哪些？\"><a href=\"#19-常见的浏览器内核有哪些？\" class=\"headerlink\" title=\"19.常见的浏览器内核有哪些？\"></a>19.常见的浏览器内核有哪些？</h6><blockquote>\n<ol>\n<li><code>Trident内核</code>： <code>IE</code>,<code>MaxThon</code>,<code>TT</code>,<code>The World</code>,<code>360</code>, <code>搜狗</code>等。[ 又称 MSHTML]</li>\n<li><code>Gecko内核</code>： <code>Netscape6</code> 及以上版本，<code>FF</code>,<code>MozillaSuite/SeaMonkey</code>等</li>\n<li><code>Presto内核</code>： <code>Opera7</code>及以上。[<code>Opera</code> 内核原为： <code>Presto</code> ，现为：<code>Blink</code>;]</li>\n<li><code>Webkit内核</code>： <code>Safari</code>,<code>Chrome</code> 等。[ <code>Chrome</code> 的： <code>Blink （ WebKit 的分支）</code> ]</li>\n</ol>\n</blockquote>\n<h6 id=\"20-iframe有那些缺点？\"><a href=\"#20-iframe有那些缺点？\" class=\"headerlink\" title=\"20.iframe有那些缺点？\"></a>20.iframe有那些缺点？</h6><blockquote>\n<ol>\n<li>iframe会阻塞主页面的 Onload 事件； </li>\n<li>搜索引擎的检索程序无法解读这种页面，不利于 SEO;</li>\n<li>iframe和主页面共享连接池，而浏览器对相同域的连接有限制，所以会影响页面的并行加载。</li>\n</ol>\n<hr>\n<p>使用iframe之前需要考虑这两个缺点。如果需要使用 iframe，最好是<strong>通过 javascript动态给iframe添加 src 属性值</strong>，这样可以绕开以上两个问题。</p>\n</blockquote>\n<h6 id=\"21-Label的作用是什么，是怎么用的？\"><a href=\"#21-Label的作用是什么，是怎么用的？\" class=\"headerlink\" title=\"21.Label的作用是什么，是怎么用的？\"></a>21.Label的作用是什么，是怎么用的？</h6><blockquote>\n<p><code>label</code>标签来<em>定义表单控制间的关系</em> , 当用户选择该标签时，浏览器会自动将焦点转到和标签相关的表单控件上。</p>\n<pre><code>&lt;label for=&#39;Name&#39;&gt;Number:&lt;/label&gt;\n&lt;input type=“ text “ name=&#39;Name&#39; id=&#39;Name&#39;/&gt;\n&lt;label&gt;Date:&lt;input type=&#39;text&#39; name=&#39;B&#39;/&gt;&lt;/label&gt;\n</code></pre></blockquote>\n<h6 id=\"22-如何实现浏览器内多个标签页之间的通信\"><a href=\"#22-如何实现浏览器内多个标签页之间的通信\" class=\"headerlink\" title=\"22.如何实现浏览器内多个标签页之间的通信?\"></a>22.如何实现浏览器内多个标签页之间的通信?</h6><blockquote>\n<p><code>WebSocket</code>、 <code>SharedWorker</code>；<br>也可以调用<code>localstorge</code>、 <code>cookies</code> 等本地存储方式；<br><code>localstorge</code> 另一个浏览上下文里被添加、修改或删除时，它都会触发一个事件，我们通过监听事件，控制它的值来进行页面信息通信；</p>\n<hr>\n<p>注意quirks： Safari 在无痕模式下设置 localstorge 值时会抛出 QuotaExceededError 的异常；</p>\n</blockquote>\n<h6 id=\"23-如何在页面上实现一个圆形的可点击区域？\"><a href=\"#23-如何在页面上实现一个圆形的可点击区域？\" class=\"headerlink\" title=\"23.如何在页面上实现一个圆形的可点击区域？\"></a>23.如何在页面上实现一个圆形的可点击区域？</h6><blockquote>\n<p>a、 map+area(锚点图) 或者 svg<br>b、   <code>border-radius</code><br>c、纯 js 实现 需要求一个点在不在圆上简单算法、获取鼠标坐标等等</p>\n</blockquote>\n<h5 id=\"24-title与h3的区别、b与strong的区别、i与em的区别？\"><a href=\"#24-title与h3的区别、b与strong的区别、i与em的区别？\" class=\"headerlink\" title=\"24.title与h3的区别、b与strong的区别、i与em的区别？\"></a>24.title与h3的区别、b与strong的区别、i与em的区别？</h5><blockquote>\n<ul>\n<li><code>title</code>属性没有明确意义只表示是个标题， <code>H1</code> 则表示层次明确的标题，对页面信息的抓取也有很大的影响；</li>\n<li><code>strong</code>是标明重点内容，有语气加强的含义，使用阅读设备阅读网络时： 会重读，而 <code>&lt;B&gt;</code>是展示强调内容。</li>\n<li><code>i</code>内容展示为斜体， <code>em</code> 表示强调的文本；</li>\n</ul>\n<hr>\n<ul>\n<li>Physical Style Elements – 自然样式标签<br>b, i, u, s, pre</li>\n<li>Semantic Style Elements – 语义样式标签<br>strong, em, ins, del, code<br><em>应该准确使用语义样式标签, 但不能滥用 , 如果不能确定时首选使用自然样式标签。</em></li>\n</ul>\n</blockquote>\n<h6 id=\"25-实现不使用-border-画出1px高的线，在不同浏览器的标准模式与怪异模式下都能保持一致的效果？\"><a href=\"#25-实现不使用-border-画出1px高的线，在不同浏览器的标准模式与怪异模式下都能保持一致的效果？\" class=\"headerlink\" title=\"25.实现不使用 border 画出1px高的线，在不同浏览器的标准模式与怪异模式下都能保持一致的效果？\"></a>25.实现不使用 border 画出1px高的线，在不同浏览器的标准模式与怪异模式下都能保持一致的效果？</h6><blockquote>\n<p><code>&lt;div style=&#39;height:1px;overflow:hidden;background:red&#39;&gt;&lt;/div&gt;</code></p>\n</blockquote>\n<h6 id=\"26-HTML5标签的作用-用途\"><a href=\"#26-HTML5标签的作用-用途\" class=\"headerlink\" title=\"26.HTML5标签的作用?(用途)\"></a>26.HTML5标签的作用?(用途)</h6><blockquote>\n<p>a、使Web页面的内容更加有序和规范<br>b、使搜索引擎更加容易按照HTML5规则识别出有效的内容<br>c、使Web页面更接近于一种数据字段和表</p>\n</blockquote>\n<h6 id=\"27-简述一下src与href的区别？\"><a href=\"#27-简述一下src与href的区别？\" class=\"headerlink\" title=\"27.简述一下src与href的区别？\"></a>27.简述一下src与href的区别？</h6><blockquote>\n<p>src用于替换当前元素， href 用于在当前文档和引用资源之间确立联系。<br>src是 source 的缩写，指向外部资源的位置，指向的内容将会嵌入到文档中当前标签所在位置；在请求 src 资源时会将其指向的资源下载并应用到文档内，例如 js 脚本， img 图片和 frame 等元素。<br><code>&lt;script src =&#39;js.js&#39;&gt;&lt;/script&gt;</code><br>当浏览器解析到该元素时，会暂停其他资源的下载和处理，直到将该资源加载、编译、执行完毕，图片和框架等元素也如此，类似于将所指向资源嵌入当前标签内。这也是为什么将js脚本放在底部而不是头部。<br>href是 Hypertext Reference 的缩写，指向网络资源所在位置，建立和当前元素（锚点）或当前文档（链接）之间的链接，如果我们在文档中添加<br><code>&lt;link href=&#39;common.css&#39; rel=&#39;stylesheet&#39;/&gt;</code>，那么浏览器会识别该文档为css文件，就会并行下载资源并且不会停止对当前文档的处理。这也是为什么建议使用 link 方式来加载 css ，而不是使用@import 方式。</p>\n</blockquote>\n<h6 id=\"28-谈谈你对canvas的理解？\"><a href=\"#28-谈谈你对canvas的理解？\" class=\"headerlink\" title=\"28.谈谈你对canvas的理解？\"></a>28.谈谈你对canvas的理解？</h6><blockquote>\n<p>canvas是HTML5中新增一个HTML5标签与操作canvas的javascript API，它可以实现在网页中完成动态的2D与3D图像技术。标记和 SVG以及 VML 之间的一个重要的不同是，有一个基于 JavaScript 的绘图 API，而 SVG 和 VML 使用一个 XML 文档来描述绘图。SVG 绘图很容易编辑与生成，但功能明显要弱一些。 canvas可以完成动画、游戏、图表、图像处理等原来需要Flash完成的一些功能。</p>\n</blockquote>\n<h6 id=\"29-WebSocket与消息推送？\"><a href=\"#29-WebSocket与消息推送？\" class=\"headerlink\" title=\"29.WebSocket与消息推送？\"></a>29.WebSocket与消息推送？</h6><blockquote>\n<p>B/S架构的系统多使用HTTP协议，<br>HTTP协议的特点： 1 无状态协议 2 用于通过 Internet 发送请求消息和响应消息 3 使用端口接收和发送消息，默认为80端口 底层通信还是使用Socket完成。<br>HTTP协议决定了服务器与客户端之间的连接方式，无法直接实现消息推送（ F5 已坏） , 一些变相的解决办法：<br>双向通信与消息推送<br>轮询：客户端定时向服务器发送Ajax请求，服务器接到请求后马上返回响应信息并关闭连接。<br>优点：后端程序编写比较容易。<br>缺点：请求中有大半是无用，浪费带宽和服务器资源。<br>实例：适于小型应用。<br>长轮询：客户端向服务器发送Ajax请求，服务器接到请求后 hold 住连接，直到有新消息才返回响应信息并关闭连接，客户端处理完响应信息后再向服务器发送新的请求。<br>优点：在无消息的情况下不会频繁的请求，耗费资小。<br>缺点：服务器hold连接会消耗资源，返回数据顺序无保证，难于管理维护。 Comet 异步的 ashx ，<br>实例：WebQQ、 Hi 网页版、 Facebook IM 。<br>长连接：在页面里嵌入一个隐蔵iframe，将这个隐蔵 iframe 的 src 属性设为对一个长连接的请求或是采用 xhr 请求，服务器端就能源源不断地往客户端输入数据。<br>优点：消息即时到达，不发无用请求；管理起来也相对便。<br>缺点：服务器维护一个长连接会增加开销。<br>实例：Gmail聊天<br>Flash Socket：在页面中内嵌入一个使用了 Socket 类的 Flash 程序 JavaScript 通过调用此 Flash 程序提供的 Socket 接口与服务器端的 Socket 接口进行通信， JavaScript 在收到服务器端传送的信息后控制页面的显示。<br>优点：实现真正的即时通信，而不是伪即时。<br>缺点：客户端必须安装Flash插件；非 HTTP 协议，无法自动穿越防火墙。<br>实例：网络互动游戏。<br>Websocket:<br>WebSocket是 HTML5 开始提供的一种浏览器与服务器间进行全双工通讯的网络技术。依靠这种技术可以实现客户端和服务器端的长连接，双向实时通信。<br>特点:<br>a、事件驱动<br>b、异步<br>c、使用 ws 或者 wss 协议的客户端 socket<br>d、能够实现真正意义上的推送功能<br>缺点：少部分浏览器不支持，浏览器支持的程度与方式有区别。</p>\n</blockquote>\n<h6 id=\"30-img的title和alt有什么区别？\"><a href=\"#30-img的title和alt有什么区别？\" class=\"headerlink\" title=\"30.img的title和alt有什么区别？\"></a>30.img的title和alt有什么区别？</h6><blockquote>\n<p><code>alt</code> 用于图片无法加载时显示<br><code>title</code> 为该属性提供信息，通常当鼠标滑动到元素上的时候显示</p>\n</blockquote>\n<h6 id=\"31-表单的基本组成部分有哪些，表单的主要用途是什么？\"><a href=\"#31-表单的基本组成部分有哪些，表单的主要用途是什么？\" class=\"headerlink\" title=\"31.表单的基本组成部分有哪些，表单的主要用途是什么？\"></a>31.表单的基本组成部分有哪些，表单的主要用途是什么？</h6><blockquote>\n<p>组成：表单标签、表单域、表单按钮</p>\n<p>a、表单标签：这里面包含了处理表单数据所用 CGI 程序的 URL, 以及数据提交到服务器的方法。<br>b、表单域：包含了文本框、密码框、隐藏域、多行文本框、复选框、单选框、下拉选择框、和文件上传框等。<br>c、表单按钮：包括提交按钮，复位按钮和一般按钮；用于将数据传送到服务器上的 CGI 脚本或者取消输入，还可以用表单按钮来控制其他定义了处理脚本的处理工作。<br>主要用途：表单在网页中主要负责数据采集的功能，和向服务器传送数据。</p>\n</blockquote>\n<h6 id=\"32-表单提交中Get和Post方式的区别？\"><a href=\"#32-表单提交中Get和Post方式的区别？\" class=\"headerlink\" title=\"32.表单提交中Get和Post方式的区别？\"></a>32.表单提交中Get和Post方式的区别？</h6><blockquote>\n<ol>\n<li>get 是从服务器上获取数据， post 是向服务器传送数据。</li>\n<li>get 是把参数数据队列加到提交表单的 ACTION 属性所指的 URL 中，值和表单内各个字段一一对应，在 URL 中可以看到。 post 是通过 HTTP post 机制，将表单内各个字段与其内容放置在 HTML HEADER 内一起传送到 ACTION 属性所指的 URL 地址 , 用户看不到这个过程。</li>\n<li>对于 get 方式，服务器端用 Request.QueryString 获取变量的值，对于 post 方式，服务器端用 Request.Form 获取提交的数据。</li>\n<li>get 传送的数据量较小，不能大于 2KB 。 post 传送的数据量较大，一般被默认为不受限制。但理论上， IIS4 中最大量为 80KB ， IIS5 中为100KB 。</li>\n<li>get 安全性非常低， post 安全性较高。</li>\n</ol>\n</blockquote>\n<h6 id=\"33-HTML5-有哪些新增的表单元素？\"><a href=\"#33-HTML5-有哪些新增的表单元素？\" class=\"headerlink\" title=\"33.HTML5 有哪些新增的表单元素？\"></a>33.HTML5 有哪些新增的表单元素？</h6><blockquote>\n<p>HTML5 新增了很多表单元素让开发者构建更优秀的 Web 应用程序。<br>• datalist<br>• datetime<br>• output<br>• keygen<br>• date<br>• month<br>• week<br>• time<br>• color<br>• number<br>• range<br>• email<br>• Url</p>\n</blockquote>\n<h6 id=\"34-HTML5-废弃了哪些-HTML4-标签？\"><a href=\"#34-HTML5-废弃了哪些-HTML4-标签？\" class=\"headerlink\" title=\"34.HTML5 废弃了哪些 HTML4 标签？\"></a>34.HTML5 废弃了哪些 HTML4 标签？</h6><blockquote>\n<p>HTML5 废弃了一些过时的，不合理的HTML 标签：<br>• frame<br>• frameset<br>• noframe<br>• applet<br>• big<br>• center<br>• basefront</p>\n</blockquote>\n<h6 id=\"35-HTML5-标准提供了哪些新的-API？\"><a href=\"#35-HTML5-标准提供了哪些新的-API？\" class=\"headerlink\" title=\"35.HTML5 标准提供了哪些新的 API？\"></a>35.HTML5 标准提供了哪些新的 API？</h6><blockquote>\n<p>HTML5 提供的应用程序 API 主要有：<br>• Media API<br>• Text Track API<br>• Application Cache API<br>• User Interaction<br>• Data Transfer API<br>• Command API<br>• Constraint Validation API<br>• History API</p>\n</blockquote>\n<h6 id=\"36-HTML5-存储类型有什么区别？\"><a href=\"#36-HTML5-存储类型有什么区别？\" class=\"headerlink\" title=\"36.HTML5 存储类型有什么区别？\"></a>36.HTML5 存储类型有什么区别？</h6><blockquote>\n<p>HTML5 能够本地存储数据，在之前都是使用 cookies 使用的。 HTML5 提供了下面两种本地存储方案：<br>• localStorage 用于持久化的本地存储，数据永远不会过期，关闭浏览器也不会丢失。<br>• sessionStorage 同一个会话中的页面才能访问并且当会话结束后数据也随之销毁。因此sessionStorage不是一种持久化的本地存储，仅仅是会话级别的存储</p>\n</blockquote>\n<h6 id=\"37-HTML5-应用程序缓存和浏览器缓存有什么区别？\"><a href=\"#37-HTML5-应用程序缓存和浏览器缓存有什么区别？\" class=\"headerlink\" title=\"37.HTML5 应用程序缓存和浏览器缓存有什么区别？\"></a>37.HTML5 应用程序缓存和浏览器缓存有什么区别？</h6><blockquote>\n<p><strong>应用程序缓存</strong>是 HTML5 的重要特性之一，提供了离线使用的功能，让应用程序可以获取本地的网站内容，例如 HTML 、 CSS 、图片以及 JavaScript 。这个特性可以提高网站性能，它的实现借助于 manifest 文件，如下：</p>\n<pre><code>&lt;!doctype html&gt;\n&lt;html manifest=”example.appcache”&gt;\n…\n&lt;/html&gt;\n</code></pre><p>与传统浏览器缓存相比，它不强制用户访问的网站内容被缓存。</p>\n</blockquote>\n<h6 id=\"38-HTML5-Canvas-元素有什么用？\"><a href=\"#38-HTML5-Canvas-元素有什么用？\" class=\"headerlink\" title=\"38.HTML5 Canvas 元素有什么用？\"></a>38.HTML5 Canvas 元素有什么用？</h6><blockquote>\n<p>Canvas 元素用于在网页上绘制图形，该元素标签强大之处在于可以直接在 HTML 上进行图形操作，</p>\n<pre><code>&lt;canvas id=” canvas1 ″ width= ” 300 ″ height= ” 100 ″ &gt;\n&lt;/canvas&gt;\n</code></pre></blockquote>\n<h6 id=\"39-除了-audio-和-video，HTML5-还有哪些媒体标签？\"><a href=\"#39-除了-audio-和-video，HTML5-还有哪些媒体标签？\" class=\"headerlink\" title=\"39.除了 audio 和 video，HTML5 还有哪些媒体标签？\"></a>39.除了 audio 和 video，HTML5 还有哪些媒体标签？</h6><blockquote>\n<p>HTML5 对于多媒体提供了强有力的支持，除了 audio 和 video 标签外，还支持以下标签：</p>\n<ul>\n<li><embed> 标签定义嵌入的内容，比如插件。<br><code>&lt;embed type=” video/quicktime ” src= ” Fishing.mov ” &gt;</code></li>\n<li><source> 对于定义多个数据源很有用。<pre><code>&lt;video width=” 450 ″ height= ” 340 ″ controls&gt;\n&lt;source src=” jamshed.mp4 ″ type= ” video/mp4 ″ &gt;\n&lt;source src=” jamshed.ogg ” type= ” video/ogg ” &gt;\n&lt;/video&gt;\n</code></pre></li>\n<li><track> 标签为诸如 video 元素之类的媒介规定外部文本轨道。 用于规定字幕文件或其他包含文本的文件，当媒介播放时，这些文件是可见的。<pre><code>&lt;video width=” 450 ″ height= ” 340 ″ controls&gt;\n  &lt;source src=” jamshed.mp4 ″ type= ” video/mp4 ″ &gt;\n  &lt;source src=” jamshed.ogg ” type= ” video/ogg ” &gt;\n  &lt;track kind=” subtitles ” label= ” English ” src= ” jamshed_en.vtt ” srclang= ” en ” default&gt;&lt;/track&gt;\n  &lt;track kind=” subtitles ” label= ” Arabic ” src= ” jamshed_ar.vtt ” srclang= ” ar ” &gt;&lt;/track&gt;\n&lt;/video&gt;\n</code></pre>据源很有用。标签为诸如 video 元素之类的媒介规定外部文本轨道。 用于规定字幕文件或其他包含文本的文件，当媒介播放时，这些文件是可见的。</li>\n</ul>\n</blockquote>\n<h6 id=\"40-HTML5-中如何嵌入视频？\"><a href=\"#40-HTML5-中如何嵌入视频？\" class=\"headerlink\" title=\"40.HTML5 中如何嵌入视频？\"></a>40.HTML5 中如何嵌入视频？</h6><blockquote>\n<p>和音频类似，HTML5 支持 MP4 、 WebM 和 Ogg 格式的视频，下面是简单示例：</p>\n<pre><code>&lt;video width=” 450 ″ height= ” 340 ″ controls&gt;\n    &lt;source src=” jamshed.mp4 ″ type= ” video/mp4 ″ &gt;\n    Your browser does’ nt support video embedding feature.\n&lt;/video&gt;\n</code></pre></blockquote>\n<h6 id=\"4-HTML5-中如何嵌入音频？\"><a href=\"#4-HTML5-中如何嵌入音频？\" class=\"headerlink\" title=\"4.HTML5 中如何嵌入音频？\"></a>4.HTML5 中如何嵌入音频？</h6><blockquote>\n<p>HTML5 支持 MP3 、 Wav 和 Ogg 格式的音频，下面是在网页中嵌入音频的简单示例：</p>\n<pre><code>&lt;audio controls&gt;\n    &lt;source src=” jamshed.mp3 ″ type= ” audio/mpeg ” &gt;\n    Your browser does’ nt support audio embedding feature.\n&lt;/audio&gt;\n</code></pre></blockquote>\n<h6 id=\"42-新的-HTML5-文档类型和字符集是？\"><a href=\"#42-新的-HTML5-文档类型和字符集是？\" class=\"headerlink\" title=\"42 .新的 HTML5 文档类型和字符集是？\"></a>42 .新的 HTML5 文档类型和字符集是？</h6><blockquote>\n<p>HTML5 文档类型很简单：</p>\n<pre><code>&lt;!doctype html&gt;\n&lt;!--HTML5 使用 UTF-8 编码示例--&gt;\n&lt;meta charset=” UTF-8 ″ &gt;\n</code></pre></blockquote>\n<h6 id=\"43-解释一下CSS的盒子模型？\"><a href=\"#43-解释一下CSS的盒子模型？\" class=\"headerlink\" title=\"43.解释一下CSS的盒子模型？\"></a>43.解释一下CSS的盒子模型？</h6><blockquote>\n<p>回答一：<br>a、<strong>标准的css盒子模型</strong>：宽度=内容的宽度+边框的宽度+加上内边具的宽度<br>b、网页设计中常听的属性名：内容(content)、填充(padding)、边框(border)、边界(margin)， CSS盒子模式都具备这些属性。<br>c、这些属性我们可以把它转移到我们日常生活中的盒子（箱子）上来理解，日常生活中所见的盒子也就是能装东西的一种箱子，也具有这些属性，所以叫它盒子模式。CSS盒子模型就是在网页设计中经常用到的CSS技术所使用的一种思维模型。<br>回答二：<br>盒子模型也有人称为框模型，HTML中的多数元素都会在浏览器中生成一个矩形的区域，每个区域包含四个组成部分，从外向内依次是：外边距（Margin）、边框（Border）、内边距（Padding）和内容（Content），其实盒子模型有两种，分别是 ie 盒子模型和标准 w3c 盒子模型，加上了doctype声明，让所有浏览器都会采用标准 w3c 盒子模型去解释你的盒子。</p>\n</blockquote>\n<h6 id=\"44-请你说说CSS选择器的类型有哪些，并举几个例子说明其用法？\"><a href=\"#44-请你说说CSS选择器的类型有哪些，并举几个例子说明其用法？\" class=\"headerlink\" title=\"44. 请你说说CSS选择器的类型有哪些，并举几个例子说明其用法？\"></a>44. 请你说说CSS选择器的类型有哪些，并举几个例子说明其用法？</h6><blockquote>\n<p>类型：基础的选择器、组合选择器、属性选择器、伪类、伪元素</p>\n</blockquote>\n<h6 id=\"45-请你说说CSS有什么特殊性-（优先级、计算特殊值）\"><a href=\"#45-请你说说CSS有什么特殊性-（优先级、计算特殊值）\" class=\"headerlink\" title=\"45.请你说说CSS有什么特殊性?（优先级、计算特殊值）\"></a>45.请你说说CSS有什么特殊性?（优先级、计算特殊值）</h6><blockquote>\n<p>优先级<br>(1)、同类型，同级别的样式后者先于前者<br>(2))、ID &gt; 类样式 &gt; 标签 &gt;<br>(3)、内联&gt;ID选择器&gt;伪类&gt;属性选择器&gt;类选择器&gt;标签选择器&gt;通用选择器()&gt;继承的样式<br>(4)、具体 &gt; 泛化的，特殊性即css优先级<br>(5)、近的 &gt; 远的 (内嵌样式 &gt; 内部样式表 &gt; 外联样式表)<br>  <strong>内嵌样式</strong>：内嵌在元素中，<span style=\"color:red\">span</span><br>  <strong>内部样式表</strong>：在页面中的样式，写在<style></style>中的样式<br><strong>外联样式表</strong>：单独存在一个css文件中，通过link引入或import导入的样式<br>(6)、!important 权重最高，比 inline style 还要高</p>\n<hr>\n<p>计算特殊性值<br>important &gt; 内嵌 &gt; ID &gt; 类 &gt; 标签 | 伪类 | 属性选择 &gt; 伪对象 &gt; 继承 &gt; 通配符<br>权重、特殊性计算法：<br>CSS样式选择器分为4个等级，a、b、c、d<br>(1)、如果样式是行内样式（通过Style=“”定义），那么a=1，1,0,0,0<br>(2)、b为ID选择器的总数 0,1,0,0<br>(3)、c为属性选择器，伪类选择器和class类选择器的数量。0,0,1,0<br>(4)、d为标签、伪元素选择器的数量 0,0,0,1<br>(5)、!important 权重最高，比 inline style 还要高<br>比如结果为：1093比1100，按位比较，从左到右，只要一位高于则立即胜出，否则继续比较。</p>\n</blockquote>\n<h6 id=\"46-要动态改变层中内容可以使用的方法？\"><a href=\"#46-要动态改变层中内容可以使用的方法？\" class=\"headerlink\" title=\"46.要动态改变层中内容可以使用的方法？\"></a>46.要动态改变层中内容可以使用的方法？</h6><blockquote>\n<p>innerHTML，innerText</p>\n</blockquote>\n","site":{"data":{"ours":{"our1":{"date":"2017-07-23T00:00:00.000Z","title":"women","desc":"hello"}},"head":{"Baidu":"<script> var _hmt = _hmt || []; (function() { var hm = document.createElement(\"script\"); hm.src = \"https://hm.baidu.com/hm.js?2faaec6fd26d66bbf5e331e48cc87735\"; var s = document.getElementsByTagName(\"script\")[0]; s.parentNode.insertBefore(hm, s); })(); </script>","Google":"<!-- Global Site Tag (gtag.js) - Google Analytics --> <script async src=\"https://www.googletagmanager.com/gtag/js?id=UA-106635475-1\"></script> <script> window.dataLayer = window.dataLayer || []; function gtag(){dataLayer.push(arguments)}; gtag('js', new Date());\ngtag('config', 'UA-106635475-1'); </script>"},"gallery":{"自拍-1":{"full_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy1.jpg","thumb_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy1.jpg","descr":"自拍哈哈哈哈！"},"自拍-2":{"full_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy2.jpg","thumb_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy2.jpg","descr":"自拍哈哈哈哈！"},"自拍-3":{"full_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy3.jpg","thumb_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy3.jpg","descr":"自拍哈哈哈哈！"},"自拍-4":{"full_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy4.jpg","thumb_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy4.jpg","descr":"自拍哈哈哈哈！"},"自拍-5":{"full_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy5.jpg","thumb_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy5.jpg","descr":"自拍哈哈哈哈！"},"自拍-6":{"full_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy6.jpg","thumb_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy6.jpg","descr":"自拍哈哈哈哈！"},"自拍-7":{"full_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy7.jpg","thumb_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy7.jpg","descr":"自拍哈哈哈哈！"},"《sleep no more》":{"full_link":"http://ow9cw9x3t.bkt.clouddn.com/sleep-no-more.jpg","thumb_link":"http://ow9cw9x3t.bkt.clouddn.com/sleep-no-more.jpg","descr":"自拍哈哈哈哈！"},"《sleep no more》-2":{"full_link":"http://ow9cw9x3t.bkt.clouddn.com/sleep-no-more-2.jpg","thumb_link":"http://ow9cw9x3t.bkt.clouddn.com/sleep-no-more-2.jpg","descr":"自拍哈哈哈哈！"}},"links":{"neoFelhz1":{"link":"https://nfz.moe/","avatar":"https://qiniu.viosey.com/img/blog/favatar/neofelhz1.png","descr":"拾穗者的故事"},"创造狮":{"link":"http://chuangzaoshi.com/","avatar":"https://qiniu.viosey.com/img/blog/favatar/chuangzaoshi.png","descr":" 为创意工作者而设计"}}}},"excerpt":"","more":"<h6 id=\"1-浏览器页面有哪三层构成，分别是什么，作用是什么\"><a href=\"#1-浏览器页面有哪三层构成，分别是什么，作用是什么\" class=\"headerlink\" title=\"1. 浏览器页面有哪三层构成，分别是什么，作用是什么?\"></a>1. 浏览器页面有哪三层构成，分别是什么，作用是什么?</h6><blockquote>\n<p>构成：结构层、表示层、行为层<br>分别是：HTML、CSS、JavaScript<br>作用：HTML实现页面结构，CSS完成页面的表现与风格，JavaScript实现一些客户端的功能与业务。</p>\n</blockquote>\n<h5 id=\"2-HTML5的优点与缺点？\"><a href=\"#2-HTML5的优点与缺点？\" class=\"headerlink\" title=\"2.HTML5的优点与缺点？\"></a>2.HTML5的优点与缺点？</h5><blockquote>\n<p>优点：<br>a、网络标准统一、HTML5本身是由W3C推荐出来的。<br>b、多设备、跨平台<br>c、即时更新。<br>d、提高可用性和改进用户的友好体验；<br>e、有几个新的标签，这将有助于开发人员定义重要的内容；<br>f、可以给站点带来更多的多媒体元素(视频和音频)；<br>g、可以很好的替代Flash和Silverlight；<br>h、涉及到网站的抓取和索引的时候，对于SEO很友好；<br>i、被大量应用于移动应用程序和游戏。</p>\n<p>缺点：<br>a、安全：像之前Firefox4的web socket和透明代理的实现存在严重的安全问题，同时web storage、web socket 这样的功能很容易被黑客利用，来盗取用户的信息和资料。<br>b、完善性：许多特性各浏览器的支持程度也不一样。<br>c、技术门槛：HTML5简化开发者工作的同时代表了有许多新的属性和API需要开发者学习，像web worker、web socket、web storage 等新特性，后台甚至浏览器原理的知识，机遇的同时也是巨大的挑战<br>d、性能：某些平台上的引擎问题导致HTML5性能低下。<br>e、浏览器兼容性：最大缺点，IE9以下浏览器几乎全军覆没。</p>\n</blockquote>\n<h6 id=\"3-Doctype作用-严格模式与混杂模式如何区分？它们有何意义\"><a href=\"#3-Doctype作用-严格模式与混杂模式如何区分？它们有何意义\" class=\"headerlink\" title=\"3.Doctype作用? 严格模式与混杂模式如何区分？它们有何意义?\"></a>3.Doctype作用? 严格模式与混杂模式如何区分？它们有何意义?</h6><blockquote>\n<p>回答1：<br>（1）、 声明位于文档中的最前面，处于标签之前。告知浏览器的解析器，用什么文档类型 规范来解析这个文档。<br>（2）、严格模式的排版和JS 运作模式是以该浏览器支持的最高标准运行。<br>（3）、在混杂模式中，页面以宽松的向后兼容的方式显示。模拟老式浏览器的行为以防止站点无法工作。<br>（4）、DOCTYPE不存在或格式不正确会导致文档以混杂模式呈现。</p>\n<hr>\n<p>回答2：<br>doctype声明指出阅读程序应该用什么规则集来解释文档中的标记。在Web文档的情况下，“阅读程序”通常是浏览器或者校验器这样的一个程序，“规则”则是W3C所发布的一个文档类型定义（DTD）中包含的规则。<br>(1) 声明位于文档中的最前面的位置，处于标签之前。此标签可告知浏览器文档使用哪种 HTML 或 XHTML 规范。该标签可声明三种 DTD 类型，分别表示严格版本、过渡版本以及基于框架的HTML 文档。<br>(2)所谓的标准模式是指，浏览器按 W3C 标准解析执行代码；怪异模式则是使用浏览器自己的方式解析执行代码，因为不同浏览器解析执行的方式不一样，所以我们称之为怪异模式。 严格模式是浏览器根据web标准去解析页面，是一种要求严格的DTD，不允许使用任何表现层的语法，如<br>。严格模式的排版和JS 运作模式是以该浏览器支持的最高标准运行混杂模式则是一种向后兼容的解析方法，说的透明点就是可以实现IE5.5以下版本浏览器的渲染模式。<br>(3)浏览器解析时到底使用标准模式还是怪异模式，与你网页中的 DTD 声明直接相关， DTD 声明定义了标准文档的类型（标准模式解析）文档类型，会使浏览器使用相应的方式加载网页并显示，忽略 DTD 声明 ,将使网页进入怪异模式。</p>\n</blockquote>\n<h6 id=\"4-HTML5有哪些新特性、移除了哪些元素？\"><a href=\"#4-HTML5有哪些新特性、移除了哪些元素？\" class=\"headerlink\" title=\"4.HTML5有哪些新特性、移除了哪些元素？\"></a>4.HTML5有哪些新特性、移除了哪些元素？</h6><blockquote>\n<p>Html5 <strong>新增了 <code>27</code>个元素，废弃了<code>16</code>个元素</strong>，根据现有的标准规范，把 HTML5 的元素按优先级定义为结构性属性、级块性元素、行内语义性元素和交互性元素 4 大类。</p>\n<ol>\n<li><strong>结构性元素主要负责web上下文结构的定义</strong><br><code>section</code>：在 web 页面应用中，该元素也可以用于区域的章节描述。<br><code>header</code>：页面主体上的头部， header 元素往往在一对 body 元素中。<br><code>footer</code>：页面的底部（页脚），通常会标出网站的相关信息。<br><code>nav</code>：专门用于菜单导航、链接导航的元素，是 navigator 的缩写。<br><code>article</code>：用于表现一篇文章的主体内容，一般为文字集中显示的区域。</li>\n<li><strong>级块性元素主要完成web页面区域的划分，确保内容的有效分割</strong><br><code>aside</code>：用于表达注记、贴士、侧栏、摘要、插入的引用等作为补充主体的内容。<br><code>figure</code>：是对多个元素进行组合并展示的元素，通常与 ficaption 联合使用。<br><code>code</code>：表示一段代码块。<br><code>dialog</code>：用于表达人与人之间的对话，该元素包含 dt 和 dd 这两个组合元素， dt 用于表示说话者，而 dd 用来表示说话内容。<br>行内语义性元素主要完成web页面具体内容的引用和描述，是丰富内容展示的基础。<br><code>meter</code>：表示特定范围内的数值，可用于工资、数量、百分比等。<br><code>time</code>：表示时间值。<br><code>progress</code>：用来表示进度条，可通过对其 max 、 min 、 step 等属性进行控制，完成对进度的表示和监事。<br><code>video</code>：视频元素，用于支持和实现视频文件的直接播放，支持缓冲预载和多种视频媒体格式。<br><code>audio</code>：音频元素，用于支持和实现音频文件的直接播放，支持缓冲预载和多种音频媒体格式。<br>交互性元素主要用于功能性的内容表达，会有一定的内容和数据的关联，是各种事件的基础。<br><code>details</code>：用来表示一段具体的内容，但是内容默认可能不显示，通过某种手段（如单击）与 legend 交互才会显示出来。<br><code>datagrid</code>：用来控制客户端数据与显示，可以由动态脚本及时更新。<br><code>menu</code>：主要用于交互菜单（曾被废弃又被重新启用的元素）。<br><code>command</code>：用来处理命令按钮。</li>\n</ol>\n</blockquote>\n<h6 id=\"5-你做的网页在哪些流览器测试过-这些浏览器的内核分别是什么\"><a href=\"#5-你做的网页在哪些流览器测试过-这些浏览器的内核分别是什么\" class=\"headerlink\" title=\"5.你做的网页在哪些流览器测试过,这些浏览器的内核分别是什么?\"></a>5.你做的网页在哪些流览器测试过,这些浏览器的内核分别是什么?</h6><blockquote>\n<p>a、 IE: trident 内核<br>b、 Firefox: gecko 内核<br>c、 Safari: webkit 内核<br>d、 Opera: 以前是 presto 内核， Opera 现已改用 Google Chrome 的 Blink 内核<br>e、 Chrome:Blink( 基于 webkit ， Google 与 Opera Software 共同开发 )</p>\n</blockquote>\n<h6 id=\"6-每个HTML文件里开头都有个很重要的东西，Doctype，知道这是干什么的吗？\"><a href=\"#6-每个HTML文件里开头都有个很重要的东西，Doctype，知道这是干什么的吗？\" class=\"headerlink\" title=\"6. 每个HTML文件里开头都有个很重要的东西，Doctype，知道这是干什么的吗？\"></a>6. 每个HTML文件里开头都有个很重要的东西，Doctype，知道这是干什么的吗？</h6><blockquote>\n<p>声明位于文档中的最前面的位置，处于标签之前。此标签可告知浏览器文档使用哪种 HTML 或 XHTML 规范。（<strong>重点：告诉浏览器按照何种规范解析页面</strong>）</p>\n</blockquote>\n<h6 id=\"7-说说你对HTML5认识-（是什么-为什么）\"><a href=\"#7-说说你对HTML5认识-（是什么-为什么）\" class=\"headerlink\" title=\"7.说说你对HTML5认识?（是什么,为什么）\"></a>7.说说你对HTML5认识?（是什么,为什么）</h6><blockquote>\n<p><strong> 是什么：</strong><br>HTML5指的是包括 HTML 、 CSS 和 JavaScript 在内的一套技术组合。它希望能够减少网页浏览器对于需要插件的丰富性网络应用服务（ Plug-in-Based Rich Internet Application ， RIA ），例如： AdobeFlash 、 Microsoft Silverlight 与 Oracle JavaFX 的需求，并且提供更多能有效加强网络应用的标准集。 HTML5 是 HTML 最新版本， 2014 年 10 月由万维网联盟（ W3C ）完成标准制定。目标是替换 1999 年所制定的 HTML 4.01 和 XHTML 1.0 标准，以期能在互联网应用迅速发展的时候，使网络标准达到匹配当代的网络需求。</p>\n<hr>\n<p><strong>为什么:</strong><br>HTML4陈旧不能满足日益发展的互联网需要，特别是移动互联网。为了增强浏览器功能 Flash 被广泛使用，但安全与稳定堪忧，不适合在移动端使用（耗电、触摸、不开放）。<br>HTML5增强了浏览器的原生功能，符合 HTML5 规范的浏览器功能将更加强大，减少了 Web 应用对插件的依赖，让用户体验更好，让开发更加方便，另外 W3C 从推出 HTML4.0 到 5.0 之间共经历了 17 年， HTML 的变化很小，这并不符合一个好产品的演进规则。</p>\n</blockquote>\n<h6 id=\"8-对WEB标准以及W3C的理解与认识\"><a href=\"#8-对WEB标准以及W3C的理解与认识\" class=\"headerlink\" title=\"8.对WEB标准以及W3C的理解与认识?\"></a>8.对WEB标准以及W3C的理解与认识?</h6><blockquote>\n<ol>\n<li>标签闭合、标签小写、不乱嵌套、提高搜索机器人搜索几率、使用外链css和 js 脚本、结构行为表现的分离，</li>\n<li>文件下载与页面速度更快、内容能被更多的用户所访问、内容能被更广泛的设备所访问、更少的代码和组件，</li>\n<li>容易维护、改版方便，不需要变动页面内容、提供打印版本而不需要复制内容、提高网站易用性。</li>\n</ol>\n</blockquote>\n<h6 id=\"9-HTML5行内元素有哪些-块级元素有哪些-空元素有哪些\"><a href=\"#9-HTML5行内元素有哪些-块级元素有哪些-空元素有哪些\" class=\"headerlink\" title=\"9.HTML5行内元素有哪些,块级元素有哪些, 空元素有哪些?\"></a>9.HTML5行内元素有哪些,块级元素有哪些, 空元素有哪些?</h6><blockquote>\n<p><strong>行内元素</strong></p>\n<ul>\n<li>a - 锚点</li>\n<li>abbr - 缩写</li>\n<li>acronym - 首字</li>\n<li>b - 粗体 ( 不推荐 )</li>\n<li>bdo - bidi override</li>\n<li>big - 大字体</li>\n<li>br - 换行</li>\n<li>cite - 引用</li>\n<li>code - 计算机代码 ( 在引用源码的时候需要 )</li>\n<li>dfn - 定义字段</li>\n<li>em - 强调</li>\n<li>font - 字体设定 ( 不推荐 )</li>\n<li>i - 斜体</li>\n<li>img - 图片</li>\n<li>input - 输入框</li>\n<li>kbd - 定义键盘文本</li>\n<li>label - 表格标签</li>\n<li>q - 短引用</li>\n<li>s - 中划线 ( 不推荐 )</li>\n<li>samp - 定义范例计算机代码</li>\n<li>select - 项目选择</li>\n<li>small - 小字体文本</li>\n<li>span - 常用内联容器，定义文本内区块</li>\n<li>strike - 中划线</li>\n<li>strong - 粗体强调</li>\n<li>sub - 下标</li>\n<li>sup - 上标</li>\n<li>textarea - 多行文本输入框</li>\n<li>tt - 电传文本</li>\n<li>u - 下划线</li>\n<li>var - 定义变量</li>\n</ul>\n<hr>\n<p><strong>块元素 (block element)</strong></p>\n<ul>\n<li>address - 地址</li>\n<li>blockquote - 块引用</li>\n<li>center - 举中对齐块</li>\n<li>dir - 目录列表</li>\n<li>div - 常用块级容易，也是 css layout 的主要标签</li>\n<li>dl - 定义列表</li>\n<li>fieldset - form控制组</li>\n<li>form - 交互表单</li>\n<li>h3 - 大标题</li>\n<li>h4 - 副标题</li>\n<li>h3 - 3级标题</li>\n<li>h4 - 4级标题</li>\n<li>h5 - 5级标题</li>\n<li>h6 - 6级标题</li>\n<li>hr - 水平分隔线</li>\n<li>isindex - input prompt</li>\n<li>menu - 菜单列表</li>\n<li>noframes - frames可选内容，（对于不支持 frame 的浏览器显示此区块内容</li>\n<li>noscript - ）可选脚本内容（对于不支持 script 的浏览器显示此内容）</li>\n<li>ol - 排序表单</li>\n<li>p - 段落</li>\n<li>pre - 格式化文本</li>\n<li>table - 表格</li>\n<li>ul - 非排序列表<br>可变元素<br>可变元素为根据上下文语境决定该元素为块元素或者内联元素。</li>\n<li>applet - java applet</li>\n<li>button - 按钮</li>\n<li>del - 删除文本</li>\n<li>iframe - inline frame</li>\n<li>ins - 插入的文本</li>\n<li>map - 图片区块 (map)</li>\n<li>object - object对象</li>\n<li>script - 客户端脚本</li>\n</ul>\n<hr>\n<p><strong>空元素 ( 在 HTML[1] 元素中，没有内容的 HTML 元素被称为空元素 )</strong></p>\n<ul>\n<li><code>br</code></li>\n<li><code>hr</code></li>\n<li><code>input</code></li>\n<li><code>img</code></li>\n<li><code>link</code> </li>\n<li><code>meta</code></li>\n</ul>\n</blockquote>\n<h6 id=\"10-什么是WebGL-它有什么优点\"><a href=\"#10-什么是WebGL-它有什么优点\" class=\"headerlink\" title=\"10.什么是WebGL,它有什么优点?\"></a>10.什么是WebGL,它有什么优点?</h6><blockquote>\n<p>WebGL（全写 Web Graphics Library ）是一种 3D 绘图标准，这种绘图技术标准允许把 JavaScript 和 OpenGL ES 2.0 结合在一起，通过增加OpenGL ES 2.0 的一个 JavaScript 绑定， WebGL 可以为 HTML5 Canvas 提供硬件 3D 加速渲染，这样 Web 开发人员就可以借助系统显卡来在浏览器里更流畅地展示 3D 场景和模型了，还能创建复杂的导航和数据视觉化。显然， WebGL 技术标准免去了开发网页专用渲染插件的麻烦，可被用于创建具有复杂 3D 结构的网站页面，甚至可以用来设计 3D 网页游戏等等。</p>\n<hr>\n<p>WebGL完美地解决了现有的 Web 交互式三维动画的两个问题：<br>第一，它通过HTML脚本本身实现 Web 交互式三维动画的制作，无需任何浏览器插件支持 ;<br>第二，它利用底层的图形硬件加速功能进行的图形渲染，是通过统一的、标准的、跨平台的OpenGL接口实现的。<br>通俗说WebGL中 canvas 绘图中的 3D 版本。因为原生的 WebGL 很复杂，我们经常会使用一些三方的库，如 three.js 等，这些库多数用于HTML5 游戏开发。</p>\n</blockquote>\n<h6 id=\"11-请你描述一下-cookies，sessionStorage-和-localStorage-的区别\"><a href=\"#11-请你描述一下-cookies，sessionStorage-和-localStorage-的区别\" class=\"headerlink\" title=\"11.请你描述一下 cookies，sessionStorage 和 localStorage 的区别?\"></a>11.请你描述一下 cookies，sessionStorage 和 localStorage 的区别?</h6><blockquote>\n<p>sessionStorage 和 localStorage 是 HTML5 Web Storage API 提供的，可以方便的在 web 请求之间保存数据。有了本地数据，就可以避免数据在浏览器和服务器间不必要地来回传递。<br>sessionStorage、 localStorage 、 cookie 都是在浏览器端存储的数据，其中 sessionStorage 的概念很特别，引入了一个“浏览器窗口”的概念。</p>\n<ol>\n<li><strong>sessionStorage</strong> 是在<strong>同源的同窗口（或 tab ）</strong>中，始终存在的数据。也就是说只要这个浏览器窗口没有关闭，即使刷新页面或进入同源另一页面，数据仍然存在。<strong>关闭窗口后， sessionStorage 即被销毁</strong>。同时“独立”打开的不同窗口，即使是同一页面， sessionStorage 对象也是不同的<br><strong>cookies会发送到服务器端。其余两个不会。</strong><br>Microsoft 指出 Internet Explorer 8 增加 cookie 限制为每个域名 50 个，但 IE7 似乎也允许每个域名 50 个 cookie 。 Firefox 每个域名 cookie 限制为 50 个。 Opera 每个域名 cookie 限制为 30 个。 Firefox 和 Safari 允许 cookie 多达 4097 个字节，包括名（ name ）、值（ value ）和等号。 Opera 许 cookie 多达 4096 个字节，包括：名（ name ）、值（ value ）和等号。 Internet Explorer 允许 cookie 多达 4095 个字节，包括：名（ name ）、值（ value ）和等号。</li>\n</ol>\n<hr>\n<p>区别：<br><strong>Cookie</strong><br>每个域名存储量比较小（各浏览器不同，大致 4K ）<br>所有域名的存储量有限制（各浏览器不同，大致 4K ）<br>有个数限制（各浏览器不同）<br>会随请求发送到服务器<br><strong>LocalStorage</strong><br>永久存储<br>单个域名存储量比较大（推荐 5MB ，各浏览器不同）<br>总体数量无限制<br><strong>SessionStorage</strong><br>只在 Session 内有效<br>存储量更大（推荐没有限制，但是实际上各浏览器也不同）</p>\n</blockquote>\n<h6 id=\"12-说说你对HTML语义化的理解\"><a href=\"#12-说说你对HTML语义化的理解\" class=\"headerlink\" title=\"12.说说你对HTML语义化的理解?\"></a>12.说说你对HTML语义化的理解?</h6><blockquote>\n<p>(1) 什么是 HTML 语义化？<br>  根据内容的结构化（内容语义化），选择合适的标签（代码语义化）便于开发者阅读和写出更优雅的代码的同时让浏览器的爬虫和机器很好地解析。<br>      <strong>基本上都是围绕着几个主要的标签，像标题（ H1~H6 ）、列表（ li ）、强调（ strong em ）等等</strong></p>\n<hr>\n<p>(2) 为什么要语义化？</p>\n<ol>\n<li>为了在没有CSS的情况下，页面也能呈现出很好地内容结构、代码结构 : 为了裸奔时好看；</li>\n<li>用户体验：例如title、 alt 用于解释名词或解释图片信息、 label 标签的活用；</li>\n<li>有利于SEO：和搜索引擎建立良好沟通，有助于爬虫抓取更多的有效信息：爬虫依赖于标签来确定上下文和各个关键字的权重；</li>\n<li>方便其他设备解析（如屏幕阅读器、盲人阅读器、移动设备）以意义的方式来渲染网页；</li>\n<li>便于团队开发和维护，语义化更具可读性，是下一步吧网页的重要动向，遵循W3C标准的团队都遵循这个标准，可以减少差异化。</li>\n</ol>\n<hr>\n<p>(3) 语义化标签</p>\n<p><header></header></p>\n<p><footer></footer></p>\n<p><nav></nav></p>\n<p><section></section></p>\n<p><article></article> SM:用来在页面中表示一套结构完整且独立的内容部分</p>\n<p><aslde> SM:主题的附属信息 ( 用途很广，主要就是一个附属内容 ) ，如果 article 里面为一篇文章的话，那么文章的作者以及信息内容就是这篇文章的附属内容了</aslde></p>\n<p><figure></figure>SM:媒体元素，比如一些视频，图片啊等等</p>\n<p><datalist></datalist>SM:选项列表，与 input 元素配合使用，来定义 input 可能的值</p>\n<p><details></details>SM:用于描述文档或者文档某个部分的细节 ~ 默认属性为 open~<br>ps:配合 summary 一起使用</p>\n</blockquote>\n<h6 id=\"13-link和-import的区别\"><a href=\"#13-link和-import的区别\" class=\"headerlink\" title=\"13.link和@import的区别?\"></a>13.link和@import的区别?</h6><blockquote>\n<pre><code>&lt;link rel=&#39;stylesheet&#39; rev=&#39;stylesheet&#39; href=&#39;CSS文件 &#39; type=&#39;text/css&#39; media=&#39;all&#39; /&gt;\n</code></pre><pre><code>&lt;style type=&#39;text/css&#39; media=&#39;screen&#39;&gt;\n    @import url(&#39;CSS文件 &#39;);\n&lt;/style&gt;\n</code></pre><hr>\n<p>两者都是外部引用CSS的方式，但是存在一定的区别：</p>\n<ul>\n<li><code>link</code> 是 XHTML 标签，除了加载 <code>CSS</code> 外，还可以定义<code>RSS</code> 等其他事务； <code>@import</code>属于 CSS 范畴，只能加载 CSS 。</li>\n<li><code>link</code> 引用 CSS 时，在页面载入时同时加载；<code>@import</code>需要页面网页完全载入以后加载。</li>\n<li><code>link</code> 是 XHTML 标签，无兼容问题； <code>@import</code> 是在 CSS2.1 提出的，低版本的浏览器不支持。</li>\n<li><code>link</code> 支持使用 Javascript 控制 DOM 去改变样式；而 <code>@import</code> 不支持。</li>\n</ul>\n</blockquote>\n<h6 id=\"14-说说你对SVG理解\"><a href=\"#14-说说你对SVG理解\" class=\"headerlink\" title=\"14.说说你对SVG理解?\"></a>14.说说你对SVG理解?</h6><blockquote>\n<p><code>SVG可缩放矢量图形（ Scalable Vector Graphics ）</code>是基于可扩展标记语言（ XML ），用于描述二维矢量图形的一种图形格式。 SVG 是W3C(‘World Wide Web ConSortium’ 即 ‘ 国际互联网标准组织 ‘) 在 2000 年 8 月制定的一种新的<code>二维矢量图形格式</code>，也是规范中的网络矢量图形标准。 SVG 严格遵从 XML 语法，并用文本格式的描述性语言来描述图像内容，因此是一种和图像分辨率无关的矢量图形格式。 SVG 于 2003 年 1 月14 日成为 W3C 推荐标准。</p>\n<hr>\n<p>特点：</p>\n<ol>\n<li><strong>任意放缩</strong>。用户可以任意缩放图像显示，而不会破坏图像的清晰度、细节等。</li>\n<li><strong>文本独立</strong>。SVG图像中的文字独立于图像，文字保留可编辑和可搜寻的状态。也不会再有字体的限制，用户系统即使没有安装某一字体，也会看到和他们制作时完全相同的画面。</li>\n<li><strong>较小文件</strong>。总体来讲，SVG文件比那些 GIF 和 JPEG 格式的文件要小很多，因而下载也很快。</li>\n<li><strong>超强显示效果</strong>。SVG图像在屏幕上总是边缘清晰，它的清晰度适合任何屏幕分辨率和打印分辨率。</li>\n<li><strong>超级颜色控制</strong>。SVG图像提供一个 1600 万种颜色的调色板，支持 ICC 颜色描述文件标准、 RGB 、线 X 填充、渐变和蒙版。</li>\n<li><strong>交互 X 和智能化</strong>。 SVG 面临的主要问题一个是如何和已经占有重要市场份额的矢量图形格式 Flash 竞争的问题，另一个问题就是 SVG 的本地运行环境下的厂家支持程度。</li>\n<li><strong>浏览器支持</strong><blockquote>\n<p>Internet Explorer9，火狐，谷歌 Chrome ， Opera 和 Safari 都支持 SVG 。<br>IE8和早期版本都需要一个插件 - 如 Adobe SVG 浏览器，这是免费提供的。</p>\n</blockquote>\n</li>\n</ol>\n</blockquote>\n<h6 id=\"15-HTML全局属性-global-attribute-有哪些\"><a href=\"#15-HTML全局属性-global-attribute-有哪些\" class=\"headerlink\" title=\"15.HTML全局属性(global attribute)有哪些?\"></a>15.HTML全局属性(global attribute)有哪些?</h6><blockquote>\n<p>MDN: html global attribute或者W3C HTML global-attributes accesskey:设置快捷键，提供快速访问元素如aaa在windows下的firefox中按alt + shift + a可激活元素 class:为元素设置类标识，多个类名用空格分开，CSS和javascript可通过class属性获取元素 contenteditable: 指定元素内容是否可编辑 contextmenu: 自定义鼠标右键弹出菜单内容 data-*: 为元素增加自定义属性 dir: 设置元素文本方向 draggable: 设置元素是否可拖拽 dropzone: 设置元素拖放类型： copy, move, link hidden: 表示一个元素是否与文档。样式上会导致元素不显示，但是不能用这个属性实现样式效果 id: 元素id，文档内唯一 lang: 元素内容的的语言 spellcheck: 是否启动拼写和语法检查 style: 行内css样式 tabindex: 设置元素可以获得焦点，通过tab可以导航 title: 元素相关的建议信息 translate: 元素和子孙节点内容是否需要本地化</p>\n</blockquote>\n<h6 id=\"16-说说超链接target属性的取值和作用？\"><a href=\"#16-说说超链接target属性的取值和作用？\" class=\"headerlink\" title=\"16.说说超链接target属性的取值和作用？\"></a>16.说说超链接target属性的取值和作用？</h6><blockquote>\n<p><code>target</code>这个属性指定所链接的页面在浏览器窗口中的打开方式。<br>它的参数值主要有：<br>a、<code>_blank</code> ：在新浏览器窗口中打开链接文件<br>b、<code>_parent</code> ：将链接的文件载入含有该链接框架的父框架集或父窗口中。如果含有该链接的框架不是嵌套的，则在浏览器全屏窗口中载入链接的文件，就象 _self 参数。<br>c、 <code>_self</code> ：在同一框架或窗口中打开所链接的文档。此参数为默认值，通常不用指定。<br>d、<code>_top</code> ：在当前的整个浏览器窗口中打开所链接的文档，因而会删除所有框架。</p>\n</blockquote>\n<h6 id=\"17-data-属性的作用是什么？\"><a href=\"#17-data-属性的作用是什么？\" class=\"headerlink\" title=\"17.data-属性的作用是什么？\"></a>17.data-属性的作用是什么？</h6><blockquote>\n<p><code>data-xxx</code>为前端开发者提供<strong>自定义的属性</strong>，这些属性集可以通过对象的 <code>dataset</code>属性获取，不支持该属性的浏览器可以通过 <code>getAttribute</code>方法获取。</p>\n<p>需要注意的是：<code>data-xxx</code>之后的以连字符分割的多个单词组成的属性，获取的时候使用<strong>驼峰风格</strong>。并不是所有的浏览器都支持<code>.dataset 属性</code>，测试的浏览器中只有 Chrome 和 Opera 支持。<br>即：当没有合适的属性和元素时，自定义的 data 属性是能够存储页面或 App 的私有的自定义数据。</p>\n</blockquote>\n<h6 id=\"18-介绍一下你对浏览器内核的理解？\"><a href=\"#18-介绍一下你对浏览器内核的理解？\" class=\"headerlink\" title=\"18.介绍一下你对浏览器内核的理解？\"></a>18.介绍一下你对浏览器内核的理解？</h6><blockquote>\n<p>浏览器内核主要分成两部分：<strong><code>渲染引擎(layout engineer或 Rendering Engine)</code></strong> 和<strong> <code>JS 引擎</code></strong>。<br><strong>渲染引擎</strong>：负责取得网页的内容（HTML、 XML 、图像等等）、整理讯息（例如加载 CSS 等），以及计算网页的显示方式，然后会输出至显示器或打印机。浏览器的内核的不同对于网页的语法解释会有不同，所以渲染的效果也不相同。所有网页浏览器、电子邮件客户端以及其它需要编辑、显示网络内容的应用程序都需要内核。<br><strong>JS引擎</strong>：解析和执行 javascript 来实现网页的动态效果。</p>\n<hr>\n<p>最开始渲染引擎和JS引擎并没有区分的很明确，后来 JS 引擎越来越独立，内核就倾向于只指渲染引擎。</p>\n</blockquote>\n<h6 id=\"19-常见的浏览器内核有哪些？\"><a href=\"#19-常见的浏览器内核有哪些？\" class=\"headerlink\" title=\"19.常见的浏览器内核有哪些？\"></a>19.常见的浏览器内核有哪些？</h6><blockquote>\n<ol>\n<li><code>Trident内核</code>： <code>IE</code>,<code>MaxThon</code>,<code>TT</code>,<code>The World</code>,<code>360</code>, <code>搜狗</code>等。[ 又称 MSHTML]</li>\n<li><code>Gecko内核</code>： <code>Netscape6</code> 及以上版本，<code>FF</code>,<code>MozillaSuite/SeaMonkey</code>等</li>\n<li><code>Presto内核</code>： <code>Opera7</code>及以上。[<code>Opera</code> 内核原为： <code>Presto</code> ，现为：<code>Blink</code>;]</li>\n<li><code>Webkit内核</code>： <code>Safari</code>,<code>Chrome</code> 等。[ <code>Chrome</code> 的： <code>Blink （ WebKit 的分支）</code> ]</li>\n</ol>\n</blockquote>\n<h6 id=\"20-iframe有那些缺点？\"><a href=\"#20-iframe有那些缺点？\" class=\"headerlink\" title=\"20.iframe有那些缺点？\"></a>20.iframe有那些缺点？</h6><blockquote>\n<ol>\n<li>iframe会阻塞主页面的 Onload 事件； </li>\n<li>搜索引擎的检索程序无法解读这种页面，不利于 SEO;</li>\n<li>iframe和主页面共享连接池，而浏览器对相同域的连接有限制，所以会影响页面的并行加载。</li>\n</ol>\n<hr>\n<p>使用iframe之前需要考虑这两个缺点。如果需要使用 iframe，最好是<strong>通过 javascript动态给iframe添加 src 属性值</strong>，这样可以绕开以上两个问题。</p>\n</blockquote>\n<h6 id=\"21-Label的作用是什么，是怎么用的？\"><a href=\"#21-Label的作用是什么，是怎么用的？\" class=\"headerlink\" title=\"21.Label的作用是什么，是怎么用的？\"></a>21.Label的作用是什么，是怎么用的？</h6><blockquote>\n<p><code>label</code>标签来<em>定义表单控制间的关系</em> , 当用户选择该标签时，浏览器会自动将焦点转到和标签相关的表单控件上。</p>\n<pre><code>&lt;label for=&#39;Name&#39;&gt;Number:&lt;/label&gt;\n&lt;input type=“ text “ name=&#39;Name&#39; id=&#39;Name&#39;/&gt;\n&lt;label&gt;Date:&lt;input type=&#39;text&#39; name=&#39;B&#39;/&gt;&lt;/label&gt;\n</code></pre></blockquote>\n<h6 id=\"22-如何实现浏览器内多个标签页之间的通信\"><a href=\"#22-如何实现浏览器内多个标签页之间的通信\" class=\"headerlink\" title=\"22.如何实现浏览器内多个标签页之间的通信?\"></a>22.如何实现浏览器内多个标签页之间的通信?</h6><blockquote>\n<p><code>WebSocket</code>、 <code>SharedWorker</code>；<br>也可以调用<code>localstorge</code>、 <code>cookies</code> 等本地存储方式；<br><code>localstorge</code> 另一个浏览上下文里被添加、修改或删除时，它都会触发一个事件，我们通过监听事件，控制它的值来进行页面信息通信；</p>\n<hr>\n<p>注意quirks： Safari 在无痕模式下设置 localstorge 值时会抛出 QuotaExceededError 的异常；</p>\n</blockquote>\n<h6 id=\"23-如何在页面上实现一个圆形的可点击区域？\"><a href=\"#23-如何在页面上实现一个圆形的可点击区域？\" class=\"headerlink\" title=\"23.如何在页面上实现一个圆形的可点击区域？\"></a>23.如何在页面上实现一个圆形的可点击区域？</h6><blockquote>\n<p>a、 map+area(锚点图) 或者 svg<br>b、   <code>border-radius</code><br>c、纯 js 实现 需要求一个点在不在圆上简单算法、获取鼠标坐标等等</p>\n</blockquote>\n<h5 id=\"24-title与h3的区别、b与strong的区别、i与em的区别？\"><a href=\"#24-title与h3的区别、b与strong的区别、i与em的区别？\" class=\"headerlink\" title=\"24.title与h3的区别、b与strong的区别、i与em的区别？\"></a>24.title与h3的区别、b与strong的区别、i与em的区别？</h5><blockquote>\n<ul>\n<li><code>title</code>属性没有明确意义只表示是个标题， <code>H1</code> 则表示层次明确的标题，对页面信息的抓取也有很大的影响；</li>\n<li><code>strong</code>是标明重点内容，有语气加强的含义，使用阅读设备阅读网络时： 会重读，而 <code>&lt;B&gt;</code>是展示强调内容。</li>\n<li><code>i</code>内容展示为斜体， <code>em</code> 表示强调的文本；</li>\n</ul>\n<hr>\n<ul>\n<li>Physical Style Elements – 自然样式标签<br>b, i, u, s, pre</li>\n<li>Semantic Style Elements – 语义样式标签<br>strong, em, ins, del, code<br><em>应该准确使用语义样式标签, 但不能滥用 , 如果不能确定时首选使用自然样式标签。</em></li>\n</ul>\n</blockquote>\n<h6 id=\"25-实现不使用-border-画出1px高的线，在不同浏览器的标准模式与怪异模式下都能保持一致的效果？\"><a href=\"#25-实现不使用-border-画出1px高的线，在不同浏览器的标准模式与怪异模式下都能保持一致的效果？\" class=\"headerlink\" title=\"25.实现不使用 border 画出1px高的线，在不同浏览器的标准模式与怪异模式下都能保持一致的效果？\"></a>25.实现不使用 border 画出1px高的线，在不同浏览器的标准模式与怪异模式下都能保持一致的效果？</h6><blockquote>\n<p><code>&lt;div style=&#39;height:1px;overflow:hidden;background:red&#39;&gt;&lt;/div&gt;</code></p>\n</blockquote>\n<h6 id=\"26-HTML5标签的作用-用途\"><a href=\"#26-HTML5标签的作用-用途\" class=\"headerlink\" title=\"26.HTML5标签的作用?(用途)\"></a>26.HTML5标签的作用?(用途)</h6><blockquote>\n<p>a、使Web页面的内容更加有序和规范<br>b、使搜索引擎更加容易按照HTML5规则识别出有效的内容<br>c、使Web页面更接近于一种数据字段和表</p>\n</blockquote>\n<h6 id=\"27-简述一下src与href的区别？\"><a href=\"#27-简述一下src与href的区别？\" class=\"headerlink\" title=\"27.简述一下src与href的区别？\"></a>27.简述一下src与href的区别？</h6><blockquote>\n<p>src用于替换当前元素， href 用于在当前文档和引用资源之间确立联系。<br>src是 source 的缩写，指向外部资源的位置，指向的内容将会嵌入到文档中当前标签所在位置；在请求 src 资源时会将其指向的资源下载并应用到文档内，例如 js 脚本， img 图片和 frame 等元素。<br><code>&lt;script src =&#39;js.js&#39;&gt;&lt;/script&gt;</code><br>当浏览器解析到该元素时，会暂停其他资源的下载和处理，直到将该资源加载、编译、执行完毕，图片和框架等元素也如此，类似于将所指向资源嵌入当前标签内。这也是为什么将js脚本放在底部而不是头部。<br>href是 Hypertext Reference 的缩写，指向网络资源所在位置，建立和当前元素（锚点）或当前文档（链接）之间的链接，如果我们在文档中添加<br><code>&lt;link href=&#39;common.css&#39; rel=&#39;stylesheet&#39;/&gt;</code>，那么浏览器会识别该文档为css文件，就会并行下载资源并且不会停止对当前文档的处理。这也是为什么建议使用 link 方式来加载 css ，而不是使用@import 方式。</p>\n</blockquote>\n<h6 id=\"28-谈谈你对canvas的理解？\"><a href=\"#28-谈谈你对canvas的理解？\" class=\"headerlink\" title=\"28.谈谈你对canvas的理解？\"></a>28.谈谈你对canvas的理解？</h6><blockquote>\n<p>canvas是HTML5中新增一个HTML5标签与操作canvas的javascript API，它可以实现在网页中完成动态的2D与3D图像技术。标记和 SVG以及 VML 之间的一个重要的不同是，有一个基于 JavaScript 的绘图 API，而 SVG 和 VML 使用一个 XML 文档来描述绘图。SVG 绘图很容易编辑与生成，但功能明显要弱一些。 canvas可以完成动画、游戏、图表、图像处理等原来需要Flash完成的一些功能。</p>\n</blockquote>\n<h6 id=\"29-WebSocket与消息推送？\"><a href=\"#29-WebSocket与消息推送？\" class=\"headerlink\" title=\"29.WebSocket与消息推送？\"></a>29.WebSocket与消息推送？</h6><blockquote>\n<p>B/S架构的系统多使用HTTP协议，<br>HTTP协议的特点： 1 无状态协议 2 用于通过 Internet 发送请求消息和响应消息 3 使用端口接收和发送消息，默认为80端口 底层通信还是使用Socket完成。<br>HTTP协议决定了服务器与客户端之间的连接方式，无法直接实现消息推送（ F5 已坏） , 一些变相的解决办法：<br>双向通信与消息推送<br>轮询：客户端定时向服务器发送Ajax请求，服务器接到请求后马上返回响应信息并关闭连接。<br>优点：后端程序编写比较容易。<br>缺点：请求中有大半是无用，浪费带宽和服务器资源。<br>实例：适于小型应用。<br>长轮询：客户端向服务器发送Ajax请求，服务器接到请求后 hold 住连接，直到有新消息才返回响应信息并关闭连接，客户端处理完响应信息后再向服务器发送新的请求。<br>优点：在无消息的情况下不会频繁的请求，耗费资小。<br>缺点：服务器hold连接会消耗资源，返回数据顺序无保证，难于管理维护。 Comet 异步的 ashx ，<br>实例：WebQQ、 Hi 网页版、 Facebook IM 。<br>长连接：在页面里嵌入一个隐蔵iframe，将这个隐蔵 iframe 的 src 属性设为对一个长连接的请求或是采用 xhr 请求，服务器端就能源源不断地往客户端输入数据。<br>优点：消息即时到达，不发无用请求；管理起来也相对便。<br>缺点：服务器维护一个长连接会增加开销。<br>实例：Gmail聊天<br>Flash Socket：在页面中内嵌入一个使用了 Socket 类的 Flash 程序 JavaScript 通过调用此 Flash 程序提供的 Socket 接口与服务器端的 Socket 接口进行通信， JavaScript 在收到服务器端传送的信息后控制页面的显示。<br>优点：实现真正的即时通信，而不是伪即时。<br>缺点：客户端必须安装Flash插件；非 HTTP 协议，无法自动穿越防火墙。<br>实例：网络互动游戏。<br>Websocket:<br>WebSocket是 HTML5 开始提供的一种浏览器与服务器间进行全双工通讯的网络技术。依靠这种技术可以实现客户端和服务器端的长连接，双向实时通信。<br>特点:<br>a、事件驱动<br>b、异步<br>c、使用 ws 或者 wss 协议的客户端 socket<br>d、能够实现真正意义上的推送功能<br>缺点：少部分浏览器不支持，浏览器支持的程度与方式有区别。</p>\n</blockquote>\n<h6 id=\"30-img的title和alt有什么区别？\"><a href=\"#30-img的title和alt有什么区别？\" class=\"headerlink\" title=\"30.img的title和alt有什么区别？\"></a>30.img的title和alt有什么区别？</h6><blockquote>\n<p><code>alt</code> 用于图片无法加载时显示<br><code>title</code> 为该属性提供信息，通常当鼠标滑动到元素上的时候显示</p>\n</blockquote>\n<h6 id=\"31-表单的基本组成部分有哪些，表单的主要用途是什么？\"><a href=\"#31-表单的基本组成部分有哪些，表单的主要用途是什么？\" class=\"headerlink\" title=\"31.表单的基本组成部分有哪些，表单的主要用途是什么？\"></a>31.表单的基本组成部分有哪些，表单的主要用途是什么？</h6><blockquote>\n<p>组成：表单标签、表单域、表单按钮</p>\n<p>a、表单标签：这里面包含了处理表单数据所用 CGI 程序的 URL, 以及数据提交到服务器的方法。<br>b、表单域：包含了文本框、密码框、隐藏域、多行文本框、复选框、单选框、下拉选择框、和文件上传框等。<br>c、表单按钮：包括提交按钮，复位按钮和一般按钮；用于将数据传送到服务器上的 CGI 脚本或者取消输入，还可以用表单按钮来控制其他定义了处理脚本的处理工作。<br>主要用途：表单在网页中主要负责数据采集的功能，和向服务器传送数据。</p>\n</blockquote>\n<h6 id=\"32-表单提交中Get和Post方式的区别？\"><a href=\"#32-表单提交中Get和Post方式的区别？\" class=\"headerlink\" title=\"32.表单提交中Get和Post方式的区别？\"></a>32.表单提交中Get和Post方式的区别？</h6><blockquote>\n<ol>\n<li>get 是从服务器上获取数据， post 是向服务器传送数据。</li>\n<li>get 是把参数数据队列加到提交表单的 ACTION 属性所指的 URL 中，值和表单内各个字段一一对应，在 URL 中可以看到。 post 是通过 HTTP post 机制，将表单内各个字段与其内容放置在 HTML HEADER 内一起传送到 ACTION 属性所指的 URL 地址 , 用户看不到这个过程。</li>\n<li>对于 get 方式，服务器端用 Request.QueryString 获取变量的值，对于 post 方式，服务器端用 Request.Form 获取提交的数据。</li>\n<li>get 传送的数据量较小，不能大于 2KB 。 post 传送的数据量较大，一般被默认为不受限制。但理论上， IIS4 中最大量为 80KB ， IIS5 中为100KB 。</li>\n<li>get 安全性非常低， post 安全性较高。</li>\n</ol>\n</blockquote>\n<h6 id=\"33-HTML5-有哪些新增的表单元素？\"><a href=\"#33-HTML5-有哪些新增的表单元素？\" class=\"headerlink\" title=\"33.HTML5 有哪些新增的表单元素？\"></a>33.HTML5 有哪些新增的表单元素？</h6><blockquote>\n<p>HTML5 新增了很多表单元素让开发者构建更优秀的 Web 应用程序。<br>• datalist<br>• datetime<br>• output<br>• keygen<br>• date<br>• month<br>• week<br>• time<br>• color<br>• number<br>• range<br>• email<br>• Url</p>\n</blockquote>\n<h6 id=\"34-HTML5-废弃了哪些-HTML4-标签？\"><a href=\"#34-HTML5-废弃了哪些-HTML4-标签？\" class=\"headerlink\" title=\"34.HTML5 废弃了哪些 HTML4 标签？\"></a>34.HTML5 废弃了哪些 HTML4 标签？</h6><blockquote>\n<p>HTML5 废弃了一些过时的，不合理的HTML 标签：<br>• frame<br>• frameset<br>• noframe<br>• applet<br>• big<br>• center<br>• basefront</p>\n</blockquote>\n<h6 id=\"35-HTML5-标准提供了哪些新的-API？\"><a href=\"#35-HTML5-标准提供了哪些新的-API？\" class=\"headerlink\" title=\"35.HTML5 标准提供了哪些新的 API？\"></a>35.HTML5 标准提供了哪些新的 API？</h6><blockquote>\n<p>HTML5 提供的应用程序 API 主要有：<br>• Media API<br>• Text Track API<br>• Application Cache API<br>• User Interaction<br>• Data Transfer API<br>• Command API<br>• Constraint Validation API<br>• History API</p>\n</blockquote>\n<h6 id=\"36-HTML5-存储类型有什么区别？\"><a href=\"#36-HTML5-存储类型有什么区别？\" class=\"headerlink\" title=\"36.HTML5 存储类型有什么区别？\"></a>36.HTML5 存储类型有什么区别？</h6><blockquote>\n<p>HTML5 能够本地存储数据，在之前都是使用 cookies 使用的。 HTML5 提供了下面两种本地存储方案：<br>• localStorage 用于持久化的本地存储，数据永远不会过期，关闭浏览器也不会丢失。<br>• sessionStorage 同一个会话中的页面才能访问并且当会话结束后数据也随之销毁。因此sessionStorage不是一种持久化的本地存储，仅仅是会话级别的存储</p>\n</blockquote>\n<h6 id=\"37-HTML5-应用程序缓存和浏览器缓存有什么区别？\"><a href=\"#37-HTML5-应用程序缓存和浏览器缓存有什么区别？\" class=\"headerlink\" title=\"37.HTML5 应用程序缓存和浏览器缓存有什么区别？\"></a>37.HTML5 应用程序缓存和浏览器缓存有什么区别？</h6><blockquote>\n<p><strong>应用程序缓存</strong>是 HTML5 的重要特性之一，提供了离线使用的功能，让应用程序可以获取本地的网站内容，例如 HTML 、 CSS 、图片以及 JavaScript 。这个特性可以提高网站性能，它的实现借助于 manifest 文件，如下：</p>\n<pre><code>&lt;!doctype html&gt;\n&lt;html manifest=”example.appcache”&gt;\n…\n&lt;/html&gt;\n</code></pre><p>与传统浏览器缓存相比，它不强制用户访问的网站内容被缓存。</p>\n</blockquote>\n<h6 id=\"38-HTML5-Canvas-元素有什么用？\"><a href=\"#38-HTML5-Canvas-元素有什么用？\" class=\"headerlink\" title=\"38.HTML5 Canvas 元素有什么用？\"></a>38.HTML5 Canvas 元素有什么用？</h6><blockquote>\n<p>Canvas 元素用于在网页上绘制图形，该元素标签强大之处在于可以直接在 HTML 上进行图形操作，</p>\n<pre><code>&lt;canvas id=” canvas1 ″ width= ” 300 ″ height= ” 100 ″ &gt;\n&lt;/canvas&gt;\n</code></pre></blockquote>\n<h6 id=\"39-除了-audio-和-video，HTML5-还有哪些媒体标签？\"><a href=\"#39-除了-audio-和-video，HTML5-还有哪些媒体标签？\" class=\"headerlink\" title=\"39.除了 audio 和 video，HTML5 还有哪些媒体标签？\"></a>39.除了 audio 和 video，HTML5 还有哪些媒体标签？</h6><blockquote>\n<p>HTML5 对于多媒体提供了强有力的支持，除了 audio 和 video 标签外，还支持以下标签：</p>\n<ul>\n<li><embed> 标签定义嵌入的内容，比如插件。<br><code>&lt;embed type=” video/quicktime ” src= ” Fishing.mov ” &gt;</code></li>\n<li><source> 对于定义多个数据源很有用。<pre><code>&lt;video width=” 450 ″ height= ” 340 ″ controls&gt;\n&lt;source src=” jamshed.mp4 ″ type= ” video/mp4 ″ &gt;\n&lt;source src=” jamshed.ogg ” type= ” video/ogg ” &gt;\n&lt;/video&gt;\n</code></pre></li>\n<li><track> 标签为诸如 video 元素之类的媒介规定外部文本轨道。 用于规定字幕文件或其他包含文本的文件，当媒介播放时，这些文件是可见的。<pre><code>&lt;video width=” 450 ″ height= ” 340 ″ controls&gt;\n  &lt;source src=” jamshed.mp4 ″ type= ” video/mp4 ″ &gt;\n  &lt;source src=” jamshed.ogg ” type= ” video/ogg ” &gt;\n  &lt;track kind=” subtitles ” label= ” English ” src= ” jamshed_en.vtt ” srclang= ” en ” default&gt;&lt;/track&gt;\n  &lt;track kind=” subtitles ” label= ” Arabic ” src= ” jamshed_ar.vtt ” srclang= ” ar ” &gt;&lt;/track&gt;\n&lt;/video&gt;\n</code></pre>据源很有用。标签为诸如 video 元素之类的媒介规定外部文本轨道。 用于规定字幕文件或其他包含文本的文件，当媒介播放时，这些文件是可见的。</li>\n</ul>\n</blockquote>\n<h6 id=\"40-HTML5-中如何嵌入视频？\"><a href=\"#40-HTML5-中如何嵌入视频？\" class=\"headerlink\" title=\"40.HTML5 中如何嵌入视频？\"></a>40.HTML5 中如何嵌入视频？</h6><blockquote>\n<p>和音频类似，HTML5 支持 MP4 、 WebM 和 Ogg 格式的视频，下面是简单示例：</p>\n<pre><code>&lt;video width=” 450 ″ height= ” 340 ″ controls&gt;\n    &lt;source src=” jamshed.mp4 ″ type= ” video/mp4 ″ &gt;\n    Your browser does’ nt support video embedding feature.\n&lt;/video&gt;\n</code></pre></blockquote>\n<h6 id=\"4-HTML5-中如何嵌入音频？\"><a href=\"#4-HTML5-中如何嵌入音频？\" class=\"headerlink\" title=\"4.HTML5 中如何嵌入音频？\"></a>4.HTML5 中如何嵌入音频？</h6><blockquote>\n<p>HTML5 支持 MP3 、 Wav 和 Ogg 格式的音频，下面是在网页中嵌入音频的简单示例：</p>\n<pre><code>&lt;audio controls&gt;\n    &lt;source src=” jamshed.mp3 ″ type= ” audio/mpeg ” &gt;\n    Your browser does’ nt support audio embedding feature.\n&lt;/audio&gt;\n</code></pre></blockquote>\n<h6 id=\"42-新的-HTML5-文档类型和字符集是？\"><a href=\"#42-新的-HTML5-文档类型和字符集是？\" class=\"headerlink\" title=\"42 .新的 HTML5 文档类型和字符集是？\"></a>42 .新的 HTML5 文档类型和字符集是？</h6><blockquote>\n<p>HTML5 文档类型很简单：</p>\n<pre><code>&lt;!doctype html&gt;\n&lt;!--HTML5 使用 UTF-8 编码示例--&gt;\n&lt;meta charset=” UTF-8 ″ &gt;\n</code></pre></blockquote>\n<h6 id=\"43-解释一下CSS的盒子模型？\"><a href=\"#43-解释一下CSS的盒子模型？\" class=\"headerlink\" title=\"43.解释一下CSS的盒子模型？\"></a>43.解释一下CSS的盒子模型？</h6><blockquote>\n<p>回答一：<br>a、<strong>标准的css盒子模型</strong>：宽度=内容的宽度+边框的宽度+加上内边具的宽度<br>b、网页设计中常听的属性名：内容(content)、填充(padding)、边框(border)、边界(margin)， CSS盒子模式都具备这些属性。<br>c、这些属性我们可以把它转移到我们日常生活中的盒子（箱子）上来理解，日常生活中所见的盒子也就是能装东西的一种箱子，也具有这些属性，所以叫它盒子模式。CSS盒子模型就是在网页设计中经常用到的CSS技术所使用的一种思维模型。<br>回答二：<br>盒子模型也有人称为框模型，HTML中的多数元素都会在浏览器中生成一个矩形的区域，每个区域包含四个组成部分，从外向内依次是：外边距（Margin）、边框（Border）、内边距（Padding）和内容（Content），其实盒子模型有两种，分别是 ie 盒子模型和标准 w3c 盒子模型，加上了doctype声明，让所有浏览器都会采用标准 w3c 盒子模型去解释你的盒子。</p>\n</blockquote>\n<h6 id=\"44-请你说说CSS选择器的类型有哪些，并举几个例子说明其用法？\"><a href=\"#44-请你说说CSS选择器的类型有哪些，并举几个例子说明其用法？\" class=\"headerlink\" title=\"44. 请你说说CSS选择器的类型有哪些，并举几个例子说明其用法？\"></a>44. 请你说说CSS选择器的类型有哪些，并举几个例子说明其用法？</h6><blockquote>\n<p>类型：基础的选择器、组合选择器、属性选择器、伪类、伪元素</p>\n</blockquote>\n<h6 id=\"45-请你说说CSS有什么特殊性-（优先级、计算特殊值）\"><a href=\"#45-请你说说CSS有什么特殊性-（优先级、计算特殊值）\" class=\"headerlink\" title=\"45.请你说说CSS有什么特殊性?（优先级、计算特殊值）\"></a>45.请你说说CSS有什么特殊性?（优先级、计算特殊值）</h6><blockquote>\n<p>优先级<br>(1)、同类型，同级别的样式后者先于前者<br>(2))、ID &gt; 类样式 &gt; 标签 &gt;<br>(3)、内联&gt;ID选择器&gt;伪类&gt;属性选择器&gt;类选择器&gt;标签选择器&gt;通用选择器()&gt;继承的样式<br>(4)、具体 &gt; 泛化的，特殊性即css优先级<br>(5)、近的 &gt; 远的 (内嵌样式 &gt; 内部样式表 &gt; 外联样式表)<br>  <strong>内嵌样式</strong>：内嵌在元素中，<span style=\"color:red\">span</span><br>  <strong>内部样式表</strong>：在页面中的样式，写在<style></style>中的样式<br><strong>外联样式表</strong>：单独存在一个css文件中，通过link引入或import导入的样式<br>(6)、!important 权重最高，比 inline style 还要高</p>\n<hr>\n<p>计算特殊性值<br>important &gt; 内嵌 &gt; ID &gt; 类 &gt; 标签 | 伪类 | 属性选择 &gt; 伪对象 &gt; 继承 &gt; 通配符<br>权重、特殊性计算法：<br>CSS样式选择器分为4个等级，a、b、c、d<br>(1)、如果样式是行内样式（通过Style=“”定义），那么a=1，1,0,0,0<br>(2)、b为ID选择器的总数 0,1,0,0<br>(3)、c为属性选择器，伪类选择器和class类选择器的数量。0,0,1,0<br>(4)、d为标签、伪元素选择器的数量 0,0,0,1<br>(5)、!important 权重最高，比 inline style 还要高<br>比如结果为：1093比1100，按位比较，从左到右，只要一位高于则立即胜出，否则继续比较。</p>\n</blockquote>\n<h6 id=\"46-要动态改变层中内容可以使用的方法？\"><a href=\"#46-要动态改变层中内容可以使用的方法？\" class=\"headerlink\" title=\"46.要动态改变层中内容可以使用的方法？\"></a>46.要动态改变层中内容可以使用的方法？</h6><blockquote>\n<p>innerHTML，innerText</p>\n</blockquote>\n"},{"layout":"post","title":"CSS实现元素水平垂直居中","date":"2017-09-13T08:14:28.000Z","thumbnail":"http://ow9cw9x3t.bkt.clouddn.com/spider-man.jpg","top":true,"_content":"\n在前端开发过程中，盒子居中是常常用到的。其中 ，居中又可以分为水平居中和垂直居中。块级元素的水平居中比较容易，直接设置元素的```margin: 0 auto```就可以实现，垂直居中相对来说是比较复杂一些的。\n\n## 高度位置，使用绝对定位\n\n```css\n.parentElem {\n  position: relative;\n}\n\n.childElem {\n  position: absolute;\n  top: 50%;\n  transform: translateY(-50%);\n}\n```\n\n### 父容器高度已知\n\n> 且只有一个元素，只要使用相对定位即可\n\n```css\n.parentElem {\n  height: 200px;\n}\n\n.childElem {\n  position: relative;\n  top: 50%;\n  transform: translateY(-50%);\n}\n```\n\n## 水平居中方案\n### 行内元素\n```css\n  text-aligin: center;\n```\n### 块级元素，宽度固定\n```css\n  margin: 0 auto;\n```\n### 块级元素，宽度不定\n```css\n  margin: 0 auto;\n```\n","source":"_posts/实现元素水平垂直居中.md","raw":"---\nlayout: post\ntitle: CSS实现元素水平垂直居中\ndate: 2017-09-13 16:14:28\ntags: [CSS, CSS3]\ncategories: CSS\nthumbnail: http://ow9cw9x3t.bkt.clouddn.com/spider-man.jpg\ntop: true\n---\n\n在前端开发过程中，盒子居中是常常用到的。其中 ，居中又可以分为水平居中和垂直居中。块级元素的水平居中比较容易，直接设置元素的```margin: 0 auto```就可以实现，垂直居中相对来说是比较复杂一些的。\n\n## 高度位置，使用绝对定位\n\n```css\n.parentElem {\n  position: relative;\n}\n\n.childElem {\n  position: absolute;\n  top: 50%;\n  transform: translateY(-50%);\n}\n```\n\n### 父容器高度已知\n\n> 且只有一个元素，只要使用相对定位即可\n\n```css\n.parentElem {\n  height: 200px;\n}\n\n.childElem {\n  position: relative;\n  top: 50%;\n  transform: translateY(-50%);\n}\n```\n\n## 水平居中方案\n### 行内元素\n```css\n  text-aligin: center;\n```\n### 块级元素，宽度固定\n```css\n  margin: 0 auto;\n```\n### 块级元素，宽度不定\n```css\n  margin: 0 auto;\n```\n","slug":"实现元素水平垂直居中","published":1,"updated":"2017-09-22T06:49:17.287Z","_id":"cj7squ96d000i94tud7jtx1r1","comments":1,"photos":[],"link":"","content":"<p>在前端开发过程中，盒子居中是常常用到的。其中 ，居中又可以分为水平居中和垂直居中。块级元素的水平居中比较容易，直接设置元素的<code>margin: 0 auto</code>就可以实现，垂直居中相对来说是比较复杂一些的。</p>\n<h2 id=\"高度位置，使用绝对定位\"><a href=\"#高度位置，使用绝对定位\" class=\"headerlink\" title=\"高度位置，使用绝对定位\"></a>高度位置，使用绝对定位</h2><pre class=\" language-css\"><code class=\"language-css\"><span class=\"token selector\"><span class=\"token class\">.parentElem</span> </span><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">position</span><span class=\"token punctuation\">:</span> relative<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\"><span class=\"token class\">.childElem</span> </span><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">position</span><span class=\"token punctuation\">:</span> absolute<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">top</span><span class=\"token punctuation\">:</span> <span class=\"token number\">50%</span><span class=\"token punctuation\">;</span>\n  <span class=\"token property\">transform</span><span class=\"token punctuation\">:</span> <span class=\"token function\">translateY</span><span class=\"token punctuation\">(</span>-<span class=\"token number\">50%</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h3 id=\"父容器高度已知\"><a href=\"#父容器高度已知\" class=\"headerlink\" title=\"父容器高度已知\"></a>父容器高度已知</h3><blockquote>\n<p>且只有一个元素，只要使用相对定位即可</p>\n</blockquote>\n<pre class=\" language-css\"><code class=\"language-css\"><span class=\"token selector\"><span class=\"token class\">.parentElem</span> </span><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> <span class=\"token number\">200</span>px<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\"><span class=\"token class\">.childElem</span> </span><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">position</span><span class=\"token punctuation\">:</span> relative<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">top</span><span class=\"token punctuation\">:</span> <span class=\"token number\">50%</span><span class=\"token punctuation\">;</span>\n  <span class=\"token property\">transform</span><span class=\"token punctuation\">:</span> <span class=\"token function\">translateY</span><span class=\"token punctuation\">(</span>-<span class=\"token number\">50%</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h2 id=\"水平居中方案\"><a href=\"#水平居中方案\" class=\"headerlink\" title=\"水平居中方案\"></a>水平居中方案</h2><h3 id=\"行内元素\"><a href=\"#行内元素\" class=\"headerlink\" title=\"行内元素\"></a>行内元素</h3><pre class=\" language-css\"><code class=\"language-css\">  <span class=\"token property\">text-aligin</span><span class=\"token punctuation\">:</span> center<span class=\"token punctuation\">;</span>\n</code></pre>\n<h3 id=\"块级元素，宽度固定\"><a href=\"#块级元素，宽度固定\" class=\"headerlink\" title=\"块级元素，宽度固定\"></a>块级元素，宽度固定</h3><pre class=\" language-css\"><code class=\"language-css\">  <span class=\"token property\">margin</span><span class=\"token punctuation\">:</span> <span class=\"token number\">0</span> auto<span class=\"token punctuation\">;</span>\n</code></pre>\n<h3 id=\"块级元素，宽度不定\"><a href=\"#块级元素，宽度不定\" class=\"headerlink\" title=\"块级元素，宽度不定\"></a>块级元素，宽度不定</h3><pre class=\" language-css\"><code class=\"language-css\">  <span class=\"token property\">margin</span><span class=\"token punctuation\">:</span> <span class=\"token number\">0</span> auto<span class=\"token punctuation\">;</span>\n</code></pre>\n","site":{"data":{"ours":{"our1":{"date":"2017-07-23T00:00:00.000Z","title":"women","desc":"hello"}},"head":{"Baidu":"<script> var _hmt = _hmt || []; (function() { var hm = document.createElement(\"script\"); hm.src = \"https://hm.baidu.com/hm.js?2faaec6fd26d66bbf5e331e48cc87735\"; var s = document.getElementsByTagName(\"script\")[0]; s.parentNode.insertBefore(hm, s); })(); </script>","Google":"<!-- Global Site Tag (gtag.js) - Google Analytics --> <script async src=\"https://www.googletagmanager.com/gtag/js?id=UA-106635475-1\"></script> <script> window.dataLayer = window.dataLayer || []; function gtag(){dataLayer.push(arguments)}; gtag('js', new Date());\ngtag('config', 'UA-106635475-1'); </script>"},"gallery":{"自拍-1":{"full_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy1.jpg","thumb_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy1.jpg","descr":"自拍哈哈哈哈！"},"自拍-2":{"full_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy2.jpg","thumb_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy2.jpg","descr":"自拍哈哈哈哈！"},"自拍-3":{"full_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy3.jpg","thumb_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy3.jpg","descr":"自拍哈哈哈哈！"},"自拍-4":{"full_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy4.jpg","thumb_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy4.jpg","descr":"自拍哈哈哈哈！"},"自拍-5":{"full_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy5.jpg","thumb_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy5.jpg","descr":"自拍哈哈哈哈！"},"自拍-6":{"full_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy6.jpg","thumb_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy6.jpg","descr":"自拍哈哈哈哈！"},"自拍-7":{"full_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy7.jpg","thumb_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy7.jpg","descr":"自拍哈哈哈哈！"},"《sleep no more》":{"full_link":"http://ow9cw9x3t.bkt.clouddn.com/sleep-no-more.jpg","thumb_link":"http://ow9cw9x3t.bkt.clouddn.com/sleep-no-more.jpg","descr":"自拍哈哈哈哈！"},"《sleep no more》-2":{"full_link":"http://ow9cw9x3t.bkt.clouddn.com/sleep-no-more-2.jpg","thumb_link":"http://ow9cw9x3t.bkt.clouddn.com/sleep-no-more-2.jpg","descr":"自拍哈哈哈哈！"}},"links":{"neoFelhz1":{"link":"https://nfz.moe/","avatar":"https://qiniu.viosey.com/img/blog/favatar/neofelhz1.png","descr":"拾穗者的故事"},"创造狮":{"link":"http://chuangzaoshi.com/","avatar":"https://qiniu.viosey.com/img/blog/favatar/chuangzaoshi.png","descr":" 为创意工作者而设计"}}}},"excerpt":"","more":"<p>在前端开发过程中，盒子居中是常常用到的。其中 ，居中又可以分为水平居中和垂直居中。块级元素的水平居中比较容易，直接设置元素的<code>margin: 0 auto</code>就可以实现，垂直居中相对来说是比较复杂一些的。</p>\n<h2 id=\"高度位置，使用绝对定位\"><a href=\"#高度位置，使用绝对定位\" class=\"headerlink\" title=\"高度位置，使用绝对定位\"></a>高度位置，使用绝对定位</h2><pre><code class=\"css\">.parentElem {\n  position: relative;\n}\n\n.childElem {\n  position: absolute;\n  top: 50%;\n  transform: translateY(-50%);\n}\n</code></pre>\n<h3 id=\"父容器高度已知\"><a href=\"#父容器高度已知\" class=\"headerlink\" title=\"父容器高度已知\"></a>父容器高度已知</h3><blockquote>\n<p>且只有一个元素，只要使用相对定位即可</p>\n</blockquote>\n<pre><code class=\"css\">.parentElem {\n  height: 200px;\n}\n\n.childElem {\n  position: relative;\n  top: 50%;\n  transform: translateY(-50%);\n}\n</code></pre>\n<h2 id=\"水平居中方案\"><a href=\"#水平居中方案\" class=\"headerlink\" title=\"水平居中方案\"></a>水平居中方案</h2><h3 id=\"行内元素\"><a href=\"#行内元素\" class=\"headerlink\" title=\"行内元素\"></a>行内元素</h3><pre><code class=\"css\">  text-aligin: center;\n</code></pre>\n<h3 id=\"块级元素，宽度固定\"><a href=\"#块级元素，宽度固定\" class=\"headerlink\" title=\"块级元素，宽度固定\"></a>块级元素，宽度固定</h3><pre><code class=\"css\">  margin: 0 auto;\n</code></pre>\n<h3 id=\"块级元素，宽度不定\"><a href=\"#块级元素，宽度不定\" class=\"headerlink\" title=\"块级元素，宽度不定\"></a>块级元素，宽度不定</h3><pre><code class=\"css\">  margin: 0 auto;\n</code></pre>\n"},{"title":"CSS中的content和attr","date":"2017-09-15T08:37:47.000Z","top":true,"_content":"\ncontent和attr表达式，它们能在你的页面下面悄悄的使用CSS来生成内容，下面让我们看看attr和content如何相互配合产生神奇效果的。\n\n### 基本content用法\n\n> content属性能让程序员使用CSS往页面元素里填写内容：\n\n```css\n.myDiv:after {\n    content: \"我是一个使用*content*属性生产的静态文字\"; \n}\n ```\n\n请注意，如果想让伪元素```:after```绝对定位，你必须对你的div设置```position: relative```。\n\n### content和attr配合使用\n\n如果你不想把content内容在CSS里写死，那你可以使用attr表达式来从页面元素中动态的获取内容：\n> attr属性通常和自定义属性data-配合使用，因为传统的其它属性虽然也能存值，但通常不适合存放表达性文字。\n\n```css\n/* <div data-line=\"1\"></div> */\ndiv[data-line]:after {\n    content: attr(data-line); /* 属性名称上不要加引号！ */\n}\n```\n\n### content里的字符串连接操作\n\n> content内容支持字符串的拼接\n\n这种字符串连接很像常规编程语言了：\n\n```css\n/* <div data-line=\"1\"></div> */\ndiv[data-line]:after {\n    content: \"[line \" attr(data-line) \"]\";\n}\n```\n还需要用JavaScript里拼装字符串吗？CSS3里就能完成这些，是不是感觉CSS3可以部分的替代Javascript了！attr的动态生成页面内容的能力着实是一件让人兴奋的事情。你实际上可以用它配合content对页面的很多其他元素和属性进行操作。","source":"_posts/CSS中的content和attr.md","raw":"---\ntitle: CSS中的content和attr\ndate: 2017-09-15 16:37:47\ntags: CSS\ncategories: \ntop: true\n---\n\ncontent和attr表达式，它们能在你的页面下面悄悄的使用CSS来生成内容，下面让我们看看attr和content如何相互配合产生神奇效果的。\n\n### 基本content用法\n\n> content属性能让程序员使用CSS往页面元素里填写内容：\n\n```css\n.myDiv:after {\n    content: \"我是一个使用*content*属性生产的静态文字\"; \n}\n ```\n\n请注意，如果想让伪元素```:after```绝对定位，你必须对你的div设置```position: relative```。\n\n### content和attr配合使用\n\n如果你不想把content内容在CSS里写死，那你可以使用attr表达式来从页面元素中动态的获取内容：\n> attr属性通常和自定义属性data-配合使用，因为传统的其它属性虽然也能存值，但通常不适合存放表达性文字。\n\n```css\n/* <div data-line=\"1\"></div> */\ndiv[data-line]:after {\n    content: attr(data-line); /* 属性名称上不要加引号！ */\n}\n```\n\n### content里的字符串连接操作\n\n> content内容支持字符串的拼接\n\n这种字符串连接很像常规编程语言了：\n\n```css\n/* <div data-line=\"1\"></div> */\ndiv[data-line]:after {\n    content: \"[line \" attr(data-line) \"]\";\n}\n```\n还需要用JavaScript里拼装字符串吗？CSS3里就能完成这些，是不是感觉CSS3可以部分的替代Javascript了！attr的动态生成页面内容的能力着实是一件让人兴奋的事情。你实际上可以用它配合content对页面的很多其他元素和属性进行操作。","slug":"CSS中的content和attr","published":1,"updated":"2017-09-22T06:49:17.250Z","_id":"cj7squ986001c94tubx536m99","comments":1,"layout":"post","photos":[],"link":"","content":"<p>content和attr表达式，它们能在你的页面下面悄悄的使用CSS来生成内容，下面让我们看看attr和content如何相互配合产生神奇效果的。</p>\n<h3 id=\"基本content用法\"><a href=\"#基本content用法\" class=\"headerlink\" title=\"基本content用法\"></a>基本content用法</h3><blockquote>\n<p>content属性能让程序员使用CSS往页面元素里填写内容：</p>\n</blockquote>\n<pre class=\" language-css\"><code class=\"language-css\"><span class=\"token selector\"><span class=\"token class\">.myDiv</span><span class=\"token pseudo-element\">:after</span> </span><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">content</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"我是一个使用*content*属性生产的静态文字\"</span><span class=\"token punctuation\">;</span> \n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>请注意，如果想让伪元素<code>:after</code>绝对定位，你必须对你的div设置<code>position: relative</code>。</p>\n<h3 id=\"content和attr配合使用\"><a href=\"#content和attr配合使用\" class=\"headerlink\" title=\"content和attr配合使用\"></a>content和attr配合使用</h3><p>如果你不想把content内容在CSS里写死，那你可以使用attr表达式来从页面元素中动态的获取内容：</p>\n<blockquote>\n<p>attr属性通常和自定义属性data-配合使用，因为传统的其它属性虽然也能存值，但通常不适合存放表达性文字。</p>\n</blockquote>\n<pre class=\" language-css\"><code class=\"language-css\"><span class=\"token comment\" spellcheck=\"true\">/* &lt;div data-line=\"1\">&lt;/div> */</span>\n<span class=\"token selector\">div<span class=\"token attribute\">[data-line]</span><span class=\"token pseudo-element\">:after</span> </span><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">content</span><span class=\"token punctuation\">:</span> <span class=\"token function\">attr</span><span class=\"token punctuation\">(</span>data-line<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">/* 属性名称上不要加引号！ */</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h3 id=\"content里的字符串连接操作\"><a href=\"#content里的字符串连接操作\" class=\"headerlink\" title=\"content里的字符串连接操作\"></a>content里的字符串连接操作</h3><blockquote>\n<p>content内容支持字符串的拼接</p>\n</blockquote>\n<p>这种字符串连接很像常规编程语言了：</p>\n<pre class=\" language-css\"><code class=\"language-css\"><span class=\"token comment\" spellcheck=\"true\">/* &lt;div data-line=\"1\">&lt;/div> */</span>\n<span class=\"token selector\">div<span class=\"token attribute\">[data-line]</span><span class=\"token pseudo-element\">:after</span> </span><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">content</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"[line \"</span> <span class=\"token function\">attr</span><span class=\"token punctuation\">(</span>data-line<span class=\"token punctuation\">)</span> <span class=\"token string\">\"]\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>还需要用JavaScript里拼装字符串吗？CSS3里就能完成这些，是不是感觉CSS3可以部分的替代Javascript了！attr的动态生成页面内容的能力着实是一件让人兴奋的事情。你实际上可以用它配合content对页面的很多其他元素和属性进行操作。</p>\n","site":{"data":{"ours":{"our1":{"date":"2017-07-23T00:00:00.000Z","title":"women","desc":"hello"}},"head":{"Baidu":"<script> var _hmt = _hmt || []; (function() { var hm = document.createElement(\"script\"); hm.src = \"https://hm.baidu.com/hm.js?2faaec6fd26d66bbf5e331e48cc87735\"; var s = document.getElementsByTagName(\"script\")[0]; s.parentNode.insertBefore(hm, s); })(); </script>","Google":"<!-- Global Site Tag (gtag.js) - Google Analytics --> <script async src=\"https://www.googletagmanager.com/gtag/js?id=UA-106635475-1\"></script> <script> window.dataLayer = window.dataLayer || []; function gtag(){dataLayer.push(arguments)}; gtag('js', new Date());\ngtag('config', 'UA-106635475-1'); </script>"},"gallery":{"自拍-1":{"full_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy1.jpg","thumb_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy1.jpg","descr":"自拍哈哈哈哈！"},"自拍-2":{"full_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy2.jpg","thumb_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy2.jpg","descr":"自拍哈哈哈哈！"},"自拍-3":{"full_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy3.jpg","thumb_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy3.jpg","descr":"自拍哈哈哈哈！"},"自拍-4":{"full_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy4.jpg","thumb_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy4.jpg","descr":"自拍哈哈哈哈！"},"自拍-5":{"full_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy5.jpg","thumb_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy5.jpg","descr":"自拍哈哈哈哈！"},"自拍-6":{"full_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy6.jpg","thumb_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy6.jpg","descr":"自拍哈哈哈哈！"},"自拍-7":{"full_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy7.jpg","thumb_link":"http://ow9cw9x3t.bkt.clouddn.com/chengy7.jpg","descr":"自拍哈哈哈哈！"},"《sleep no more》":{"full_link":"http://ow9cw9x3t.bkt.clouddn.com/sleep-no-more.jpg","thumb_link":"http://ow9cw9x3t.bkt.clouddn.com/sleep-no-more.jpg","descr":"自拍哈哈哈哈！"},"《sleep no more》-2":{"full_link":"http://ow9cw9x3t.bkt.clouddn.com/sleep-no-more-2.jpg","thumb_link":"http://ow9cw9x3t.bkt.clouddn.com/sleep-no-more-2.jpg","descr":"自拍哈哈哈哈！"}},"links":{"neoFelhz1":{"link":"https://nfz.moe/","avatar":"https://qiniu.viosey.com/img/blog/favatar/neofelhz1.png","descr":"拾穗者的故事"},"创造狮":{"link":"http://chuangzaoshi.com/","avatar":"https://qiniu.viosey.com/img/blog/favatar/chuangzaoshi.png","descr":" 为创意工作者而设计"}}}},"excerpt":"","more":"<p>content和attr表达式，它们能在你的页面下面悄悄的使用CSS来生成内容，下面让我们看看attr和content如何相互配合产生神奇效果的。</p>\n<h3 id=\"基本content用法\"><a href=\"#基本content用法\" class=\"headerlink\" title=\"基本content用法\"></a>基本content用法</h3><blockquote>\n<p>content属性能让程序员使用CSS往页面元素里填写内容：</p>\n</blockquote>\n<pre><code class=\"css\">.myDiv:after {\n    content: &quot;我是一个使用*content*属性生产的静态文字&quot;; \n}\n</code></pre>\n<p>请注意，如果想让伪元素<code>:after</code>绝对定位，你必须对你的div设置<code>position: relative</code>。</p>\n<h3 id=\"content和attr配合使用\"><a href=\"#content和attr配合使用\" class=\"headerlink\" title=\"content和attr配合使用\"></a>content和attr配合使用</h3><p>如果你不想把content内容在CSS里写死，那你可以使用attr表达式来从页面元素中动态的获取内容：</p>\n<blockquote>\n<p>attr属性通常和自定义属性data-配合使用，因为传统的其它属性虽然也能存值，但通常不适合存放表达性文字。</p>\n</blockquote>\n<pre><code class=\"css\">/* &lt;div data-line=&quot;1&quot;&gt;&lt;/div&gt; */\ndiv[data-line]:after {\n    content: attr(data-line); /* 属性名称上不要加引号！ */\n}\n</code></pre>\n<h3 id=\"content里的字符串连接操作\"><a href=\"#content里的字符串连接操作\" class=\"headerlink\" title=\"content里的字符串连接操作\"></a>content里的字符串连接操作</h3><blockquote>\n<p>content内容支持字符串的拼接</p>\n</blockquote>\n<p>这种字符串连接很像常规编程语言了：</p>\n<pre><code class=\"css\">/* &lt;div data-line=&quot;1&quot;&gt;&lt;/div&gt; */\ndiv[data-line]:after {\n    content: &quot;[line &quot; attr(data-line) &quot;]&quot;;\n}\n</code></pre>\n<p>还需要用JavaScript里拼装字符串吗？CSS3里就能完成这些，是不是感觉CSS3可以部分的替代Javascript了！attr的动态生成页面内容的能力着实是一件让人兴奋的事情。你实际上可以用它配合content对页面的很多其他元素和属性进行操作。</p>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"cj7squ940000094tuqv6hx5nm","category_id":"cj7squ94u000494tu15rp1jqi","_id":"cj7squ967000f94tu316m8m2n"},{"post_id":"cj7squ94j000294tuhgd5wlf6","category_id":"cj7squ960000b94tuol9kb7fm","_id":"cj7squ96m000j94tufe5sn8vc"},{"post_id":"cj7squ95f000694tu9lwayodw","category_id":"cj7squ968000g94tu7sa1qp3m","_id":"cj7squ96t000p94tu0phlx79l"},{"post_id":"cj7squ95y000a94tukkx5xfxg","category_id":"cj7squ960000b94tuol9kb7fm","_id":"cj7squ96v000t94tu2squo4fv"},{"post_id":"cj7squ962000d94tuwrf7qwco","category_id":"cj7squ96t000o94tul7nrgqyg","_id":"cj7squ96x000w94tuzuemj1g7"},{"post_id":"cj7squ96d000i94tud7jtx1r1","category_id":"cj7squ96t000o94tul7nrgqyg","_id":"cj7squ96x000z94tuzjw9a0qt"}],"PostTag":[{"post_id":"cj7squ940000094tuqv6hx5nm","tag_id":"cj7squ95e000594tuk4sfke2d","_id":"cj7squ96r000m94tucibkjslt"},{"post_id":"cj7squ940000094tuqv6hx5nm","tag_id":"cj7squ960000c94tu39ouwlnp","_id":"cj7squ96s000n94tu3luo0a7l"},{"post_id":"cj7squ940000094tuqv6hx5nm","tag_id":"cj7squ969000h94tujhpt583i","_id":"cj7squ96u000r94tu6vkb6fv8"},{"post_id":"cj7squ94j000294tuhgd5wlf6","tag_id":"cj7squ96n000l94tu6lwg6qbd","_id":"cj7squ96v000s94tusah87s67"},{"post_id":"cj7squ95f000694tu9lwayodw","tag_id":"cj7squ96u000q94tugwex05hx","_id":"cj7squ96x000y94tumr1cqxsj"},{"post_id":"cj7squ95f000694tu9lwayodw","tag_id":"cj7squ96w000v94tue4yhynl0","_id":"cj7squ96y001094tu8bujs29k"},{"post_id":"cj7squ95y000a94tukkx5xfxg","tag_id":"cj7squ96n000l94tu6lwg6qbd","_id":"cj7squ96z001294tujx3mi32j"},{"post_id":"cj7squ962000d94tuwrf7qwco","tag_id":"cj7squ96y001194tuey5x4eyu","_id":"cj7squ972001694tuh0jzjocn"},{"post_id":"cj7squ962000d94tuwrf7qwco","tag_id":"cj7squ970001394tu1inhyspd","_id":"cj7squ973001794tuxauywtt1"},{"post_id":"cj7squ962000d94tuwrf7qwco","tag_id":"cj7squ971001494tu8fm3snjc","_id":"cj7squ974001994tuehdvgzuo"},{"post_id":"cj7squ96d000i94tud7jtx1r1","tag_id":"cj7squ970001394tu1inhyspd","_id":"cj7squ974001a94tuzdjvy6z3"},{"post_id":"cj7squ96d000i94tud7jtx1r1","tag_id":"cj7squ973001894turmu3ysky","_id":"cj7squ974001b94tuwg9ibgj4"},{"post_id":"cj7squ986001c94tubx536m99","tag_id":"cj7squ970001394tu1inhyspd","_id":"cj7squ98c001f94tua3wf1atu"}],"Tag":[{"name":"Javascript","_id":"cj7squ95e000594tuk4sfke2d"},{"name":"图片","_id":"cj7squ960000c94tu39ouwlnp"},{"name":"懒加载， 原生JS","_id":"cj7squ969000h94tujhpt583i"},{"name":"React","_id":"cj7squ96n000l94tu6lwg6qbd"},{"name":"Angular","_id":"cj7squ96u000q94tugwex05hx"},{"name":"ngSanitize","_id":"cj7squ96w000v94tue4yhynl0"},{"name":"HTML","_id":"cj7squ96y001194tuey5x4eyu"},{"name":"CSS","_id":"cj7squ970001394tu1inhyspd"},{"name":"面试","_id":"cj7squ971001494tu8fm3snjc"},{"name":"CSS3","_id":"cj7squ973001894turmu3ysky"}]}}